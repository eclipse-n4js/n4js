/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.expectmatrix.tests.N4JSExpectMatrixTest END_SETUP */

// Math.atan2()
// Source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/atan2

console.log(Math.atan2(90, 15)); // 1.4056476493802699
console.log(Math.atan2(15, 90)); // 0.16514867741462683

console.log(Math.atan2( +0, -0 ));               // +PI.
console.log(Math.atan2( -0, -0 ));               // -PI.
console.log(Math.atan2( +0, +0 ));               // +0.
console.log(Math.atan2( -0, +0 ));               // -0.
console.log(Math.atan2( +0, -5 ));               // +PI for x > 0.
console.log(Math.atan2( -0, -5 ));               // -PI for x > 0.
console.log(Math.atan2( +0, 5 ));                // +0 for x > 0.
console.log(Math.atan2( -0, 5 ));                // -0 for x > 0.
console.log(Math.atan2( -5, +0 ));               // -PI/2 for y > 0.
console.log(Math.atan2( -5, -0 ));               // -PI/2 for y > 0.
console.log(Math.atan2( 5, +0 ));                // PI/2 for y > 0.
console.log(Math.atan2( 5, -0 ));                // PI/2 for y > 0.
console.log(Math.atan2( +5, -Infinity ));        // +PI for finite y > 0.
console.log(Math.atan2( -5, -Infinity ));        // -PI for finite y > 0.
console.log(Math.atan2( +5, +Infinity ));        // +0 for finite y > 0.
console.log(Math.atan2( -5, +Infinity ));        // -0 for finite y > 0.
console.log(Math.atan2( +Infinity, 5 ));         // +PI/2 for finite x.
console.log(Math.atan2( -Infinity, 5 ));         // -PI/2 for finite x.
console.log(Math.atan2( +Infinity, -Infinity )); // +3*PI/4.
console.log(Math.atan2( -Infinity, -Infinity )); // -3*PI/4.
console.log(Math.atan2( +Infinity, +Infinity )); // +PI/4.
console.log(Math.atan2( -Infinity, +Infinity )); // -PI/4.

/* XPECT output ---
1.4056476493802699
0.16514867741462683
3.141592653589793
-3.141592653589793
0
-0
3.141592653589793
-3.141592653589793
0
-0
-1.5707963267948966
-1.5707963267948966
1.5707963267948966
1.5707963267948966
3.141592653589793
-3.141592653589793
0
-0
1.5707963267948966
-1.5707963267948966
2.356194490192345
-2.356194490192345
0.7853981633974483
-0.7853981633974483
--- */
