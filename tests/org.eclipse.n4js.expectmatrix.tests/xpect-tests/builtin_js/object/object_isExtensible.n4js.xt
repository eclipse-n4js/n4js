/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.expectmatrix.tests.N4JSExpectMatrixPendingTest END_SETUP */

// Object.isExtensible()
// Source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible

// New objects are extensible.
var empty : Object = {};
console.log("extensible = " + (Object.isExtensible(empty) === true));
empty["a"] = 5;
console.log("extended: " + JSON.stringify(empty));

// Sealed objects are by definition non-extensible.
var empty2 : Object = {};
Object.seal(empty2);
console.log("not extensible = " + (Object.isExtensible(empty2) === false));
empty["b"] = 5;
console.log("not extended: " + JSON.stringify(empty2));

// Frozen objects are also by definition non-extensible.
var empty3 : Object = {};
Object.freeze(empty3);
console.log("not extensible = " + (Object.isExtensible(empty3) === false));
try { empty3["b"] = 5; }
catch(e) { console.log((e as Object).toString()); }
console.log("not extended: " + JSON.stringify(empty3));

/* XPECT output ---
extensible = true
extended: {"a":5}
not extensible = true
not extended: {}
not extensible = true
TypeError: Cannot add property b, object is not extensible
not extended: {}
--- */
