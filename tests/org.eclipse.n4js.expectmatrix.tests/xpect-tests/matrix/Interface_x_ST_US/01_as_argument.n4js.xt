/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.expectmatrix.tests.N4JSExpectMatrixTest END_SETUP  */

////////////////////
// As an argument //
////////////////////

interface I {
	public x : number;
	public foo ();
};

class C1 {
	public x : number;
	public foo () {};
};

class C2<T> {
	public x : T;
	public foo () {};
}

function n(p : I) {}
function f(p : ~I) {}
function g(p : ~~I) {}

// nominal I expected, C1 got XPECT errors --> "C1 is not a subtype of I." at "new C1()"
n(new C1());

// C1 <: ~I XPECT noerrors -->
f(new C1());

// C2<number> <: ~I XPECT noerrors -->
f(new C2<number>());

// C2<string> !<: ~I XPECT errors --> "C2<string> is not a structural subtype of ~I: x failed: string is not equal to number." at "new C2<string>()"
f(new C2<string>());

// got ~~I, ~I expected XPECT errors --> "~Object with { x: number } is not a structural subtype of ~I: missing method foo." at "{x:10}"
f({x:10});

// got ~~I as expected XPECT noerrors -->
g({x:10});
