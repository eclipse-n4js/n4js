/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.expectmatrix.tests.N4JSExpectMatrixPendingTest END_SETUP  */

////////////////////
// Default values //
////////////////////

class A {
	public x : number = 100;
	protected y : number = 100;
	private z : number = 100;
	public w : number = 100;

	public constructor (@Spec spec : ~i~this with { y: number;z: number; }) {
		this.y = spec.y;
	}
}

// A.w has a default value and is not required XPECT noerrors -->
var a : A = new A({x: 1, y: 2, z: 3});

// A.z has a default value but is required by anonymous interface XPECT errors --> "~Object with { x: number; y: number } is not a structural subtype of ~i~A with { y: number; z: number }: missing structural field z; z failed: non-optional writable field requires a readable field or a getter in subtype." at "{x: 1, y: 2}"
var b : A = new A({x: 1, y: 2});

console.log(a);

/* only public fields and those handed to ctor by spec object are set XPECT output ---
A { x: 1, y: 2, z: 3, w: 100 }
--- */
