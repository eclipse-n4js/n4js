/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.expectmatrix.tests.N4JSExpectMatrixTest END_SETUP  */

/////////////////////////
// Optional parameters //
/////////////////////////

interface A {
	public x : number;
	y : number;

	// IDEBUG-188 in method: all parameters after an optional one are optional
	/* XPECT warnings ---
"This parameter is changed to the default parameter 'w=undefined' since it follows a default parameter." at "w : string"
"This parameter is changed to the default parameter 'z=undefined' since it follows a default parameter." at "z : number"
	---*/
	public f (b : boolean=undefined, z : number, w : string) : union{string,boolean} {
		if (b !== undefined) {
			return b;
		}
		else return "nope";
	}
};

class B implements A {}

var a : B = new B();

// no arguments XPECT noerrors -->
a.f();

// IDE-145 XPECT noerrors -->
a.f(true);

/* IDEBUG-188 argument in wrong place XPECT errors ---
"int is not a subtype of boolean." at "5"
---*/
a.f(5);

// good arguments XPECT noerrors -->
a.f(true, 5, "F");


interface AC {
	public x : number;
	y : number;

	// in method: all parameters after an optional one are optional XPECT noerrors -->
	public f (b : boolean=undefined, z : number=undefined, w : string=undefined) : union{string,boolean} {
		if (b !== undefined) {
			return b;
		}
		else return "nope";
	}
};

class BC implements AC {}

var ac : BC = new BC();

// no arguments XPECT noerrors -->
ac.f();

// not enough arguments XPECT noerrors -->
ac.f(true);

// argument in wrong place XPECT errors --> "int is not a subtype of boolean." at "5"
ac.f(5);

// good arguments XPECT noerrors -->
ac.f(true, 5, "F");
