/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.expectmatrix.tests.N4JSExpectMatrixTest END_SETUP  */

///////////////////
// Instantiation //
///////////////////

class ~A1 {
	public a : int;
}

class ~A2 {
	public a : int;

	public f() : void {}
}

class B1 extends A1 {
	public s : string;
}

class ~B2<T> extends A1 {
	public s : T;
}

var a1 : A1 = { a: 2 };
var a2 : A2 = { a: 2, f: function () {} };

// instanceof XPECT errors --> "instanceof cannot be used with structurally defined type A2." at "A2"
a2 instanceof A2;

// missing members XPECT errors --> "~Object with { a: int } is not a structural subtype of A2: missing method f." at "{a: 2}"
var a3 : A2 = {a: 2};

// correct assignment XPECT noerrors -->
var a4 : A2 = {a: 2, f: function () {} };

// non-structural extends structural XPECT errors --> "Structural type ~Object with { a: int; s: string } is not a subtype of non-structural type B1." at "{ a: 2, s: "s" }"
var b1 : B1 = { a: 2, s: "s" };

// primitive parameter XPECT noerrors -->
var b2a : B2<string> = { a: 2, s: "s" };

// structural parameter XPECT noerrors -->
var b2b : B2<A1> = { a: 2, s: a1 };

// structural parameter defined inside the definition XPECT noerrors -->
var b2c : B2<A1> = { a: 2, s: {a: 2} };
