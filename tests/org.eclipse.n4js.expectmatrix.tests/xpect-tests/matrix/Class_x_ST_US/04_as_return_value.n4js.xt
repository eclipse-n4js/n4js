/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.expectmatrix.tests.N4JSExpectMatrixTest END_SETUP  */

/////////////////////
// As return value //
/////////////////////

class A1 {
	public a : number;
}

class B1<T> extends A1 {
	public s : T;
}

// structural as return value XPECT noerrors -->
function g1 () : ~A1 { return {a: 2}; }

// structural as return value: function call XPECT errors --> "Structural type ~A1 is not a subtype of non-structural type string." at "g1()"
var g1v : string = g1();

// structural as return value 2 XPECT noerrors -->
function g1a (n : number) : ~A1 { return {a: n}; }

// structural as return value 2: function call XPECT noerrors -->
var g1av : ~A1 = g1a(2);

// structural parameterized as return value; primitive parameter XPECT noerrors -->
function g2 (s : string) : ~B1<string> { return {a: 2, s: s}; }

// structural parameterized as return value; primitive parameter: function call XPECT noerrors -->
var g2v : ~B1<string> = g2("G");

// structural parameterized as return value; structural parameter XPECT noerrors -->
function g3 (s : ~A1) : ~B1<~A1> { return {a: 2, s: s}; }

// structural parameterized as return value; structural parameter: function call XPECT noerrors -->
var g3v : ~B1<~A1> = g3({a: 3});

// structural parameterized as return value; structural parameter: function call 2 XPECT noerrors -->
var g4v : ~B1<~A1> = g3(g1a(4));
