/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/*  XPECT_SETUP org.eclipse.n4js.expectmatrix.tests.N4JSExpectMatrixPendingTest
END_SETUP   */

///////////////////
// Instantiation //
///////////////////

class A1 {
	public a : number;
}

class A2 {
	public a : number;

	public f() : void {}
}

class B1<T> extends A1 {
	public s : T;
}

class B2<T> extends A2 {
	public s : T;

	@Override
	public f() : void {}
}

var a1 : ~A1 = { a: 2 };
var a2 : ~A2 = { a: 2, f: function () { console.log( this.a) ; this.f();} };
var a3 : ~~A2 = { a: 2 };

// Spec says structural (field) type cannot be on right-hand-side of instanceof but strange error occurs
// GHOLD-9 (IDEBUG-163) instanceof XPECT FIXME errors --> "Cannot use structural type with instanceof." at "A2"
a2 instanceof ~A2;

// GHOLD-9 (IDEBUG-163) instanceof XPECT FIXME errors --> "Cannot use structural field type with instanceof." at "A2"
a3 instanceof ~~A2;

// missing members  XPECT errors  --> "~Object with { a: number } is not a structural subtype of ~A2: missing method f." at "{a: 2}"
var a4 : ~A2 = {a: 2};

/* superfluous members in field type, noerrors but XPECT warnings ---
   "b is not defined in ~~A2; it will not be accessible from a5." at "b"
   "f is not defined in ~~A2; it will not be accessible from a5." at "f"
   --- */
var a5 : ~~A2 = {a: 2, b: 3, f: function () {} };

// primitive parameter XPECT noerrors -->
var b1a : ~B1<string> = { a: 2, s: "s" };

// structural parameter XPECT noerrors -->
var b1b : ~B1<~A1> = { a: 2, s: a1 };

// structural parameter defined inside the definition XPECT noerrors -->
var b1c : ~B1<~A1> = { a: 2, s: {a: 2} };

// str. field: primitive parameter XPECT noerrors  -->
var b2a : ~~B2<string> = { a: 2, s: "s" };

// str. field: non-structural parameter XPECT noerrors  -->
var b2b : ~~B2<A1> = { a: 2, s: new A1() };

// str. field: structural parameter XPECT noerrors  -->
var b2b2 : ~~B2<~~A2> = { a: 2, s: a3 };

// str. field: structural parameter defined inside the definition XPECT noerrors  -->
var b2c : ~~B2<~~A2> = { a: 2, s: {a: 2} };
