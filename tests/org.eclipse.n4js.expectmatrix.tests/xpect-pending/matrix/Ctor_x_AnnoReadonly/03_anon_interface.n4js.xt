/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.expectmatrix.tests.N4JSExpectMatrixPendingTest END_SETUP  */

////////////////////////////////////////
// Anonymous interface in spec object //
// Example 41						  //
////////////////////////////////////////

class A {
	public s : string;
	// IDE-139 XPECT noerrors -->
	public constructor(@Spec spec : ~i~this) {}
}

class B extends A {
	public t : string;
	private n : C;
	public constructor(spec : ~~this with {n: C;}) {
		super(spec);
	}
}

class B2 extends A {
	// IDE-2318, IDEBUG-134 XPECT FIXME errors --> "n is not a field in C" at "number n;"
	public constructor(@Spec spec : ~i~this with {n: C;}) {
		super(spec);
	}
}

class C {}

// s, t and n in OL XPECT noerrors -->
var b1 = new B({s: "S", t: "T", n: new C()});

// n missing but required by anonymous interface XPECT errors --> "~Object with { s: string; t: string } is not a structural subtype of ~~B with { n: C }: missing structural field n." at "{s: "S", t: "T"}"
var b2 = new B({s: "S", t: "T"});

// passing additional non-existent parameter (cf. IDEBUG-99), noerrors but XPECT warnings --> "m is not defined in ~~this[B]; it will not be accessible from the receiving parameter." at "m"
var b3 = new B({s: "S", t: "T", n: new C(), m: "M"});

// n set to null XPECT noerrors -->
var b4 = new B({s: "S", t: "T", C n: null});

var n1 : C = null;
// null assigned to variable of expected class XPECT noerrors -->
var b2a = new B({s: "S", t: "T", n: n1});

// unnecessary warning is necessary (cf. next example) (IDEBUG-98) XPECT warnings --> "Unnecessary cast from null to C" at "null as C"
var n2 = null as C;
// null cast to C XPECT noerrors -->
var b2b = new B({s: "S", t: "T", n: n2});

var n3 = null;
// null saved to variable XPECT errors --> "~Object with { s: string; t: string; n: any } is not a structural subtype of ~~B with { n: C }: n failed: any is not equal to C." at "{s: "S", t: "T", n: n3}"
var b2c = new B({s: "S", t: "T", n: n3});
