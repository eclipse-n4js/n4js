/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.xpect.tests.N4JSXpectTest 
   
//   Preference "indentation" "    " {}
   
   
   END_SETUP
 */



/* XPECT formattedLines 5 ---
function g(): any {
	return function(): void {
			;
		} as Object;
}
--- */
function g() :any {
    return function(): void {
            ;
        } as Object
}


/* XPECT formattedLines 2 ---
function h(): any {
	return function(): void {
			;
		} as Object ;
}
--- */
function h() :any { return function(): void {;} as Object 
}


/* XPECT formattedLines 1 ---
var f = a => a + 2;
--- */
var f = a => a+2;


/* XPECT formattedLines 1 ---
var i = a => a + 2;
--- */
var i=a=>a+2;


/* XPECT formattedLines 1 ---
let k = () => { console.log("hey") }; // no argument
--- */
let k=()=>{        console.log("hey")} // no argument

/* XPECT formattedLines 1 ---
let l = x => { return x }; // one argument
--- */
let l=x=>{return x} // one argument

// found during IDE-1852: XPECT FIXME noerrors
/* XPECT formattedLines 1 ---
let m = (x, y) => { return x * y }; // several arguments
--- */
let m=(x,y)=>{return x*y} // several arguments

// found during IDE-1852: XPECT FIXME noerrors
/* XPECT formattedLines 1 ---
let n = x => { return x * x }; // block
--- */
let n=x=>{return x*x}  // block

// found during IDE-1852: XPECT FIXME noerrors
/* XPECT formattedLines 1 ---
let o = x => x * x; // expression, equivalent to previous line
--- */
let o=x=>x*x  // expression, equivalent to previous line



interface X{ add( x:any ) }
let x:X;

/* XPECT formattedLines 1 ---
x.add(err => { throw err; });
--- */
x  .    add    (     err     =>         {        throw       err    ;      }      )    ;


/* XPECT formattedLines 1 ---
x.add(err => { let a = 2; a += 4; throw err; });
--- */
x  .    add    (     err     =>         {let a=2;a+=4;        throw       err    ;      }      )    ;

/* XPECT formattedLines 2 ---
x.add(err => {
		throw err;
	});
--- */
x  .    add    (     err     =>         {        
	throw       err    ;  }      )    ;


/* XPECT formattedLines 3 ---
x.add(err => { let a = 2; a += 4; throw err; });
--- */
x  .    add    (     err     =>         {let 
	a=2;a+=4;        throw       err    ;
}      )    ;

/* XPECT formattedLines 4 ---
x.add(err => {
		let a = 2;
		a += 4;
		throw err;
	});
--- */
x  .    add    (     err     =>         {
    let 
    a=2;a+=4;        throw       err    ;
}      )    ;

/* XPECT formattedLines 3 ---
x.add(err => {
	});
--- */
x  .    add    (     err     =>         {
      
   }      )    ;

/* XPECT formattedLines 3 ---
x.add(err => {
		;
	});
--- */
x  .    add    (     err     =>         {
;      
   }      )    ;




