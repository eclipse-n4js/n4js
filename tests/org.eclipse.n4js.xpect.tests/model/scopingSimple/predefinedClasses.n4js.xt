/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.xpect.tests.N4JSXpectTest  END_SETUP */
class MyClassX {
	/* as here it cannot be decided if "string field" or "string field() should be written, void is included in scope"*/
/* XPECT scope at 'string' ---
	Array, Boolean, Date, Error, EvalError, Function,
	JSON, Math, N4Object, Number, Object,  RangeError,
	ReferenceError, RegExp, String, SyntaxError, TypeError,  URIError, any, boolean,
	i18nKey, !myFun1, number, pathSelector, string, typeName, !arguments, !void, ...
---*/
	field : string;

/* XPECT scope at boolean ---
	Array, Boolean,
	Date, Error, EvalError,
	Function, JSON, Math, MyClassX - T,
	N4Class, N4Object,
	Number, Object,
	RangeError, ReferenceError,
	RegExp, String,
	SyntaxError, TypeError, URIError,
	any, boolean,
	!myFun1, i18nKey, number,
	pathSelector, string, typeName,
	void, !arguments, ...
---*/
	myMethod() : boolean {
		return void(0); // undefined is property on global object, type itself is not directly accessible
						// but void(0) is one of the tricks to get undefined, ofc. it gives value not the type
	}

	myMethod2() : String {
		return null; // this is the NullLiteral not the null type
	}
}

/* XPECT scope at 'myBooleanVar : |boolean' ---
	 Array, Boolean, Date, Error, EvalError, Function,
	 JSON, Math, N4Object, Number, Object,  RangeError,
	ReferenceError, RegExp, String, SyntaxError, TypeError,  URIError,
	any, boolean, !myFun1, i18nKey, number, pathSelector, string, typeName,
	!void, ...
---*/
var myBooleanVar : boolean;

/* XPECT scope at String ---
	!arguments, Array, Boolean, Date, Error, EvalError, Function,
	 JSON, Math, N4Object, Number, Object,  RangeError,
	ReferenceError, RegExp, String, SyntaxError, TypeError,  URIError,
	any, boolean, !myFun1, i18nKey, number, pathSelector, string, typeName,
	!void, ...
---*/
var myPathSelector : pathSelector<String>;

/* XPECT scope at 'T extends |MyClassX' ---
	!arguments, Array, Boolean, Date, Error, EvalError, Function,
	 JSON, Math, N4Object, Number, Object,  RangeError,
	ReferenceError, RegExp, String, SyntaxError, TypeError,  URIError,
	any, boolean, !myFun1, i18nKey, number, pathSelector, string, typeName,
	!void, ...
---*/
class MyClassY<T extends MyClassX> {

}

/* XPECT scope at void ---
	!arguments, Array, Boolean, Date, Error, EvalError, Function,
	 JSON, Math, N4Object, Number, Object,  RangeError,
	ReferenceError, RegExp, String, SyntaxError, TypeError,  URIError,
 	any, boolean, i18nKey, number, pathSelector, string, typeName, void,
 	...
---*/
function myFun1() : void {
	/* XPECT scope at Object ---
		!arguments, Array, Boolean, Date, Error, EvalError, Function,
		 JSON, Math, N4Object, Number, Object,  RangeError,
		ReferenceError, RegExp, String, SyntaxError, TypeError,  URIError,
		any, boolean, !myFun1, i18nKey, number, pathSelector, string, typeName,
		!void, ...
	---*/
	var myFun2Var = function myFun2(a : Object) :
	/* XPECT scope at void ---
		!arguments, Array, Boolean, Date, Error, EvalError, Function,
		JSON, Math, N4Object, Number, Object,  RangeError,
		ReferenceError, RegExp, String, SyntaxError, TypeError,  URIError, any, boolean,
		i18nKey, number, pathSelector, string, typeName, void, ...
	---*/
	void {
	}
}
