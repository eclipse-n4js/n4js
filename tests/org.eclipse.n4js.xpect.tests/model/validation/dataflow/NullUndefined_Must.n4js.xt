/*
 * Copyright (c) 2017 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/*	XPECT_SETUP org.eclipse.n4js.xpect.tests.N4JSXpectTest 
	IssueConfiguration {
		IssueCode "DFG_NULL_DEREFERENCE" {enabled=true}
	}
	END_SETUP
 */



function f1() {
	let a : int;
	// XPECT warnings --> "Variable a is undefined" at "a"
	a.toString();
}

function f2() {
	let a : int = null;
	// XPECT warnings --> "Variable a is null" at "a"
	a.toString();
}

function f3() {
	let a : int = 1;
	if (1) {
		a = null;
	} else {
		a = null;
	}
	// XPECT warnings --> "Variable a is null" at "a"
	a.toString();
}

function f4a() {
	let a : int, b : int;
	a = null;
	b = a;
	// XPECT warnings --> "Variable b is null due to previous variable a" at "b"
	b.toString();
}

function f4b() {
	let a : int;
	let b = a;
	// XPECT warnings --> "Variable b is undefined due to previous variable a" at "b"
	b.toString();
}

function f4c() {
	let a : int = null;
	let b = a;
	// XPECT warnings --> "Variable b is null due to previous variable a" at "b"
	b.toString();
}

function f5a() {
	let a : int, b : int;
	a = null;
	[b] = [a];
	// XPECT warnings --> "Variable b is null due to previous variable a" at "b"
	b.toString();
}

function f5b() {
	let a : int = null;
	let [b] = [a];
	// XPECT warnings --> "Variable b is null due to previous variable a" at "b"
	b.toString();
}

function f6a() {
	let a : int, b : int;
	a = null;
	({b} = {b:a});
	// XPECT warnings --> "Variable b is null due to previous variable a" at "b"
	b.toString();
}

function f6b() {
	let a : int = null;
	let {b} = {b:a};
	// XPECT warnings --> "Variable b is null due to previous variable a" at "b"
	b.toString();
}

function f10() {
	let a : any+ = 0;
	[a] = [];
	// XPECT warnings --> "Variable a is undefined" at "a"
	a.toString();
}

function f11() {
	let a : any+ = 0;
	let b : any+;
	[a,b] = [,1];
	// XPECT warnings --> "Variable a is undefined" at "a"
	a.toString();
	b.toString();
}

function f12() {
	let a : any+ = 0;
	[a = 1] = [null];
	// XPECT warnings --> "Variable a is null" at "a"
	a.toString();
}

function f13() {
	let a : any+ = 0;
	[a = 1] = [undefined];
	// XPECT nowarnings -->
	a.toString();
}

function f14() {
	let a : any+ = 0;
	[a = null] = [undefined];
	// XPECT warnings --> "Variable a is null" at "a"
	a.toString();
}

function f15() {
	let a : any+ = 0;
	[a = undefined] = [undefined];
	// XPECT warnings --> "Variable a is undefined" at "a"
	a.toString();
}

function f16() {
	let a : any+ = 0;
	[a = undefined] = [1];
	// XPECT nowarnings -->
	a.toString();
}

function f20a() {
	let a : any+ = 0;
	({p:a} = {p:1});
	// XPECT nowarnings -->
	a.toString();
}
function f20b() {
	let a : any+ = 0;
	({a} = {a:1});
	// XPECT nowarnings -->
	a.toString();
}

function f22a() {
	let a : any+ = 0;
	({p:a = 1} = {p:null});
	// XPECT warnings --> "Variable a is null" at "a"
	a.toString();
}
function f22b() {
	let a : any+ = 0;
	({a = 1} = {a:null});
	// XPECT warnings --> "Variable a is null" at "a"
	a.toString();
}

function f23a() {
	let a : any+ = 0;
	({p:a = 1} = {p:undefined});
	// XPECT nowarnings -->
	a.toString();
}
function f23b() {
	let a : any+ = 0;
	({a = 1} = {a:undefined});
	// XPECT nowarnings -->
	a.toString();
}

function f24a() {
	let a : any+ = 0;
	({p:a = null} = {p:undefined});
	// XPECT warnings --> "Variable a is null" at "a"
	a.toString();
}
function f24b() {
	let a : any+ = 0;
	({a = null} = {a:undefined});
	// XPECT warnings --> "Variable a is null" at "a"
	a.toString();
}

function f25a() {
	let a : any+ = 0;
	({p:a = undefined} = {p:undefined});
	// XPECT warnings --> "Variable a is undefined" at "a"
	a.toString();
}
function f25b() {
	let a : any+ = 0;
	({a = undefined} = {a:undefined});
	// XPECT warnings --> "Variable a is undefined" at "a"
	a.toString();
}

function f26a() {
	let a : any+ = 0;
	({p:a = undefined} = {p:1});
	// XPECT nowarnings -->
	a.toString();
}
function f26b() {
	let a : any+ = 0;
	({a = undefined} = {a:1});
	// XPECT nowarnings -->
	a.toString();
}

function f30(p:int) {
	let a : int = 1;
	switch (p) {
		case 1: a = null;
		default: a = null;
	}
	// XPECT warnings --> "Variable a is null" at "a"
	a.toString();
}

function f31(p:int) {
	let a : int = 1;
	switch (p) {
		default: a = null;
	}
	// XPECT warnings --> "Variable a is null" at "a"
	a.toString();
}

function f35() {
	let a : int = 1;
	try {
		console.log(a);
	} finally {
		a = null;
	}
	// XPECT warnings --> "Variable a is null" at "a"
	a.toString();
}

function f36() {
	let a : int = 1;
	try {
		a = null;
	} catch (e) {
		a = null;
	}
	// XPECT warnings --> "Variable a is null" at "a"
	a.toString();
}

function f37() {
	let a : int = 1;
	try {
		a = null;
	} catch (e) {
		return;
	}
	// XPECT warnings --> "Variable a is null" at "a"
	a.toString();
}

function f40() {
	let a : int;
	if (0) {
		a = 1;
		return;
	}
	// XPECT warnings --> "Variable a is undefined" at "a"
	a.toString();
}

function f41() {
	let a : int = 1;
	if (0) {
		a = null;
		return;
	}
	// XPECT nowarnings -->
	a.toString();
}

function f50() {
	let a : int;
	while (0) {
		if (1) {
			a = 1;
			break;
		}
		// XPECT warnings --> "Variable a is undefined" at "a"
		a.toString();
	}
}
