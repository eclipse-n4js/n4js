/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.xpect.tests.N4JSXpectTest END_SETUP */

// TODO: can't parse this, it causes foo in 'var foo \n function f();' to be parsed as type
// var int x = 5


// TODO: // can't parse this, enabling this causes "This of of" to be syntactically ambiguous
// for(var int i = 5; i < 1; i++) {}


// XPECT errors --> "Wrong type syntax: Use foo:Type rather than Type foo. " at "int"
function f(int p1) {}


// XPECT errors --> "Wrong type syntax: Use foo:Type rather than Type foo. " at "String"
try {} catch (String t) {}


abstract class F {
	// XPECT errors --> "Wrong type syntax: Use foo:Type rather than Type foo. " at "int"
	int f;

	// XPECT errors --> "Wrong type syntax: Use foo:Type rather than Type foo. " at "int"
	int m() {}

	// XPECT warnings --> "Test annotation @Test may only be used in test source folders (defined in package.json)." at "Test"
	// XPECT errors --> "Wrong type syntax: Use foo:Type rather than Type foo." at "int"
	@Test int ma() {}

	// XPECT errors --> "Wrong type syntax: Use foo:Type rather than Type foo. " at "int"
	@Transient int fa;


	// XPECT errors --> "Wrong type syntax: Use foo:Type rather than Type foo. " at "int"
	int get x() { return f }


}
