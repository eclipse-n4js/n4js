/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.xpect.tests.N4JSXpectTest END_SETUP */


class A {}
class B extends A {}
class C extends B {}

class X {}

var a : A;
var b : B;
var c : C;
var x : X;

class G2<T1,T2> {}

function <T> fooMerge(p : G2<T,T>) {}
function <T1,T2> foo2(p : G2<T1,T2>) : G2<T1,T2> {return null;}
function <T1,T2> fooOL2(p : ~Object with {left: T1; right: T2; }) : G2<T1,T2> {return null;}




// XPECT type of '{ left: b, right: null }' --> ~Object with { left: B; right: B }
fooMerge( foo2( foo2( fooOL2(  { left: b, right: null }  ))))


// XPECT type of '{ left: b, right: c }' --> ~Object with { left: B; right: B }
fooMerge( foo2( foo2( fooOL2(  { left: b, right: c }  ))))


// XPECT type of '{ left: b, right: x }' --> ~Object with { left: union{B,X}; right: union{B,X} }
fooMerge( foo2( foo2( fooOL2(  { left: b, right: x }  ))))


// XPECT type of '{ left: null, right: null }' --> ~Object with { left: any; right: any }
// TODO correct type already inferred, but causes other, incorrect errors XPECT FIXME noerrors -->
fooMerge( foo2( foo2( fooOL2(  { left: null, right: null }  ))))
