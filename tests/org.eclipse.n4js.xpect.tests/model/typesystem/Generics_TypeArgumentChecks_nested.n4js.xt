/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.xpect.tests.N4JSXpectTest END_SETUP  */


class A {}
class B {}
class C {}
class X {}

// note:
// the following tests are more a challenge for scoping than for the type system;
// included here next to the tests on generics for systematic reasons

class N2<T extends A> {


	// -----------------------------------------------------------------------------------------
	// nested function expressions


	// non-static case:
	<U extends B> m1() : void {

		var f = function <V extends C> (pu : U, pv : V) {
			var t : T;
			var u : U;
			var v : V;
			var a : A  = t;
			var b : B  = u;
			var c : C  = v;
			var bp : B = pu;
			var cp : C = pv;
			// XPECT errors --> "T is not a subtype of X." at "t"
			var x1 : X = t;
			// XPECT errors --> "U is not a subtype of X." at "u"
			var x2 : X = u;
			// XPECT errors --> "V is not a subtype of X." at "v"
			var x3 : X = v;
			// XPECT errors --> "U is not a subtype of X." at "pu"
			var x4 : X = pu;
			// XPECT errors --> "V is not a subtype of X." at "pv"
			var x5 : X = pv;
		}
	}

	// static case:
	static <U extends B> m2() : void {

		var f = function <V extends C> (pu : U, pv : V) {
			// XPECT errors --> "The type variable T cannot be accessed from a static context." at "T"
			var t : T; // now T is no longer accessible
			var u : U;
			var v : V;
			var b : B = u;
			var c : C = v;
			var bp : B = pu;
			var cp : C = pv;
			// XPECT errors --> "U is not a subtype of X." at "u"
			var x2 : X = u;
			// XPECT errors --> "V is not a subtype of X." at "v"
			var x3 : X = v;
			// XPECT errors --> "U is not a subtype of X." at "pu"
			var x4 : X = pu;
			// XPECT errors --> "V is not a subtype of X." at "pv"
			var x5 : X = pv;
		}
	}



	// -----------------------------------------------------------------------------------------
	// nested classes


	// non-static case:
	<U extends B> m3() : void {

		// XPECT errors --> "Unsupported feature: class expressions." at "class"
		var innerClass = class {
			<V extends C> mInnerNonStatic(pu : U, pv : V) {
				var t : T;
				var u : U;
				var v : V;
				var a : A  = t;
				var b : B  = u;
				var c : C  = v;
				var bp : B = pu;
				var cp : C = pv;
				// XPECT errors --> "T is not a subtype of X." at "t"
				var x1 : X = t;
				// XPECT errors --> "U is not a subtype of X." at "u"
				var x2 : X = u;
				// XPECT errors --> "V is not a subtype of X." at "v"
				var x3 : X = v;
				// XPECT errors --> "U is not a subtype of X." at "pu"
				var x4 : X = pu;
				// XPECT errors --> "V is not a subtype of X." at "pv"
				var x5 : X = pv;
			}
			static <V extends C> mInnerStatic(pu : U, pv : V) {
				var t : T;
				var u : U;
				var v : V;
				var a : A  = t;
				var b : B  = u;
				var c : C  = v;
				var bp : B = pu;
				var cp : C = pv;
				// XPECT errors --> "T is not a subtype of X." at "t"
				var x1 : X = t;
				// XPECT errors --> "U is not a subtype of X." at "u"
				var x2 : X = u;
				// XPECT errors --> "V is not a subtype of X." at "v"
				var x3 : X = v;
				// XPECT errors --> "U is not a subtype of X." at "pu"
				var x4 : X = pu;
				// XPECT errors --> "V is not a subtype of X." at "pv"
				var x5 : X = pv;
			}
		}
	}

	// static case:
	static <U extends B> m4() : void {

		// XPECT errors --> "Unsupported feature: class expressions." at "class"
		var innerClass = class {
			<V extends C> mInnerNonStatic(pu : U, pv : V) {
				// XPECT errors --> "The type variable T cannot be accessed from a static context." at "T"
				var t : T;
				var u : U;
				var v : V;
				var b : B  = u;
				var c : C  = v;
				var bp : B = pu;
				var cp : C = pv;
				// XPECT errors --> "U is not a subtype of X." at "u"
				var x2 : X = u;
				// XPECT errors --> "V is not a subtype of X." at "v"
				var x3 : X = v;
				// XPECT errors --> "U is not a subtype of X." at "pu"
				var x4 : X = pu;
				// XPECT errors --> "V is not a subtype of X." at "pv"
				var x5 : X = pv;
			}
			static <V extends C> mInnerStatic(pu : U, pv : V) {
				// XPECT errors --> "The type variable T cannot be accessed from a static context." at "T"
				var t : T;
				var u : U;
				var v : V;
				var b : B  = u;
				var c : C  = v;
				var bp : B = pu;
				var cp : C = pv;
				// XPECT errors --> "U is not a subtype of X." at "u"
				var x2 : X = u;
				// XPECT errors --> "V is not a subtype of X." at "v"
				var x3 : X = v;
				// XPECT errors --> "U is not a subtype of X." at "pu"
				var x4 : X = pu;
				// XPECT errors --> "V is not a subtype of X." at "pv"
				var x5 : X = pv;
			}
		}
	}
}
