/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.xpect.tests.N4JSXpectTest END_SETUP  */


// these tests are about using a function type as a type argument
// (see also IDEBUG-186)



var fn = function(param : number) : void {};
var fs = function(param : string) : void {};

class C<T extends Function> {
	public m(fn : T) {}
}
interface R<T extends Function> {
	public m(fn : T) {}
}
interface I<T extends Function> {
	public m(fn : T);
}



//
// without inheritance (base case; included here just for completeness)
//

var c : C<{function(string):void}>;

// XPECT noerrors -->
c.m(fs);
// XPECT errors --> "{function(number):void} is not a subtype of {function(string):void}." at "fn"
c.m(fn);



//
// class --> super-class
//

class X<T> extends C<{function(T):void}> {
}

var x : X<string>;

// XPECT noerrors -->
x.m(fs);
// XPECT errors --> "{function(number):void} is not a subtype of {function(string):void}." at "fn"
x.m(fn);



//
// class --> interface
//

class Y<T> implements R<{function(T):void}> {
}

var y : Y<string>;

// XPECT noerrors -->
y.m(fs);
// XPECT errors --> "{function(number):void} is not a subtype of {function(string):void}." at "fn"
y.m(fn);



//
// class --> interface
//

class Z<T> implements I<{function(T):void}> {
	@Override
	public m(fn : {function(T):void}) {}
}

var z : Z<string>;

// XPECT noerrors -->
z.m(fs);
// XPECT errors --> "{function(number):void} is not a subtype of {function(string):void}." at "fn"
z.m(fn);
