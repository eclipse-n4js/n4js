/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.xpect.tests.N4JSXpectTest END_SETUP  */


class A {}
class B extends A {}
class C extends B {}


// ---------------------------------------------
// part 1: with wildcards

var ctorA: constructor{? extends A};
var ctorB: constructor{? extends B};
var ctorC: constructor{? extends C};

// XPECT errors --> "constructor{? extends A} is not a subtype of constructor{? extends B}." at "ctorA"
ctorB = ctorA;
// XPECT noerrors -->
ctorB = ctorC;



// ---------------------------------------------
// part 2: with type variable bound to ordinary type

class G2<T> {
    ctor: constructor{T};
}

var ga2: G2<A>;
var gb2: G2<B>;
var gc2: G2<C>;

// XPECT errors --> "constructor{A} is not a subtype of constructor{B}." at "ga2.ctor"
gb2.ctor = ga2.ctor;
// XPECT noerrors -->
gb2.ctor = gc2.ctor;




// ---------------------------------------------
// part 3: with type variable bound to closed existential

class G3<T> {
    ctor: constructor{T};
}

var ga3: G3<? extends A>;
var gb3: G3<? extends B>;
var gc3: G3<? extends C>;

// XPECT errors --> "constructor{? extends A} is not a subtype of constructor{? extends B}." at "ga3.ctor"
gb3.ctor = ga3.ctor;
// IMPORTANT: the following is an error because the "? extends C" is a closed existential (not a wildcard)
// XPECT errors --> "constructor{? extends C} is not a subtype of constructor{? extends B}." at "gc3.ctor"
gb3.ctor = gc3.ctor;



// ---------------------------------------------
// part 4: subtype with type variable as upper bound of wildcard, bound to ordinary type

class G4<T> {
    ctor: constructor{? extends T};
}

var ga4: G4<A>;
var gb4: G4<B>;
var gc4: G4<C>;

// XPECT errors --> "constructor{? extends A} is not a subtype of constructor{? extends B}." at "ga4.ctor"
gb4.ctor = ga4.ctor;
// XPECT noerrors -->
gb4.ctor = gc4.ctor;



// ---------------------------------------------
// part 5: subtype with type variable as upper bound of wildcard, bound to closed existential

class G5<T> {
    ctor: constructor{? extends T};
}

var ga5: G5<? extends A>;
var gb5: G5<? extends B>;
var gc5: G5<? extends C>;

// XPECT errors --> "constructor{? extends ? extends A} is not a subtype of constructor{? extends ? extends B}." at "ga5.ctor"
gb5.ctor = ga5.ctor;
// XPECT errors --> "constructor{? extends ? extends C} is not a subtype of constructor{? extends ? extends B}." at "gc5.ctor"
gb5.ctor = gc5.ctor;
