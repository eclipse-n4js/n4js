/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.xpect.tests.N4JSXpectTest END_SETUP */

/* XPECT errors ---
"The annotation @MyAnno is not defined." at "MyAnno"
"The optional modifier isn't allowed here." at "String?"
--- */
@MyAnno(String?)
class Test {
	private field1 : Object = {
// // XPECT errors --> "The optional modifier isn't allowed here." at "String?"
		String? key : new String("value"),
// // XPECT errors --> "The optional modifier isn't allowed here." at "String?"
		get value(): String? {
			return this.key;
		},
// // XPECT errors --> "Default parameter is not allowed in setter declarations." at "value : String=undefined"
		set value(value : String=undefined) {
			this.key = value;
		}
	};
	private field2? : String;

	method1() : Test {
// // XPECT errors --> "The optional modifier isn't allowed here." at "String?"
		var x : String?;
// // XPECT errors --> "The optional modifier isn't allowed here." at "string?"
		for(var n : string? in x) {
			this.method2().method1()
		}
// // XPECT noerrors -->
		var fun = function() : String? {
			return new String("funstr");
		};
		return this;
	}

	method2() : Test {
		var test : Test = new Test();
// // XPECT errors --> "The optional modifier isn't allowed here." at "String?"
		test.<String?>create(new String("Test"));
		return test;
	}

// // XPECT noerrors -->
	method3() : String? {
		return null;
	}

// // XPECT errors --> "The optional modifier isn't allowed here." at "String?"
	get fieldOne() : String? {
		return null;
	}

	<T> create(object : T, extra : String=undefined) {
		console.log(object);
	}
}

// // XPECT noerrors -->
function <T> fun(elem : T) : String? {
	return new String(elem);
};
// // XPECT errors --> "The optional modifier isn't allowed here." at "String?"
<String?>fun(new String("Test"));
