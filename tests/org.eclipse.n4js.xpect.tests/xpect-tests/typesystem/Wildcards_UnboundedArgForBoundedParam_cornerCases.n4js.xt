/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.xpect.tests.N4JSXpectTest END_SETUP  */


class A {}
class X {}

interface I {}
interface J {}

class G<T extends A> {}


// --------------------------------------------------------------------------------


// a wildcard can only have 1 bound, either upper or lower, so if it
// has a lower bound it must *not* inherit the parameter's upper bound

// XPECT errors --> "? super X is not a subtype of A." at "? super X"
var g : G<? super X>;



// --------------------------------------------------------------------------------


// we check that the single upper bound of the wildcard is correctly constructed
// in case the corresponding type parameter has *several* upper bounds

class H<T extends A & I & J> {
	m() : T { return null; }
}

var h : H<?>;

// now, the T returned by m() must be a subtype of A and I and J

// XPECT noerrors -->
var test1 : A = h.m();
// XPECT noerrors -->
var test2 : I = h.m();
// XPECT noerrors -->
var test3 : J = h.m();

// XPECT errors --> "? extends intersection{A,I,J} is not a subtype of X." at "h.m()"
var test4 : X = h.m();
