/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.xpect.tests.N4JSXpectTest END_SETUP  */



/* EXAMPLE 1 */

interface I1 {}
interface J1 extends I1 {}
class C1 implements J1 {}

function foo1() {
	let x: I1 = new C1();
	
	if (x instanceof J1) {
		let y: J1;
		// XPECT type of 'x' --> J1
		// XPECT noerrors --> "J1 is not a subtype of J1." at "x"
		y = x;
	}
}


/* EXAMPLE 2 */

class C2 {}
class D2 extends C2 {}

function foo2() {
	let d: D2;
	
	if (d instanceof C2.constructor) {
		let dd: D2;
		// XPECT type of 'd' --> D2
		// XPECT noerrors --> "C2 is not a subtype of D2." at "d"
		dd = d;
	}
}


/* EXAMPLE 3 */

interface I3 {}
class C3 implements I3 {}

function foo3() {
	let c: C3;
	
	if (c instanceof I3) {
		let dd: C3;
		// XPECT type of 'c' --> C3
		// XPECT noerrors --> "I3 is not a subtype of C3." at "c"
		dd = c;
	}
}


/* EXAMPLE 4 */

class G4<T4> {
	getIt(): T4 { return null; }
}
class H4<T4> extends G4<T4> {}

function foo4(g: G4<string>) {
	if (g instanceof H4) {
		let s: string;
		// XPECT type of 'g' --> intersection{G4<string>,H4<?>}
		// XPECT noerrors --> "? is not a subtype of string." at "g.getIt()"
		s = g.getIt();
	}
}


/* EXAMPLE 5 */

class C5 {
	mc() {}
}
class D5 extends C5 {
	md() {}
}

export var v5 = new C5();

function changeVToC5() {
	v5 = new C5();
}

if (v5 instanceof D5) {
	changeVToC5();
	// XPECT errors --> "Couldn't resolve reference to IdentifiableElement 'md'." at "md"
	v5.md();
}


/* EXAMPLE 6 */

class C6 {
	mc() {}
}
class D6 extends C6 {
	md() {}
}

export const v6 = new C6();

if (v6 instanceof D6) {
	// XPECT noerrors --> "Couldn't resolve reference to IdentifiableElement 'md'." at "md"
	v6.md();
}


/* EXAMPLE 7 */

class C7 {
	mc() {}
}
class D7 extends C7 {
	md() {}
}

var v7 = new C7();

function changeVToC7() {
	v7 = new C7();
}

if (v7 instanceof D7) {
	changeVToC7();
	// XPECT errors --> "Couldn't resolve reference to IdentifiableElement 'md'." at "md"
	v7.md();
}


/* EXAMPLE 8 */

class C8 {
	mc() {}
}
class D8 extends C8 {
	md() {}
}

var v8 = new C8();

if (v8 instanceof D8) {
	// XPECT noerrors --> "Couldn't resolve reference to IdentifiableElement 'md'." at "md"
	v8.md();
}


