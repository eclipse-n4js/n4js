/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.xpect.tests.N4JSXpectTest END_SETUP  */


// this type with generic class:

class Test<T> {
    private arr : Array<T>;
    constructor (init : Array<T>) {
        this.arr = init;
    }
    public pushThing(thing : T) : this {
        this.arr.push(thing);
        return this;
    }
    public popThing() : T {
        return this.arr.pop();
    }
}

var stringTests : Test<string> = new Test<string>(["charles", "haley"]);

stringTests = stringTests.pushThing("hello");  // this[Test<string>] is a subtype of Test<string>.


// this type with method overriding

class Example {
    public fupa () : this {
        return this;
    }
}

class SubExample extends Example{
    @Override
    public fupa () : this {
        return this;
    }
}


// simple assignments

var ex : Example = new Example();
ex = ex.fupa(); //this[Example] is a subtype of Example.

var subex : SubExample = new SubExample();
var subex1 : SubExample = subex.fupa(); //this[SubExample] is a subtype of SubExample.
var subex2 : Example = subex.fupa(); //this[SubExample] is a subtype of Example.


// binding of instance depends on static type not type of instance at run time:

var failex : Example = new SubExample();
// XPECT errors --> "Example is not a subtype of SubExample." at "failex.fupa()"
var failex1 : SubExample = failex.fupa(); //this[Example] is NOT a subtype of SubExample.
var failex2 : Example = failex.fupa(); //this[Example] is a subtype of Example.
