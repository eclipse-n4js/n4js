/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

 /* XPECT_SETUP org.eclipse.n4js.xpect.tests.N4JSXpectTest END_SETUP */

interface ~I {
    public optional?: int;
}

interface ~J {
}

let i: I;
var jvar: J = { };
const jconst: J = {};
var b: boolean;

// XPECT warnings --> "The type of this expression is undefined, so it will never evaluate to a value other than undefined." at "b ? undefined : undefined" 
i = b ? undefined : undefined;

// XPECT errors --> "J is not a structural subtype of I: missing field optional." at "b ? jvar : null" 
i = b ? jvar : null;

// XPECT noerrors
i = b ? jconst : null;

// XPECT errors --> "J is not a structural subtype of I: missing field optional." at "b ? jconst : jvar" 
i = b ? jconst : jvar;

// XPECT warnings --> "Dispensable use of conditional expression. The expression 'true' always evaluates to true, so only the left-hand side will ever be evaluated." at "true"
i = true? {} : { optional: 42};

// XPECT errors --> "J is not a structural subtype of I: missing field optional." at "b ? jvar : jvar"
i = b ? jvar : jvar;

////// Nested ternay expressions
var condExprVar = b? jvar : jvar;
// XPECT errors --> "J is not a structural subtype of I: missing field optional." at "b ? condExprVar : condExprVar"
i = b ? condExprVar : condExprVar;

const condExprConst = b? {} : {};
// XPECT noerrors
i = b ? condExprConst : condExprConst;
