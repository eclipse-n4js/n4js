/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.xpect.tests.N4JSXpectTest END_SETUP */


export public interface I {
	// ignore XPECT errors --> "Call and construct signatures may only be used in .n4jsd files." at "(input: number): any;"
	(input: number): any;
	public optField?: string;
}

let i1: ~I;

// XPECT errors --> "~Object is not a structural subtype of ~I: missing call signature ()." at "{}"
i1 = {};
// XPECT noerrors -->
i1 = (input:number) => {return "hello";};

const c1 = (input:number) => {return "hello";};
// XPECT noerrors -->
i1 = c1;


// Following cases are forbidden. Otherwise the optional fields could be added during runtime accidentally.


function foo(input: number) { return "hello";}
// XPECT errors --> "{function(number):any} is not a structural subtype of ~I: missing field optField." at "foo"
i1 = foo;


class X {
	myMethod(input: number) { return "hello"; }
}
let x = new X();
// XPECT warnings --> "A reference to method myMethod is created detached from a (correct) this-instance." at "myMethod"
// XPECT errors --> "{function(number):any} is not a structural subtype of ~I: missing field optField." at "x.myMethod"
i1 = x.myMethod;

