/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.xpect.ui.tests.OverridingContentAssistXpectPluginUITest

 	Workspace {
		JavaProject "N4JSXpectTests" {
			Folder "model" {
				Folder "proposal" {
					Folder "contentassist" {
						ThisFile {}
					}
				}
			}
			Folder "src-gen" {}
			File "package.json" { from="../../../package.json" }
		}
	}

   END_SETUP
 */
 
class A {
	fooSimple() {}
	public foo1AccessModifier() {}
	public foo2FormalParameter(p: string) {}
	public foo3WithReturn(): String {
		return null;
	}
	public foo4FParAndReturn(p: string): String {
		return null;
	}
	public <E> foo5Generic(): E {
		return null;
	}
	public async foo6Async() {}
	public static foo7Static() {}
	public *gen(p: int) {}
	public unionTypeMethod(): string | int {
		return null;
	}
	public intersectionTypeMethod(): string & int {
		return null;
	}
	protected iterable2ReturnTypeMethod(): [string, int] {
		return null;
	}
	protected iterable3ReturnTypeMethod(): [string, int, string] {
		return null;
	}
	public foo8MultiParamAndReturn(p1: string, p2: int): String {
		return null;
	}
	public fooArray(p: string): Array<string> {
		return null;
	}
	public fooVariadic(...p: string): string {
        return null;
    }
}

abstract class A1 {
	public abstract foo1Abstract() 
}

class B extends A {
/* XPECT contentAssist at 'f<|>' apply 'fooSimple(): void' ---
<...>
@Override
fooSimple(): void {

}
<...>
--- */
f
}

abstract class B0 extends A1 {
/* XPECT contentAssist at 'f<|>' apply 'foo1Abstract(): void' ---
<...>
@Override
<...>
public foo1Abstract(): void {

}
<...>
--- */
f
}

class B1 extends A {
/* XPECT contentAssist at 'f<|>' apply 'foo1AccessModifier(): void' ---
<...>
@Override
<...>
public foo1AccessModifier(): void {

}
<...>
--- */
f
}

class B2 extends A {
/* XPECT contentAssist at 'f<|>' apply 'foo2FormalParameter(p: string): void' ---
<...>
@Override
<...>
public foo2FormalParameter(p: string): void {

}
<...>
--- */
public f
}

class B3 extends A {
/* XPECT contentAssist at 'f<|>' apply 'foo3WithReturn(): String' ---
<...>
@Override
<...>
public foo3WithReturn(): String {
		// TODO Auto-generated method stub
		return super.foo3WithReturn();
	}
<...>
--- */
public f
}

class B4 extends A { 
@Override
/* XPECT contentAssist at 'f<|>' apply 'foo4FParAndReturn(p: string): String' ---
<...>
@Override
<...>
	public foo4FParAndReturn(p: string): String {
		// TODO Auto-generated method stub
		return super.foo4FParAndReturn(p);
	}  
<...>
--- */
f 
}

class B5 extends A { 
@Override
/* XPECT contentAssist at 'f<|>' apply 'foo5Generic(): E' ---
<...>
@Override
<...>
	public <E> foo5Generic(): E {
		// TODO Auto-generated method stub
		return super.foo5Generic();
	} 
<...>
--- */
f 
}

class B6 extends A { 
@Override
/* XPECT contentAssist at 'f<|>' apply 'foo6Async(): void' ---
<...>
@Override
<...>
	public async foo6Async(): void {

	}  
<...>
--- */
public f 
}

class B7 extends A { 
@Override
/* XPECT contentAssist at 'f<|>' apply 'foo7Static(): void' ---
<...>
@Override
<...>
	public static foo7Static(): void {

	} 
<...>
--- */
public f 
}

class B8 extends A { 
@Override
/* XPECT contentAssist at 'f<|>' apply 'foo8MultiParamAndReturn(p1: string, p2: int): String' ---
<...>
@Override
<...>
	public foo8MultiParamAndReturn(p1: string, p2: int): String {
		// TODO Auto-generated method stub
		return super.foo8MultiParamAndReturn(p1, p2);
	}  
<...>
--- */
f 
}

class B9 extends A {
/* XPECT contentAssist at 'g<|>' apply 'gen(p: int): void' ---
<...>
@Override
<...>
public *gen(p: int): void {

}
<...>
--- */
g
}

class B10 extends A {
/* XPECT contentAssist at 'u<|>' apply 'unionTypeMethod(): string | int' ---
<...>
@Override
<...>
public unionTypeMethod(): string | int {
		// TODO Auto-generated method stub
		return super.unionTypeMethod();
	}
<...>
--- */
u
}

class B11 extends A {
/* XPECT contentAssist at 'i<|>' apply 'intersectionTypeMethod(): string & int' ---
<...>
@Override
<...>
public intersectionTypeMethod(): string & int {
		// TODO Auto-generated method stub
		return super.intersectionTypeMethod();
	}
<...>
--- */
i
}

class B12 extends A {
/* XPECT contentAssist at 'i<|>' apply 'iterable2ReturnTypeMethod(): [string, int]' ---
<...>
@Override
<...>
protected iterable2ReturnTypeMethod(): [string, int] {
		// TODO Auto-generated method stub
		return super.iterable2ReturnTypeMethod();
	}
<...>
--- */
i
}

class B13 extends A {
/* XPECT contentAssist at 'i<|>' apply 'iterable3ReturnTypeMethod(): [string, int, string]' ---
<...>
@Override
<...>
protected iterable3ReturnTypeMethod(): [string, int, string] {
		// TODO Auto-generated method stub
		return super.iterable3ReturnTypeMethod();
	}
<...>
--- */
i
}

class B14 extends A { 
@Override
/* XPECT contentAssist at 'f<|>' apply 'fooArray(p: string): Array<string>' ---
<...>
@Override
<...>
	public fooArray(p: string): Array<string> {
		// TODO Auto-generated method stub
		return super.fooArray(p);
	}  
<...>
--- */
f 
}

class B15OverrideBuiltInMethod extends A { 
@Override
/* XPECT contentAssist at 'f<|>' apply 'freeze(obj: T): T' ---
<...>
@Override
<...>
	public static <T extends Object> freeze(obj: T): T {
		// TODO Auto-generated method stub
		return super.freeze(obj);
	}  
<...>
--- */
f 
}

class B16 extends A {
/* XPECT contentAssist at 'f<|>' apply 'fooVariadic(...p: string): string' ---
<...>
@Override
<...>
	public fooVariadic(...p: string): string {
		// TODO Auto-generated method stub
		return null;
	}
<...>
--- */
f
}
