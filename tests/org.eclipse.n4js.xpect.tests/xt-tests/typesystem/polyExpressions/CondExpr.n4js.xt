/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.xpect.tests.N4jsXtTest END_SETUP */



interface I {
    public mfi : number;
}
class J implements I {
    public mfj : number;
}
class K implements I {
    public mfj : number;
}

let b : boolean = true;


// XPECT type of '{i : new J()}' --> ~Object with { i: ~I }
const k1 : ~Object with {i: ~I} = {i : new J()};

// XPECT type of 'b ? {i : new J()} : undefined' --> ~Object with { i: ~I }
const k2 : ~Object with {i: ~I} = b ? {i : new J()} : undefined;

// XPECT type of 'b ? {i : new J()} : null' --> ~Object with { i: ~I }
const k3 : ~Object with {i: ~I} = b ? {i : new J()} : null;

// XPECT noerrors --> 
// XPECT type of 'b ? {i : new J()} : {i : new K()}' --> ~Object with { i: ~I }
const k4  : ~Object with {i: ~I} = b ? {i : new J()} : {i : new K()};




// XPECT type of 'kk1' --> ~Object with { i: ~I }
const kk1 : ~Object with {i: ~I} = b ? b ? {i : new J()} : undefined : null;
