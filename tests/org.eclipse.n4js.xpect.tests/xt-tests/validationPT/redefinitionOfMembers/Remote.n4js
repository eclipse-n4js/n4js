/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */



export public class C_field {
	@Internal public f1;
	project f2;
	private f3;
}

export public class C_accessorConcrete {
	@Internal public get g1() {return null;}
	project get g2() {return null;}
	private get g3() {return null;}
	@Internal public set s1(value) {}
	project set s2(value) {}
	private set s3(value) {}
}

export public abstract class C_accessorAbstract {
	@Internal public abstract get ga1()
	project abstract get ga2()
	private abstract get ga3()
	@Internal public abstract set sa1(value)
	project abstract set sa2(value)
	private abstract set sa3(value)
}

export public class C_methodConcrete {
	@Internal public m1() {}
	project m2() {}
	private m3() {}
}

export public abstract class C_methodAbstract {
	@Internal public abstract ma1()
	project abstract ma2()
	private abstract ma3()
}

export public interface I_field {
	@Internal public f1;
	project f2;
// not allowed:
//	private f3;
}

export public interface I_accessorConcrete {
	@Internal public get g1() {return null;}
	project get g2() {return null;}
// not allowed:
//	private get g3() {return null;}
	@Internal public set s1(value) {}
	project set s2(value) {}
// not allowed:
//	private set s3(value) {}
}

export public interface I_accessorAbstract {
	@Internal public abstract get ga1()
	project abstract get ga2()
// not allowed:
//	private abstract get ga3()
	@Internal public abstract set sa1(value)
	project abstract set sa2(value)
// not allowed:
//	private abstract set sa3(value)
}

export public interface I_methodConcrete {
	@Internal public m1() {}
	project m2() {}
// not allowed:
//	private m3() {}
}

export public interface I_methodAbstract {
	@Internal public ma1()
	project ma2()
// not allowed:
//	private ma3()
}

export public class C_staticMembers {
	@Internal public static ms1() {}
	project static ms2() {}
	private static ms3() {}
}

export public interface I_staticMembers {
	@Internal public static ms1() {}
	project static ms2() {}
// not allowed:
//	private static ms3() {}
}

