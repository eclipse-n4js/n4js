/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.xpect.tests.N4jsXtTest

	Workspace {
		JavaProject "N4JSXpectTests" {
			Folder "model" {
				Folder "scoping" {
					ThisFile {}
				}
			}
			File "package.json" { from="../package.json" }
		}
	}

	END_SETUP
 */

var myObjectLiteral = {
/* XPECT scope at '<|>any name' ---
Array, Array2, Array3, Array4, Array5, Array6, Array7, Array8, Array9,
ArrayBuffer, ArrayBufferConstructor, ArrayBufferLike, ArrayBufferTypes, ArrayBufferView, ArrayConstructor, ArrayLike,
AsyncGenerator, AsyncIterable, AsyncIterator, Boolean, BooleanConstructor, ConcatArray, DataView, DataViewConstructor,
Date, DateConstructor, Error, ErrorConstructor, EvalError, EvalErrorConstructor,
Float32Array, Float32ArrayConstructor, Float64Array, Float64ArrayConstructor, Function, FunctionConstructor, Generator,
IArguments, ImportAssertions, ImportCallOptions, ImportMeta,
Int16Array, Int16ArrayConstructor, Int32Array, Int32ArrayConstructor, Int8Array, Int8ArrayConstructor,
Iterable,
Iterable2, Iterable3, Iterable4, Iterable5, Iterable6, Iterable7, Iterable8, Iterable9,
Iterator, IteratorEntry,
JSON, Math,
N4Accessor, N4Annotation, N4ApiNotImplementedError, N4Class, N4Classifier, N4DataField, N4Element, N4Enum, N4EnumType,
N4Interface, N4Member, N4Method, N4NamedElement, N4NumberBasedEnum, N4Object, N4Provider, N4StringBasedEnum, N4Type,
Number, NumberConstructor, Object, ObjectConstructor, Promise, PromiseConstructor, PromiseLike,
PropertyDescriptor, PropertyDescriptorMap, PropertyKey, RangeError, RangeErrorConstructor, ReadonlyArray, ReferenceError, ReferenceErrorConstructor,
RegExp, RegExpConstructor, RegExpExecArray, RegExpMatchArray,
String, StringConstructor, Symbol, SyntaxError, SyntaxErrorConstructor, ThisType, TypeError, TypeErrorConstructor, TypedPropertyDescriptor,
URIError, URIErrorConstructor, Uint16Array, Uint16ArrayConstructor, Uint32Array, Uint32ArrayConstructor, Uint8Array, Uint8ArrayConstructor, Uint8ClampedArray, Uint8ClampedArrayConstructor,
any, boolean, console, global, i18nKey, import, int, number, pathSelector, string, symbol, typeName, undefined
---*/
	any name: "o",
	complex: function() {
/* XPECT scope at 'this.<|>name' ---
complex, __proto__, constructor, hasOwnProperty, isPrototypeOf, name,
propertyIsEnumerable, toLocaleString, toString, valueOf
--- */
		var name = "complex" + this.name;
	}
}
/* XPECT scope at 'myObjectLiteral.<|>name' ---
complex, __proto__, constructor, hasOwnProperty, isPrototypeOf, name,
propertyIsEnumerable, toLocaleString, toString, valueOf
--- */
myObjectLiteral.name
