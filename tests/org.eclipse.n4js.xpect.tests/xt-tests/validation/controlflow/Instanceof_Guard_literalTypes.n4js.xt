/*
 * Copyright (c) 2021 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.xpect.tests.N4JSXpectTest END_SETUP */


enum Color {
	RED, GREEN, BLUE
}


function f01_bool() {
	let a = false;
	if (a === true) {
		// XPECT instanceofguard of 'a' --> a<:true
		a;
	} else {
		// XPECT instanceofguard of 'a' --> a!<:true
		// XPECT type of 'a' --> boolean
		a;
	}
}


function f01_num() {
	let a = 1;
	if (a === 2) {
		// XPECT instanceofguard of 'a' --> a<:2
		a;
	} else {
		// XPECT instanceofguard of 'a' --> a!<:2
		// XPECT type of 'a' --> int
		a;
	}
}


function f01_str() {
	let a = "off";
	if (a === "on") {
		// XPECT instanceofguard of 'a' --> a<:"on"
		a;
	} else {
		// XPECT instanceofguard of 'a' --> a!<:"on"
		// XPECT type of 'a' --> string
		a;
	}
}


function f01_enum() {
	let a = Color.RED;
	if (a === Color.GREEN) {
		// XPECT instanceofguard of 'a' --> a<:Color.GREEN
		a;
	} else {
		// XPECT instanceofguard of 'a' --> a!<:Color.GREEN
		// XPECT type of 'a' --> Color
		a;
	}
}


function f02_bool() {
	let a: false | true = false;
	if (a === true) {
		// XPECT instanceofguard of 'a' --> a<:true
		a;
	} else {
		// XPECT instanceofguard of 'a' --> a!<:true
		// XPECT type of 'a' --> false
		a;
	}
}


function f02_num() {
	let a: 1 | 2 = 1;
	if (a === 2) {
		// XPECT instanceofguard of 'a' --> a<:2
		a;
	} else {
		// XPECT instanceofguard of 'a' --> a!<:2
		// XPECT type of 'a' --> 1
		a;
	}
}


function f02_str() {
	let a: "off" | "on" = "off";
	if (a === "on") {
		// XPECT instanceofguard of 'a' --> a<:"on"
		a;
	} else {
		// XPECT instanceofguard of 'a' --> a!<:"on"
		// XPECT type of 'a' --> "off"
		a;
	}
}


function f02_enum() {
	let a: Color.RED | Color.GREEN = Color.RED;
	if (a === Color.GREEN) {
		// XPECT instanceofguard of 'a' --> a<:Color.GREEN
		a;
	} else {
		// XPECT instanceofguard of 'a' --> a!<:Color.GREEN
		// XPECT type of 'a' --> Color.RED
		a;
	}
}


function f03() {
	let a = "off";
	if ("on" === a) { // note: literal is on LHS
		// XPECT instanceofguard of 'a' --> a<:"on"
		a;
	}
}
