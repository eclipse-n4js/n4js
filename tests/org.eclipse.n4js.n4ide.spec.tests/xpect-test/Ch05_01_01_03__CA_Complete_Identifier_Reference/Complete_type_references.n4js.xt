/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.n4ide.spec.tests.N4JSXpectPluginUITest
	
	Workspace {
		JavaProject "ProjectCA" {
			SrcFolder {
				ThisFile {}
				File "ModuleA.n4js" {}
				File "ModuleB.n4js" {}
				File "ModuleC.n4js" {}
			}
			File "package.json" { from="./package.json" }
		}
	}
	
	END_SETUP
*/


// some dummy stuff that should *NOT* show up in the content assist proposals

function foo(param_foo : string) {
	var vf;
}

class C {
	m(param_m : string) {
		var vm;
	}
}


// a dummy type we use to avoid having a broken AST

class ClassRemote {}


// local type / variable

class ClassLocal {}
var vg;

//
// case: <TYPE>
//

// XPECT contentAssistList at '<|>' proposals contains --> C, ClassLocal, ClassRemote, ClassRemoteInA, ClassRemoteInB, ClassRemoteInC, console, constructor
// XPECT contentAssistList at '<|>' proposals not --> vf, vm, param_foo, param_m

// XPECT contentAssistList at 'C<|>;' proposals contains --> C, ClassLocal, ClassRemote, ClassRemoteInA, ClassRemoteInB, ClassRemoteInC, console, constructor
// XPECT contentAssistList at 'C<|>;' proposals not --> vf, vm, param_foo, param_m
C;

// XPECT contentAssistList at 'ClassR<|>;' proposals contains --> ClassRemote, ClassRemoteInA, ClassRemoteInB, ClassRemoteInC
// XPECT contentAssistList at 'ClassR<|>;' proposals not --> vf, vm, param_foo, param_m, ClassLocal, console, constructor
ClassR;

// XPECT contentAssistList at 'CRIA<|>;' proposals contains --> ClassRemoteInA
// XPECT contentAssistList at 'CRIA<|>;' proposals not --> vf, vm, param_foo, param_m, ClassLocal, console, constructor, ClassRemoteInB, ClassRemoteInC
CRIA;

//
// case: var <TYPE> <NAME>;
//

// XPECT contentAssistList at 'var v01 : <|>ClassRemote' proposals contains --> ClassRemoteInA, ClassRemoteInB, ClassRemoteInC, ClassLocal
// XPECT contentAssistList at 'var v01 : <|>ClassRemote' proposals not --> vg, vf, vm, param_foo, param_m
var v01 : ClassRemote;

// XPECT contentAssistList at 'var v02 : Class<|>Remote' proposals contains --> ClassRemoteInA, ClassRemoteInB, ClassRemoteInC, ClassLocal
// XPECT contentAssistList at 'var v02 : Class<|>Remote' proposals not --> vg, vf, vm, param_foo, param_m
var v02 : ClassRemote;

// XPECT contentAssistList at 'var v03 : ClassRemote<|>;' proposals contains --> "ClassRemoteInA", "ClassRemoteInB", "ClassRemoteInC"
// XPECT contentAssistList at 'var v03 : ClassRemote<|>;' proposals not --> vg, vf, vm, param_foo, param_m
var v03 : ClassRemote;


//
// case: var <NAME>
//

// XPECT contentAssistList at 'var someName: <|>C' proposals contains --> "ClassLocal", "ClassRemoteInA", "ClassRemoteInB", "ClassRemoteInC"
// XPECT contentAssistList at 'var someName: <|>C' proposals not --> vg, vf, vm, param_foo, param_m
var someName: C 

// XPECT contentAssistList at 'var x1: Class<|>Rem' proposals contains --> "ClassLocal", "ClassRemoteInA", "ClassRemoteInB", "ClassRemoteInC"
// XPECT contentAssistList at 'var x1: Class<|>Rem' proposals not --> vg, vf, vm, param_foo, param_m
var x1: ClassRem 

// XPECT contentAssistList at 'x2: ClassRemo<|> ' proposals contains --> "ClassRemoteInA", "ClassRemoteInB", "ClassRemoteInC"
// XPECT contentAssistList at 'x2: ClassRemo<|> ' proposals not --> vg, vf, vm, param_foo, param_m
var x2: ClassRemo 


//
// case: ... new <TYPE>();
//

// would like to see (visible) variables here as well XPECT  contentAssistList at 'new <|>ClassRemote' proposals contains --> ClassRemoteInA, ClassRemoteInB, ClassRemoteInC, ClassLocal, vg
// XPECT contentAssistList at 'new <|>ClassRemote()' proposals contains --> ClassRemoteInA, ClassRemoteInB, ClassRemoteInC, ClassLocal
// XPECT contentAssistList at 'new <|>ClassRemote()' proposals not --> vf, vm, param_foo, param_m
var v11 = new ClassRemote();

// XPECT contentAssistList at 'new Class<|>Remote()' proposals contains --> ClassRemoteInA, ClassRemoteInB, ClassRemoteInC, ClassLocal
// XPECT contentAssistList at 'new Class<|>Remote()' proposals not --> vf, vm, param_foo, param_m
var v12 = new ClassRemote();

// XPECT contentAssistList at 'new ClassRemote<|>()' proposals contains --> ClassRemoteInA, ClassRemoteInB, ClassRemoteInC
// XPECT contentAssistList at 'new ClassRemote<|>()' proposals not --> vf, vm, param_foo, param_m
var v13 = new ClassRemote();


//
// case: ... new <TYPE>
//

// would like to see (visible) variables here as well XPECT  contentAssistList at 'new <|>ClassRemote' proposals contains --> ClassRemoteInA, ClassRemoteInB, ClassRemoteInC, ClassLocal, vg
// XPECT contentAssistList at 'new <|>ClassRemote' proposals contains --> ClassRemoteInA, ClassRemoteInB, ClassRemoteInC, ClassLocal
// XPECT contentAssistList at 'new <|>ClassRemote' proposals not --> vf, vm, param_foo, param_m
var v21 = new ClassRemote

// XPECT contentAssistList at 'new Class<|>Remote' proposals contains --> ClassRemoteInA, ClassRemoteInB, ClassRemoteInC, ClassLocal
// XPECT contentAssistList at 'new Class<|>Remote' proposals not --> vf, vm, param_foo, param_m
var v22 = new ClassRemote

// XPECT contentAssistList at 'new ClassRemote<|>' proposals contains --> ClassRemoteInA, ClassRemoteInB, ClassRemoteInC
// XPECT contentAssistList at  'ew ClassRemote<|>' proposals not --> vf, vm, param_foo, param_m
var v23 = new ClassRemote


//
// case: var v4 = <TYPE>
//

// XPECT contentAssistList at ' = <|>ClassRemote' proposals contains --> ClassRemoteInA, ClassRemoteInB, ClassRemoteInC, ClassLocal, vg
// XPECT contentAssistList at ' = <|>ClassRemote' proposals not --> vf, vm, param_foo, param_m
var v31 = ClassRemote

// XPECT contentAssistList at ' = Class<|>Remote' proposals contains --> ClassRemoteInA, ClassRemoteInB, ClassRemoteInC, ClassLocal
// XPECT contentAssistList at ' = Class<|>Remote' proposals not --> vf, vm, param_foo, param_m
var v32 = ClassRemote

// XPECT contentAssistList at ' = ClassRemote<|>' proposals contains --> ClassRemoteInA, ClassRemoteInB, ClassRemoteInC
// XPECT contentAssistList at  '= ClassRemote<|>' proposals not --> vf, vm, param_foo, param_m
var v33 = ClassRemote


//
// case: passing types to functions (i.e. classifier and constructor type ref)
//

function fCtor(ctor : any) {}
// XPECT contentAssistList at '(<|>ClassRemote)' proposals contains --> ClassRemoteInA, ClassRemoteInB, ClassRemoteInC, ClassLocal, vg
// XPECT contentAssistList at '(<|>ClassRemote)' proposals not --> vf, vm, param_foo, param_m
fCtor(ClassRemote);

// XPECT contentAssistList at '(Class<|>Remote)' proposals contains --> ClassRemoteInA, ClassRemoteInB, ClassRemoteInC, ClassLocal
// XPECT contentAssistList at '(Class<|>Remote)' proposals not --> vf, vm, param_foo, param_m
fCtor(ClassRemote);

// XPECT contentAssistList at '(ClassRemote<|>)' proposals contains --> ClassRemoteInA, ClassRemoteInB, ClassRemoteInC
// XPECT contentAssistList at '(ClassRemote<|>)' proposals not --> vf, vm, param_foo, param_m
fCtor(ClassRemote);

