/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.n4ide.spec.tests.N4JSXpectPluginUITest

	Workspace {
		Project "some.test.project" {
			File "package.json" { from="../../some.test.project/package.json" }
			Folder "src" {
				ThisFile { from="../../some.test.project/src/CAForTestedProjectVisibilityNoNamespaces.n4js.xt" }
			}
		}
		Project "some.tested.system.project" {
			File "package.json" { from="../../some.tested.system.project/package.json" }
			Folder "src" {
				File "VisibleModule.n4js" { from="../../some.tested.system.project/src/VisibleModule.n4js" }
			}
		}
		Project "some.untested.system.project" {
			File "package.json" { from="../../some.untested.system.project/package.json" }
			Folder "src" {
				File "NotVisibleModule.n4js" { from="../../some.untested.system.project/src/NotVisibleModule.n4js" }
			}
		}
	}

   END_SETUP
*/

// XPECT errors --> "The type VMPrivateClass is not visible." at "VMPrivateClass"
import {VMPublicClass, VMInternalPublicClass, VMProjectClass, VMPrivateClass} from "VisibleModule"
// XPECT errors --> "Cannot resolve plain module specifier (without project name as first segment): no matching module found." at ""NotVisibleModule""
import { NVMPublicClass } from "NotVisibleModule"


//TESTED PUBLIC//

// XPECT contentAssistList at 'VM<|>PublicClass' proposals contains --> VMPublicClass, VMInternalPublicClass, VMProjectClass
// XPECT contentAssistList at 'VM<|>PublicClass' proposals not --> VMPrivateClass
var v1: VMPublicClass = null;

// XPECT contentAssistList at 'VMPublicClass.<|>s' proposals contains --> spubcProjectField, spubcProtectedField, spubcPublicdField, spubcProjectMethod, spubcProtectedMethod, spubcPublicdMethod
// XPECT contentAssistList at 'VMPublicClass.<|>s' proposals not --> spubcPrivateMethod, spubcPrivateField
VMPublicClass.s

// XPECT contentAssistList at 'new VMPublicClass().<|>p' proposals contains --> pubcProjectField, pubcProtectedField, pubcPublicdField, pubcProjectMethod, pubcProtectedMethod, pubcPublicdMethod
// XPECT contentAssistList at 'new VMPublicClass().<|>p' proposals not --> pubcPrivateMethod, pubcPrivateField
new VMPublicClass().p


//TESTED INTERNAL PUBLIC//


// XPECT contentAssistList at 'VM<|>InternalPublicClass' proposals contains --> VMPublicClass, VMInternalPublicClass, VMProjectClass
// XPECT contentAssistList at 'VM<|>InternalPublicClass' proposals not --> VMPrivateClass
var v2: VMInternalPublicClass = null;

// XPECT contentAssistList at 'VMInternalPublicClass.<|>s' proposals contains --> sintpubcProjectField, sintpubcProtectedField, sintpubcPublicdField, sintpubcProjectMethod, sintpubcProtectedMethod, sintpubcPublicdMethod
// XPECT contentAssistList at 'VMInternalPublicClass.<|>s' proposals not --> sintpubcPrivateMethod, sintpubcPrivateField
VMInternalPublicClass.s

// XPECT contentAssistList at 'new VMInternalPublicClass().<|>p' proposals contains --> intpubcProjectField, intpubcProtectedField, intpubcPublicdField, intpubcProjectMethod, intpubcProtectedMethod, intpubcPublicdMethod
// XPECT contentAssistList at 'new VMInternalPublicClass().<|>p' proposals not --> intpubcPrivateMethod, intpubcPrivateField
new VMInternalPublicClass().p


//TESTED PROJECT//


// XPECT contentAssistList at 'VM<|>ProjectClass' proposals contains --> VMPublicClass, VMInternalPublicClass, VMProjectClass
// XPECT contentAssistList at 'VM<|>ProjectClass' proposals not --> VMPrivateClass
var v3: VMProjectClass = null;

// XPECT contentAssistList at 'VMProjectClass.<|>s' proposals contains --> projcProjectField, projcProtectedField, projcPublicdField, projcProjectMethod, projcProtectedMethod, projcPublicdMethod
// XPECT contentAssistList at 'VMProjectClass.<|>s' proposals not --> projcPrivateMethod, projcPrivateField
VMProjectClass.s

// XPECT contentAssistList at 'new VMProjectClass().<|>p' proposals contains --> projcProjectField, projcProtectedField, projcPublicdField, projcProjectMethod, projcProtectedMethod, projcPublicdMethod
// XPECT contentAssistList at 'new VMProjectClass().<|>p' proposals not --> projcPrivateMethod, projcPrivateField
new VMProjectClass().p


//TESTED PRIVATE//


// XPECT contentAssistList at 'VM<|>PrivateClass' proposals not --> VMPrivateClass
var v4: VMPrivateClass = null;

// XPECT contentAssistList at 'VMPrivateClass.<|>s' proposals contains -->
// XPECT contentAssistList at 'VMPrivateClass.<|>s' proposals not --> projcPrivateMethod, projcPrivateField, projcProjectField, projcProtectedField, projcPublicdField, projcProjectMethod, projcProtectedMethod, projcPublicdMethod
VMPrivateClass.s

// XPECT contentAssistList at 'new VMPrivateClass().<|>p' proposals contains -->
// XPECT contentAssistList at 'new VMPrivateClass().<|>p' proposals not --> projcPrivateMethod, projcPrivateField, projcProjectField, projcProtectedField, projcPublicdField, projcProjectMethod, projcProtectedMethod, projcPublicdMethod
new VMPrivateClass().p


//UNTESTED PUBLIC//


// XPECT contentAssistList at 'NVM<|>PublicClass' proposals contains -->
// XPECT contentAssistList at 'NVM<|>PublicClass' proposals not --> NMPrivateClass, NVMPublicClass, NVMInternalPublicClass, NVMProjectClass
var v5: NVMPublicClass = null;

// XPECT contentAssistList at 'NVMPublicClass.<|>s' proposals contains -->
// XPECT contentAssistList at 'NVMPublicClass.<|>s' proposals not --> spubcPrivateMethod, spubcPrivateField, spubcProjectField, spubcProtectedField, spubcPublicdField, spubcProjectMethod, spubcProtectedMethod, spubcPublicdMethod
NVMPublicClass.s

// XPECT contentAssistList at 'new NVMPublicClass().<|>p' proposals contains -->
// XPECT contentAssistList at 'new NVMPublicClass().<|>p' proposals not --> pubcPrivateMethod, pubcPrivateField, pubcProjectField, pubcProtectedField, pubcPublicdField, pubcProjectMethod, pubcProtectedMethod, pubcPublicdMethod
new NVMPublicClass().p
