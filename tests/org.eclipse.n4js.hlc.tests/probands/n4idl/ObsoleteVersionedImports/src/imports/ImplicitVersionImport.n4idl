/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/*
 * NOTE: In order to execute this test, please execute ImplicitVersionImport_run.n4js.n4idl.
 *
 * This module cannot contain any top-level statements, thus an execution is not possible.
 * The expectations of this test are also defined in the runner module.
 */

import {R} from "imports/ToImport";
import {P as PU, S as AliasS} from "imports/ToImport";
import {T} from "imports/ToImport";

import {Q} from "imports/ToImport";

/**
 * Checks for the existence of the given given identifier
 * and returns it.
 *
 * Returns {@code undefined} otherwise.
 */
function globalIdentifier(identifier : string) {
	let expr = "typeof " + identifier + " === 'undefined' ? undefined : " + identifier;
	return eval(expr);
}

@Migration
export public function f() {
	var r1: R#1 = new R#1();
	var r3: R#3 = new R#3();

	var p1: PU#1 = new PU#1();

	var s1 = new AliasS#1();
	var s2 = new AliasS#2();
	var s3 = new AliasS#3();

	var t1 = new T#1();

	console.log("R#1:", globalIdentifier("R$1"));
	console.log("R#2:", globalIdentifier("R$2"));
	console.log("R#3:", globalIdentifier("R$3"));

	console.log("PU#1:", globalIdentifier("PU$1"));
	console.log("PU#2:", globalIdentifier("PU$2"));

	console.log("AliasS#1:", globalIdentifier("AliasS$1"));
	console.log("AliasS#2:", globalIdentifier("AliasS$2"));
	console.log("AliasS#3:", globalIdentifier("AliasS$3"));

	console.log("T#1:", globalIdentifier("T$1"));
	console.log("T#2:", globalIdentifier("T$2"));
	
	console.log("Q#1:", globalIdentifier("Q$1"));
}