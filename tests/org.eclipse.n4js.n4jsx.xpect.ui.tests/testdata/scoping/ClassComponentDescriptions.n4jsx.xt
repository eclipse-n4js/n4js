/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.n4jsx.xpect.ui.tests.N4JSXXpectPluginTest

	Workspace {
		Project "N4JSXXpectTests" {
			Folder "model" {
				Folder "scoping" {
					ThisFile {}
				}
			}
			File "manifest.n4mf" { from="../../manifest.n4mf" }
		}
		Project "react" {
			File "index.n4jsd" { from = "../../react/index.n4jsd" }
			File "manifest.n4mf" { from = "../../react/manifest.n4mf" }
		}
	}

   END_SETUP
 */


import * as React from "react"


export public class LowerComponent extends React.Component<~React.ComponentProps with {whatTextShouldIShow : string}, ~Object with {squares: Array<string>}> {
	@Override
	public render() : React.Element{
		return (<div>{this.props.whatTextShouldIShow}</div>);
	}
}


/* XPECT scope at 'React.|Component'  ---
Array, Boolean, Component, ComponentProps, Date, Element, Error, EvalError,
Function, Generator, Iterable, Iterable2, Iterable3, Iterable4, Iterable5, Iterable6,
Iterable7, Iterable8, Iterable9, Iterator, IteratorEntry, JSON, LowerComponent, Math,
MyComponent, N4Accessor, N4Annotation, N4ApiNotImplementedError, N4Class, N4Classifier,
N4DataField, N4Element, N4Enum, N4EnumType, N4Field, N4Interface, N4Member, N4Method,
N4NamedElement, N4Object, N4Provider, N4Role, N4StringBasedEnum, N4StringBasedEnumType, N4Type,
Number, Object, Promise, PropConstraint, PropType, PropTypes, PureComponent,
RangeError, React, React.Component, React.ComponentProps, React.Element,
React.PropConstraint, React.PropType, React.PropTypes, React.PureComponent, React.cloneElement,
React.createElement, React.isValidElement, React.renderToStaticMarkup, React.renderToString,
ReferenceError, RegExp, String, Symbol, SyntaxError, TEMP_ReturnTypeOfMatchExec, TypeError,
URIError, any, boolean, cloneElement, console, createElement, i18nKey, int,
isValidElement, index.Component, index.ComponentProps,
index.Element, index.PropConstraint, index.PropType,
index.PropTypes, index.PureComponent, index.cloneElement,
index.createElement, index.isValidElement,
index.renderToStaticMarkup, index.renderToString, null, number, pathSelector,
renderToStaticMarkup, renderToString, scoping.ClassComponentDescriptions.LowerComponent,
scoping.ClassComponentDescriptions.MyComponent, string, symbol, typeName, undefined, void
--- */
export public class MyComponent extends React.Component<~React.ComponentProps with {aProp: string}, String> {

	@Override
	public render() : React.Element{
		const constText = "some text";
		/* XPECT scope at 'Lower|Component'  ---
		Array, Boolean, Component, ComponentProps, Date, Element, Error, EvalError,
		Function, Generator, Infinity, Iterable, Iterable2, Iterable3, Iterable4, Iterable5,
		Iterable6, Iterable7, Iterable8, Iterable9, Iterator, IteratorEntry, JSON, LowerComponent,
		Math, MyComponent, N4Accessor, N4Annotation, N4ApiNotImplementedError, N4Class,
		N4Classifier, N4DataField, N4Element, N4Enum, N4EnumType, N4Field, N4Interface, N4Member,
		N4Method, N4NamedElement, N4Object, N4Provider, N4Role, N4StringBasedEnum,
		N4StringBasedEnumType, N4Type, NaN, Number, Object, Promise, PropConstraint, PropType, PropTypes,
		PureComponent, RangeError, React, ReferenceError, RegExp, String, Symbol, SyntaxError,
		TEMP_ReturnTypeOfMatchExec, TypeError, URIError, __proto__, arguments, cloneElement, console, constText,
		constructor, createElement, decodeURI, decodeURIComponent, encodeURI, encodeURIComponent,
		eval, hasOwnProperty, isFinite, isNaN, isPrototypeOf, isValidElement,
		index.Component, index.ComponentProps, index.Element,
		index.PropConstraint, index.PropType, index.PropTypes,
		index.PureComponent, index.cloneElement, index.createElement,
		index.isValidElement, index.renderToStaticMarkup,
		index.renderToString, null, parseFloat, parseInt, propertyIsEnumerable, renderToStaticMarkup,
		renderToString, scoping.ClassComponentDescriptions.LowerComponent,
		scoping.ClassComponentDescriptions.MyComponent, toLocaleString, toString, undefined, valueOf, void
--- */
		return (<LowerComponent whatTextShouldIShow="Hallo">{constText}</LowerComponent>
		);
	}
}
