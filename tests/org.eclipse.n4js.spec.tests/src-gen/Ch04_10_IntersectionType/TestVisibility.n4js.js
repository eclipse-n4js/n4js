// Generated by N4JS transpiler; for copyright see original N4JS source file.

(function(System) {
	'use strict';
	System.register([], function($n4Export) {
		var A, B, C, ab;
		A = function A() {
			this.s = undefined;
		};
		B = {};
		C = {};
		return {
			setters: [],
			execute: function() {
				$makeClass(A, N4Object, [], {
					m: {
						value: function m___n4() {}
					},
					s: {
						value: undefined,
						writable: true
					}
				}, {}, function(instanceProto, staticProto) {
					var metaClass = new N4Class({
						name: 'A',
						origin: 'org.eclipse.n4js.spec.tests',
						fqn: 'Ch04_10_IntersectionType.TestVisibility.A',
						n4superType: N4Object.n4type,
						allImplementedInterfaces: [],
						ownedMembers: [
							new N4DataField({
								name: 's',
								isStatic: false,
								annotations: []
							}),
							new N4Method({
								name: 'm',
								isStatic: false,
								jsFunction: instanceProto['m'],
								annotations: []
							})
						],
						consumedMembers: [],
						annotations: []
					});
					return metaClass;
				});
				B.$fieldInit = function B_fieldInit(spec, mixinExclusion) {
					if (spec) {
						if (!(mixinExclusion.hasOwnProperty('s') || this.hasOwnProperty('s'))) {
							this.s = 's' in spec ? spec.s : undefined;
						}
					} else {
						if (!(mixinExclusion.hasOwnProperty('s') || this.hasOwnProperty('s'))) {
							this.s = undefined;
						}
					}
				};
				B.$methods = {
					m: {
						value: function m___n4() {}
					}
				};
				$makeInterface(B, function(instanceProto, staticProto) {
					var metaClass = new N4Interface({
						name: 'B',
						origin: 'org.eclipse.n4js.spec.tests',
						fqn: 'Ch04_10_IntersectionType.TestVisibility.B',
						n4superType: undefined,
						allImplementedInterfaces: [],
						ownedMembers: [
							new N4DataField({
								name: 's',
								isStatic: false,
								annotations: []
							}),
							new N4Method({
								name: 'm',
								isStatic: false,
								jsFunction: instanceProto['m'],
								annotations: []
							})
						],
						consumedMembers: [],
						annotations: []
					});
					return metaClass;
				});
				C.$fieldInit = function C_fieldInit(spec, mixinExclusion) {
					if (spec) {
						if (!(mixinExclusion.hasOwnProperty('s') || this.hasOwnProperty('s'))) {
							this.s = 's' in spec ? spec.s : undefined;
						}
					} else {
						if (!(mixinExclusion.hasOwnProperty('s') || this.hasOwnProperty('s'))) {
							this.s = undefined;
						}
					}
				};
				C.$methods = {
					m: {
						value: function m___n4() {}
					}
				};
				$makeInterface(C, function(instanceProto, staticProto) {
					var metaClass = new N4Interface({
						name: 'C',
						origin: 'org.eclipse.n4js.spec.tests',
						fqn: 'Ch04_10_IntersectionType.TestVisibility.C',
						n4superType: undefined,
						allImplementedInterfaces: [],
						ownedMembers: [
							new N4DataField({
								name: 's',
								isStatic: false,
								annotations: []
							}),
							new N4Method({
								name: 'm',
								isStatic: false,
								jsFunction: instanceProto['m'],
								annotations: []
							})
						],
						consumedMembers: [],
						annotations: []
					});
					return metaClass;
				});
				ab.s = null;
			}
		};
	});
})(typeof module !== 'undefined' && module.exports ? require('n4js-node').System(require, module) : System);
//# sourceMappingURL=TestVisibility.n4js.map
