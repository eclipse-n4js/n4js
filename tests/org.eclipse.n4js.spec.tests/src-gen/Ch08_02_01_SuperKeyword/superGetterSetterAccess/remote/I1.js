// Generated by N4JS transpiler; for copyright see original N4JS source file.

(function(System) {
	'use strict';
	System.register([], function($n4Export) {
		var I1;
		I1 = {};
		$n4Export('I1', I1);
		return {
			setters: [],
			execute: function() {
				I1.$fieldInit = function I1_fieldInit(spec, mixinExclusion) {};
				I1.$methods = {
					mI: {
						value: function mI___n4() {
							console.log('called I1#mI');
						}
					},
					gI: {
						get: function getGI___n4() {
							console.log('called I1#gI');
							return 123;
						}
					},
					sI: {
						set: function setSI___n4(value) {
							console.log('called I1#sI');
						}
					}
				};
				$makeInterface(I1, function(instanceProto, staticProto) {
					var metaClass = new N4Interface({
						name: 'I1',
						origin: 'org.eclipse.n4js.spec.tests',
						fqn: 'Ch08_02_01_SuperKeyword.superGetterSetterAccess.remote.I1.I1',
						n4superType: undefined,
						allImplementedInterfaces: [],
						ownedMembers: [
							new N4Accessor({
								name: 'gI',
								getter: true,
								isStatic: false,
								annotations: []
							}),
							new N4Accessor({
								name: 'sI',
								getter: false,
								isStatic: false,
								annotations: []
							}),
							new N4Method({
								name: 'mI',
								isStatic: false,
								jsFunction: instanceProto['mI'],
								annotations: []
							})
						],
						consumedMembers: [],
						annotations: []
					});
					return metaClass;
				});
			}
		};
	});
})(typeof module !== 'undefined' && module.exports ? require('n4js-node').System(require, module) : System);
//# sourceMappingURL=I1.map
