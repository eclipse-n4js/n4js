// Generated by N4JS transpiler; for copyright see original N4JS source file.

(function(System) {
	'use strict';
	System.register([], function($n4Export) {
		var X, Y, A, I, Test;
		X = {};
		Y = {};
		A = function A() {};
		I = {};
		Test = function Test() {
			A.prototype.constructor.call(this);
			I.$fieldInit.call(this, undefined, {});
		};
		return {
			setters: [],
			execute: function() {
				X.$fieldInit = function X_fieldInit(spec, mixinExclusion) {};
				X.$methods = {};
				$makeInterface(X, function(instanceProto, staticProto) {
					var metaClass = new N4Interface({
						name: 'X',
						origin: 'org.eclipse.n4js.spec.tests',
						fqn: 'Ch05_04_01_Overriding_Members.Req72_Overriding_Members.method.Req72_err_08_SignatureConformance2.X',
						n4superType: undefined,
						allImplementedInterfaces: [],
						ownedMembers: [],
						consumedMembers: [],
						annotations: []
					});
					return metaClass;
				});
				Y.$fieldInit = function Y_fieldInit(spec, mixinExclusion) {};
				Y.$methods = {};
				$makeInterface(Y, function(instanceProto, staticProto) {
					var metaClass = new N4Interface({
						name: 'Y',
						origin: 'org.eclipse.n4js.spec.tests',
						fqn: 'Ch05_04_01_Overriding_Members.Req72_Overriding_Members.method.Req72_err_08_SignatureConformance2.Y',
						n4superType: undefined,
						allImplementedInterfaces: [],
						ownedMembers: [],
						consumedMembers: [],
						annotations: []
					});
					return metaClass;
				});
				$makeClass(A, N4Object, [], {
					m: {
						value: function m___n4(p) {
							return null;
						}
					}
				}, {}, function(instanceProto, staticProto) {
					var metaClass = new N4Class({
						name: 'A',
						origin: 'org.eclipse.n4js.spec.tests',
						fqn: 'Ch05_04_01_Overriding_Members.Req72_Overriding_Members.method.Req72_err_08_SignatureConformance2.A',
						n4superType: N4Object.n4type,
						allImplementedInterfaces: [],
						ownedMembers: [
							new N4Method({
								name: 'm',
								isStatic: false,
								jsFunction: instanceProto['m'],
								annotations: []
							})
						],
						consumedMembers: [],
						annotations: []
					});
					return metaClass;
				});
				I.$fieldInit = function I_fieldInit(spec, mixinExclusion) {};
				I.$methods = {};
				$makeInterface(I, function(instanceProto, staticProto) {
					var metaClass = new N4Interface({
						name: 'I',
						origin: 'org.eclipse.n4js.spec.tests',
						fqn: 'Ch05_04_01_Overriding_Members.Req72_Overriding_Members.method.Req72_err_08_SignatureConformance2.I',
						n4superType: undefined,
						allImplementedInterfaces: [],
						ownedMembers: [
							new N4Method({
								name: 'm',
								isStatic: false,
								jsFunction: instanceProto['m'],
								annotations: []
							})
						],
						consumedMembers: [],
						annotations: []
					});
					return metaClass;
				});
				$makeClass(Test, A, [
					I
				], {
					m: {
						value: function m___n4(p) {
							return null;
						}
					}
				}, {}, function(instanceProto, staticProto) {
					var metaClass = new N4Class({
						name: 'Test',
						origin: 'org.eclipse.n4js.spec.tests',
						fqn: 'Ch05_04_01_Overriding_Members.Req72_Overriding_Members.method.Req72_err_08_SignatureConformance2.Test',
						n4superType: A.n4type,
						allImplementedInterfaces: [
							'Ch05_04_01_Overriding_Members.Req72_Overriding_Members.method.Req72_err_08_SignatureConformance2.I'
						],
						ownedMembers: [
							new N4Method({
								name: 'm',
								isStatic: false,
								jsFunction: instanceProto['m'],
								annotations: []
							})
						],
						consumedMembers: [],
						annotations: []
					});
					return metaClass;
				});
				Object.defineProperty(Test, '$di', {
					value: {
						superType: A,
						fieldsInjectedTypes: []
					}
				});
			}
		};
	});
})(typeof module !== 'undefined' && module.exports ? require('n4js-node').System(require, module) : System);
//# sourceMappingURL=Req72_err_08_SignatureConformance2.n4js.map
