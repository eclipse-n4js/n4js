// Generated by N4JS transpiler; for copyright see original N4JS source file.

(function(System) {
	'use strict';
	System.register([], function($n4Export) {
		var C1, C2, C3, I1, f1, var1, let1, let2, cnst8, var2;
		C1 = function C1() {};
		$n4Export('C1', C1);
		C2 = function C2() {
			C1.prototype.constructor.call(this);
		};
		$n4Export('C2', C2);
		C3 = function C3() {
			C1.prototype.constructor.call(this);
		};
		$n4Export('C3', C3);
		I1 = {};
		$n4Export('I1', I1);
		f1 = function f1() {
			return "f1-version1";
		};
		$n4Export('f1', f1);
		return {
			setters: [],
			execute: function() {
				$makeClass(C1, N4Object, [], {
					version: {
						value: function version___n4() {
							return "C1.version";
						}
					}
				}, {}, function(instanceProto, staticProto) {
					var metaClass = new N4Class({
						name: 'C1',
						origin: 'org.eclipse.n4js.spec.tests',
						fqn: 'Ch09_02_04__ImportStatements.Exporter.C1',
						n4superType: N4Object.n4type,
						allImplementedInterfaces: [],
						ownedMembers: [
							new N4Method({
								name: 'version',
								isStatic: false,
								jsFunction: instanceProto['version'],
								annotations: []
							})
						],
						consumedMembers: [],
						annotations: []
					});
					return metaClass;
				});
				$makeClass(C2, C1, [], {
					version: {
						value: function version___n4() {
							return "C2.version";
						}
					}
				}, {}, function(instanceProto, staticProto) {
					var metaClass = new N4Class({
						name: 'C2',
						origin: 'org.eclipse.n4js.spec.tests',
						fqn: 'Ch09_02_04__ImportStatements.Exporter.C2',
						n4superType: C1.n4type,
						allImplementedInterfaces: [],
						ownedMembers: [
							new N4Method({
								name: 'version',
								isStatic: false,
								jsFunction: instanceProto['version'],
								annotations: []
							})
						],
						consumedMembers: [],
						annotations: []
					});
					return metaClass;
				});
				Object.defineProperty(C2, '$di', {
					value: {
						superType: C1,
						fieldsInjectedTypes: []
					}
				});
				$makeClass(C3, C1, [], {
					version: {
						value: function version___n4() {
							return "C3.version";
						}
					}
				}, {}, function(instanceProto, staticProto) {
					var metaClass = new N4Class({
						name: 'C3',
						origin: 'org.eclipse.n4js.spec.tests',
						fqn: 'Ch09_02_04__ImportStatements.Exporter.C3',
						n4superType: C1.n4type,
						allImplementedInterfaces: [],
						ownedMembers: [
							new N4Method({
								name: 'version',
								isStatic: false,
								jsFunction: instanceProto['version'],
								annotations: []
							})
						],
						consumedMembers: [],
						annotations: []
					});
					return metaClass;
				});
				Object.defineProperty(C3, '$di', {
					value: {
						superType: C1,
						fieldsInjectedTypes: []
					}
				});
				I1.$fieldInit = function I1_fieldInit(spec, mixinExclusion) {};
				I1.$methods = {};
				$makeInterface(I1, function(instanceProto, staticProto) {
					var metaClass = new N4Interface({
						name: 'I1',
						origin: 'org.eclipse.n4js.spec.tests',
						fqn: 'Ch09_02_04__ImportStatements.Exporter.I1',
						n4superType: undefined,
						allImplementedInterfaces: [],
						ownedMembers: [],
						consumedMembers: [],
						annotations: []
					});
					return metaClass;
				});
				var1 = 5;
				$n4Export('var1', var1);
				let1 = 7;
				$n4Export('let1', let1);
				let2 = 4;
				$n4Export('default', let2);
				cnst8 = 8;
				$n4Export('cnst8', cnst8);
				var2 = 6;
				console.log("f1():", f1());
				f1 = function() {
					return "f1-version2";
				};
				$n4Export('f1', f1);
				console.log("f1():", f1());
			}
		};
	});
})(typeof module !== 'undefined' && module.exports ? require('n4js-node').System(require, module) : System);
//# sourceMappingURL=Exporter.map
