/*
 * Copyright (c) 2021 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest

	ResourceSet {
		ThisFile {}
		File "Ext.n4jsd" { from="CallConstructSignature_inInterface_usage__Ext.n4jsd" }
	}

END_SETUP */


import { IfcGen } from "Ch05_02_02_02__CallSignature/Ext"

class ClsArg {}
let clsArg: ClsArg;

let ifcGen: IfcGen;


// XPECT errors --> "Incorrect number of type arguments for call signature (): expected 1, got 2." at "ifcGen"
// XPECT type of 'result01' --> CallResultGenCls<ClsArg>
let result01 = <ClsArg,string>ifcGen(null);
// XPECT errors --> ""bad" is not a subtype of ClsArg." at ""bad""
// XPECT type of 'result02' --> CallResultGenCls<ClsArg>
let result02 = <ClsArg>ifcGen("bad");
// XPECT noerrors -->
// XPECT type of 'result03' --> CallResultGenCls<ClsArg>
let result03 = <ClsArg>ifcGen(clsArg);


// XPECT noerrors -->
// XPECT type of 'result11' --> CallResultGenCls<ClsArg>
let result11 = ifcGen(clsArg);

// XPECT errors --> "Incorrect number of type arguments for construct signature new: expected 1, got 2." at "ifcGen"
// XPECT type of 'result21' --> ConstructResultGenCls<ClsArg>
let result21 = new ifcGen<ClsArg,string>(null);
// XPECT errors --> ""bad" is not a subtype of ClsArg." at ""bad""
// XPECT type of 'result22' --> ConstructResultGenCls<ClsArg>
let result22 = new ifcGen<ClsArg>("bad");
// XPECT noerrors -->
// XPECT type of 'result23' --> ConstructResultGenCls<ClsArg>
let result23 = new ifcGen<ClsArg>(clsArg);


// XPECT type of 'result01.getValue()' --> ClsArg
result01.getValue();
// XPECT type of 'result02.getValue()' --> ClsArg
result02.getValue();
// XPECT type of 'result03.getValue()' --> ClsArg
result03.getValue();
// XPECT type of 'result11.getValue()' --> ClsArg
result11.getValue();
// XPECT type of 'result21.getValue()' --> ClsArg
result21.getValue();
// XPECT type of 'result22.getValue()' --> ClsArg
result22.getValue();
// XPECT type of 'result23.getValue()' --> ClsArg
result23.getValue();
