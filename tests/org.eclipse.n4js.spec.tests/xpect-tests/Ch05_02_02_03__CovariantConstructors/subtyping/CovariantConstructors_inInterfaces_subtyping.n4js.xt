/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */


interface I_fail {
	// XPECT errors --> "Constructors in interfaces must be annotated with @CovariantConstructor." at "constructor"
	constructor(p: string)
}

interface I {
	//constructor(p: string)
}
interface II extends I {}

@CovariantConstructor
interface J {
	constructor(p: string)
}
interface JJ extends J {}

class D implements J {}
class DD extends D {}


var i: I;
var ii: II;
var j: J;
var jj: JJ;
var d: D;
var dd: DD;

var ctor_i: constructor{I};
var ctor_ext_i: constructor{? extends I};

var ctor_j: constructor{J};
var ctor_ext_j: constructor{? extends J};

var ctor_d: constructor{D};
var ctor_ext_d: constructor{D};



// -----------------------------------------------------------------------------
// normal behavior (i.e. without @CovariantConstructor)


// XPECT type of 'i.constructor' --> constructor{? extends I}
i.constructor;

// XPECT errors --> "constructor{? extends I} is not a subtype of constructor{I}." at "i.constructor"
ctor_i = i.constructor;
// XPECT errors --> "constructor{? extends II} is not a subtype of constructor{I}." at "ii.constructor"
ctor_i = ii.constructor;

// XPECT noerrors -->
ctor_ext_i = i.constructor;
// XPECT noerrors -->
ctor_ext_i = ii.constructor;


// -----------------------------------------------------------------------------
// behavior with @CovariantConstructor


// XPECT type of 'j.constructor' --> constructor{J}
j.constructor;

// XPECT noerrors -->
ctor_j = j.constructor;
// XPECT noerrors -->
ctor_j = jj.constructor;

// XPECT noerrors -->
ctor_ext_j = j.constructor;
// XPECT noerrors -->
ctor_ext_j = jj.constructor;


// implementing classes:

// XPECT type of 'd.constructor' --> constructor{D}
d.constructor;

// XPECT noerrors -->
ctor_d = d.constructor;
// XPECT noerrors -->
ctor_d = dd.constructor;

// XPECT noerrors -->
ctor_ext_d = d.constructor;
// XPECT noerrors -->
ctor_ext_d = dd.constructor;
