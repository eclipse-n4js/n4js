/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest

	ResourceSet {
		File "M.n4js" {}
		ThisFile {}
	}

	END_SETUP
*/

import { C, C_cc } from "Ch05_02_02_03__CovariantConstructors/validations_in_declarations/visibility/M";


/*
   NOTE: the idea of this test file is to ensure that visibility checking of member overrides is NOT applied to ordinary
   constructors (class D) and correctly applied to covariant constructors (class D_cc).
   In these cases, we will always have the two errors "Cannot extend class ..." and we could therefore omit the error
   on class D_cc's constructor as a unnecessary duplicate error. However, for consistency with handling of overrides of
   ordinary members, it is deemed more understandable to show this additional, slightly redundant error.
*/


// XPECT errors --> "Cannot extend class C because its constructor is not accessible." at "C"
class D extends C {
	// XPECT noerrors -->
	constructor(p: string) { super(""); }
}
// XPECT errors --> "Cannot extend class C_cc because its constructor is not accessible." at "C_cc"
class D_cc extends C_cc {
	// XPECT errors --> "The constructor of class D_cc cannot override or implement non-accessible constructor of class C_cc." at "constructor"
	constructor(p: string) { super(""); }
}
