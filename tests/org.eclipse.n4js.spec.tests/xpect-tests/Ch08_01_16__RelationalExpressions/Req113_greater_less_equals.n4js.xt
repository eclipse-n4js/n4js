/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */
// IDE-772

class A {}
interface I {}
interface R {}
function func() { return 5; }
function funcv() { return; }

///////////////////////////////////////////////////////////////////////////////////
// same type, one of { number, string, boolean }

var ba = new Array<boolean>();

// OK
ba[1] = 1 < 2

// OK
ba[2] = "b" < "a"

// OK
ba[3] = true < false


ba[4] =
// XPECT errors ---
//"int is not a subtype of string." at "1"
//"string is not a subtype of int." at ""a""
//---
1 < "a"


ba[5] =
// XPECT errors ---
// "boolean is not a subtype of string." at "true"
// "string is not a subtype of boolean." at ""a""
// ---
true < "a"


ba[6] =
// XPECT errors ---
// "boolean is not a subtype of int." at "true"
// "int is not a subtype of boolean." at "1"
// ---
1 < true


ba[7] =
// XPECT errors ---
// "A is not a subtype of union{number,string,boolean}." at "new A()"
// "type{R} is not a subtype of union{number,string,boolean}." at "R"
// ---
new A() < R

ba[8] =
// XPECT errors --> "any is not a subtype of int." at "func()"
1 < func()


ba[9] =
// XPECT errors --> "void is not a subtype of int." at "funcv()"
1 < funcv()


ba[10] =
// XPECT errors ---
//"any is not a subtype of union{number,string,boolean}." at "func()"
//"any is not a subtype of union{number,string,boolean}." at "func()"
// ---
func() < func()


///////////////////////////////////////////////////////////////////////////////////
// Assuming same behaviour for other comparisons, just one check for each symbol:

// OK
ba[11] = 1 > 2

// OK
ba[12] = 1 <= 2

// OK
ba[13] = 1 >= 2
