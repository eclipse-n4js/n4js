/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP  */


class A {}
class B {}
class C {}
class X {}


// case: expected type of ARRAY destruct pattern inside an ARRAY destruct pattern

var v0 : Iterable3<A,X,C>;
var v1 : Iterable3<A,X,C>;
// XPECT errors --> "Nested array destructuring pattern cannot be applied to destructured value at index 1: X is not a subtype of Iterable<?>." at "[x0,y0]"
var [a0,[x0,y0],c0] = v0;
// XPECT errors --> "Nested array destructuring pattern cannot be applied to destructured value at index 1: X is not a subtype of Iterable<?>." at "[x0,y0]"
[a0,[x0,y0],c0] = v0;
// XPECT errors --> "Nested array destructuring pattern cannot be applied to destructured value at index 1: X is not a subtype of Iterable<?>." at "[x1,y1]"
for(var [a1,[x1,y1],c1] of [v1]) {}
// XPECT errors --> "Nested array destructuring pattern cannot be applied to destructured value at index 1: X is not a subtype of Iterable<?>." at "[x1,y1]"
for([a1,[x1,y1],c1] of [v1]) {}


// case: expected type of OBJECT destruct pattern inside an ARRAY destruct pattern

var v2 : Iterable3<A,any,C>;
var v3 : Iterable3<A,any,C>;
// XPECT errors --> "Nested object destructuring pattern cannot be applied to destructured value at index 1: any is not a subtype of Object." at "{x2,y2}"
var [a2,{x2,y2},c2] = v2;
// XPECT errors --> "Nested object destructuring pattern cannot be applied to destructured value at index 1: any is not a subtype of Object." at "{x2,y2}"
[a2,{x2,y2},c2] = v2;
// XPECT errors --> "Nested object destructuring pattern cannot be applied to destructured value at index 1: any is not a subtype of Object." at "{x3,y3}"
for(var [a3,{x3,y3},c3] of [v3]) {}
// XPECT errors --> "Nested object destructuring pattern cannot be applied to destructured value at index 1: any is not a subtype of Object." at "{x3,y3}"
for([a3,{x3,y3},c3] of [v3]) {}


// ------------------------------------------------------------------------------------------------


// case: expected type of ARRAY destruct pattern inside an OBJECT destruct pattern

var v4 : ~Object with {a4: A; b4: X; c4: C;};
var v5 : ~Object with {a5: A; b5: X; c5: C;};
// XPECT errors --> "Nested array destructuring pattern cannot be applied to destructured value of property 'b4': X is not a subtype of Iterable<?>." at "[x4,y4]"
var {a4,b4:[x4,y4],c4} = v4;
// XPECT errors --> "Nested array destructuring pattern cannot be applied to destructured value of property 'b4': X is not a subtype of Iterable<?>." at "[x4,y4]"
({a4,b4:[x4,y4],c4} = v4);
// XPECT errors --> "Nested array destructuring pattern cannot be applied to destructured value of property 'b5': X is not a subtype of Iterable<?>." at "[x5,y5]"
for(var {a5,b5:[x5,y5],c5} of [v5]) {}
// XPECT errors --> "Nested array destructuring pattern cannot be applied to destructured value of property 'b5': X is not a subtype of Iterable<?>." at "[x5,y5]"
for({a5,b5:[x5,y5],c5} of [v5]) {}


// case: expected type of OBJECT destruct pattern inside an OBJECT destruct pattern

var v6 : ~Object with {a6: A; b6: any; c6: C;};
var v7 : ~Object with {a7: A; b7: any; c7: C;};
// XPECT errors --> "Nested object destructuring pattern cannot be applied to destructured value of property 'b6': any is not a subtype of Object." at "{x6,y6}"
var {a6,b6:{x6,y6},c6} = v6;
// XPECT errors --> "Nested object destructuring pattern cannot be applied to destructured value of property 'b6': any is not a subtype of Object." at "{x6,y6}"
({a6,b6:{x6,y6},c6} = v6);
// XPECT errors --> "Nested object destructuring pattern cannot be applied to destructured value of property 'b7': any is not a subtype of Object." at "{x7,y7}"
for(var {a7,b7:{x7,y7},c7} of [v7]) {}
// XPECT errors --> "Nested object destructuring pattern cannot be applied to destructured value of property 'b7': any is not a subtype of Object." at "{x7,y7}"
for({a7,b7:{x7,y7},c7} of [v7]) {}


// ------------------------------------------------------------------------------------------------


// case: expected type of ARRAY destruct pattern on top level

var v8 : any;
var v9 : any;
// XPECT errors --> "Array destructuring pattern cannot be applied to a value of type 'any': any is not a subtype of Iterable<?>." at "[a8,b8,c8]"
var [a8,b8,c8] = v8;
// XPECT errors --> "Array destructuring pattern cannot be applied to a value of type 'any': any is not a subtype of Iterable<?>." at "[a8,b8,c8]"
([a8,b8,c8] = v8);
// XPECT errors --> "Array destructuring pattern cannot be applied to a value of type 'any': any is not a subtype of Iterable<?>." at "[a9,b9,c9]"
for(var [a9,b9,c9] of [v9]) {}
// XPECT errors --> "Array destructuring pattern cannot be applied to a value of type 'any': any is not a subtype of Iterable<?>." at "[a9,b9,c9]"
for([a9,b9,c9] of [v9]) {}


// case: expected type of OBJECT destruct pattern on top level

var v10 : any;
var v11 : any;
// XPECT errors --> "Object destructuring pattern cannot be applied to a value of type 'any': any is not a subtype of Object." at "{a10,b10,c10}"
var {a10,b10,c10} = v10;
// XPECT errors --> "Object destructuring pattern cannot be applied to a value of type 'any': any is not a subtype of Object." at "{a10,b10,c10}"
({a10,b10,c10} = v10);
// XPECT errors --> "Object destructuring pattern cannot be applied to a value of type 'any': any is not a subtype of Object." at "{a11,b11,c11}"
for(var {a11,b11,c11} of [v11]) {}
// XPECT errors --> "Object destructuring pattern cannot be applied to a value of type 'any': any is not a subtype of Object." at "{a11,b11,c11}"
for({a11,b11,c11} of [v11]) {}


// ------------------------------------------------------------------------------------------------


// with default values:

var v12 : Iterable3<A,B,C>;
var v13 : Iterable3<A,B,C>;
// XPECT noerrors --> "not an error because default value is used to infer type of b12"
// XPECT type of 'b12' --> union{B,string}
var [a12,b12='bad',c12] = v12;
// XPECT noerrors --> "not an error because default value is used to infer type of b12"
// XPECT type of 'b12' --> union{B,string}
[a12,b12='bad',c12] = v12;
// XPECT noerrors --> "not an error because default value is used to infer type of b13"
// XPECT type of 'b13' --> union{B,string}
for(var [a13,b13='bad',c13] of [v13]) {}
// XPECT noerrors --> "not an error because default value is used to infer type of b13"
// XPECT type of 'b13' --> union{B,string}
for([a13,b13='bad',c13] of [v13]) {}


var v14 : Iterable3<A,B,C>;
var v15 : Iterable3<A,B,C>;
// XPECT errors --> "string is not a subtype of B." at "'bad'"
var [a14,b14 : B='bad',c14] = v14; // note the explicitly declared type of b14!
// XPECT errors --> "string is not a subtype of B." at "'bad'"
[a14,b14='bad',c14] = v14;
// XPECT errors --> "string is not a subtype of B." at "'bad'"
for(var [a15,b15 : B='bad',c15] of [v15]) {} // note the explicitly declared type of b15!
// XPECT errors --> "string is not a subtype of B." at "'bad'"
for([a15,b15='bad',c15] of [v15]) {}
