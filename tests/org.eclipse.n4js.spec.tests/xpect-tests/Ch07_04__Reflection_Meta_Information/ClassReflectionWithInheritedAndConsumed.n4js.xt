/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */
// IDE-561

/* XPECT output ---
# all direct + consumed + inherited
 - N4Accessor :: getterPublicStringClassA
 - N4Accessor :: getterPublicStringClassS
 - N4Accessor :: getterPublicStringClassSS
 - N4Accessor :: getterPublicStringRoleR
 - N4Accessor :: getterPublicStringRoleRR
 - N4Accessor :: setterPublicStringClassA
 - N4Accessor :: setterPublicStringClassS
 - N4Accessor :: setterPublicStringClassSS
 - N4Accessor :: setterPublicStringRoleR
 - N4Accessor :: setterPublicStringRoleRR
 - N4DataField :: datafieldPublicStringClassA
 - N4DataField :: datafieldPublicStringClassS
 - N4DataField :: datafieldPublicStringClassSS
 - N4DataField :: datafieldPublicStringRoleR
 - N4DataField :: datafieldPublicStringRoleRR
 - N4Method :: methodPublicVoidClassA
 - N4Method :: methodPublicVoidClassS
 - N4Method :: methodPublicVoidClassSS
 - N4Method :: methodPublicVoidRoleR
 - N4Method :: methodPublicVoidRoleRR
# all direct + consumed + inherited + direct static
 - N4Accessor :: getterPublicStaticStringClassA
 - N4Accessor :: getterPublicStaticStringClassS
 - N4Accessor :: getterPublicStaticStringClassSS
 - N4Accessor :: getterPublicStringClassA
 - N4Accessor :: getterPublicStringClassS
 - N4Accessor :: getterPublicStringClassSS
 - N4Accessor :: getterPublicStringRoleR
 - N4Accessor :: getterPublicStringRoleRR
 - N4Accessor :: setterPublicStaticStringClassA
 - N4Accessor :: setterPublicStaticStringClassS
 - N4Accessor :: setterPublicStaticStringClassSS
 - N4Accessor :: setterPublicStringClassA
 - N4Accessor :: setterPublicStringClassS
 - N4Accessor :: setterPublicStringClassSS
 - N4Accessor :: setterPublicStringRoleR
 - N4Accessor :: setterPublicStringRoleRR
 - N4DataField :: datafieldPublicStaticStringClassA
 - N4DataField :: datafieldPublicStaticStringClassS
 - N4DataField :: datafieldPublicStaticStringClassSS
 - N4DataField :: datafieldPublicStringClassA
 - N4DataField :: datafieldPublicStringClassS
 - N4DataField :: datafieldPublicStringClassSS
 - N4DataField :: datafieldPublicStringRoleR
 - N4DataField :: datafieldPublicStringRoleRR
 - N4Method :: methodPublicStaticVoidClassA
 - N4Method :: methodPublicStaticVoidClassS
 - N4Method :: methodPublicStaticVoidClassSS
 - N4Method :: methodPublicVoidClassA
 - N4Method :: methodPublicVoidClassS
 - N4Method :: methodPublicVoidClassSS
 - N4Method :: methodPublicVoidRoleR
 - N4Method :: methodPublicVoidRoleRR
--- */



class SS {
	public static datafieldPublicStaticStringClassSS : string = "1";

	public static get getterPublicStaticStringClassSS() : string{
		return "2";
	}

	public static set setterPublicStaticStringClassSS(s : string){
	}

	public static methodPublicStaticVoidClassSS() : void{}

	public datafieldPublicStringClassSS : string = "3";

	public get getterPublicStringClassSS() : string{
		return "2";
	}

	public set setterPublicStringClassSS(s : string){
	}

	public methodPublicVoidClassSS() : void{}
}
class S extends SS {
	public static datafieldPublicStaticStringClassS : string = "1";

	public static get getterPublicStaticStringClassS() : string{
		return "2";
	}

	public static set setterPublicStaticStringClassS(s : string){
	}

	public static methodPublicStaticVoidClassS() : void{}

	public datafieldPublicStringClassS : string = "3";

	public get getterPublicStringClassS() : string{
		return "2";
	}

	public set setterPublicStringClassS(s : string){
	}


	public methodPublicVoidClassS() : void{}
}
interface RR {

	public datafieldPublicStringRoleRR : string = "3";

	public get getterPublicStringRoleRR() : string{
		return "2";
	}

	public set setterPublicStringRoleRR(s : string){
	}

	public methodPublicVoidRoleRR() : void{}
}
interface R extends RR{
	public datafieldPublicStringRoleR : string = "3";

	public get getterPublicStringRoleR() : string{
		return "2";
	}

	public set setterPublicStringRoleR(s : string){
	}

	public methodPublicVoidRoleR() : void{}
}

class ClassWithStuff extends S implements R {
	public static datafieldPublicStaticStringClassA : string = "1";

	public static get getterPublicStaticStringClassA() : string{
		return "2";
	}

	public static set setterPublicStaticStringClassA(s : string){
	}

	public static methodPublicStaticVoidClassA() : void{}

	@Nfon("a", "b")
	public datafieldPublicStringClassA : string = "3";

	public get getterPublicStringClassA() : string{
		return "2";
	}

	public set setterPublicStringClassA(s : string){
	}

	public methodPublicVoidClassA() : void{}
}


function findMemberType(m : N4Member){
	if(m instanceof N4Method) {return "N4Method"}
	if(m instanceof N4DataField) {return "N4DataField"}
	if(m instanceof N4Accessor) {return "N4Accessor"}
	if(m instanceof N4Member) {return "N4Member"}
	return "unknown type of member"
}

function print1 (a : Array<string>){
	a.forEach(function(s : string){ console.log(s);});
}

function printMembers(arr : Array<? extends N4Member>){
	var asd : Array<string> = [];
	arr.forEach(function(m : N4Member){ asd.push (" - "+ findMemberType(m)+ " :: "+ m.name) ; });
	asd.sort();   print1 ( asd );
}


var test = ClassWithStuff.n4type
console.log("# all direct + consumed + inherited")
printMembers(test.members(true, true));
console.log("# all direct + consumed + inherited + direct static")
printMembers(test.members(true, true, true));
