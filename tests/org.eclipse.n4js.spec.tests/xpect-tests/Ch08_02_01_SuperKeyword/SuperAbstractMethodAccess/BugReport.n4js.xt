/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */

interface I {
	public m0(): string;
	public abstract m1(): string;
	public m2(): string {
		return "I.m2";
	};
}

abstract class AB implements I {
	public abstract m3(): string;
	public m4(): string {
		return "AB.m4";
	};
}

class C extends AB {
	s: string;

	@Override
	public m0(): string {
		// Invoking consumed super (explicitly abstract) method in interface (2 levels) XPECT errors --> "Cannot call super method since it is abstract." at "m0"
		return super.m0();
	}

	@Override
	public m1(): string {
		// Invoking consumed super method in interface (2 levels) XPECT errors --> "Cannot call super method since it is abstract." at "m1"
		return super.m1();
	}

	@Override
	public m2(): string {
		// Invoking super method in interface with default implementation (2 levels) XPECT noerrors -->
		return super.m2();
	}

	@Override
	public m3(): string {
		// Invoking abstract super method in superclass (1 level) XPECT errors --> "Cannot call super method since it is abstract." at "m3"
		return super.m3();
	}

	@Override
	public m4(): string {
		// Invoking concrete super method in superclass (1 level) XPECT noerrors -->
		return super.m4();
	}
}
