/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */


class A {}
class B {}
class C {}


class X {

	constructor(param : A) {
	}

	m(param : A) : void {}
}

class Y extends X {

	constructor(param : B) {
		super(new A());
	}

	@Override
	m(param : A) : void {}
}

class Z extends Y {

	constructor() {
		// XPECT errors --> "A is not a subtype of B." at "new A()"
		super(new A());
	}

	@Override
	m(param : A) : void {
		var a : A;
		var b : B;
	}
}


// structural this as type of parameter in explicitly defined constructor:

class T1 {
	constructor(spec : ~~this) {}
}
class T1Sub extends T1 {

	public f : string;

	constructor() {
		// XPECT warnings --> "f is not defined in ~~this[T1]; it will not be accessible from the receiving parameter." at "f"
		super( {f: "hi there!"} );				// ok
	}
}

class T1Sub2 extends T1 {

	public f : string;

	constructor() {
		// No error since IDEBUG-262:  noerrors --> "~Object with { number f; number n; } is not a structural subtype of ~~T1Sub2: f failed: number is not equal to string." at "{f: 43, n: 42}"
		/* XPECT warnings ---
		   "f is not defined in ~~this[T1]; it will not be accessible from the receiving parameter." at "f"
		   "n is not defined in ~~this[T1]; it will not be accessible from the receiving parameter." at "n"
		   --- */
		super( {f: 43, n: 42} );				// f here is only resolved against ~~T and there is no property !
	}
}


/*  NOTE: deactivated following test case after removing constructor(~~this) from N4Object ...

// structural this as type of parameter in default constructor:

class T2 {
	public string f;
}
class T2Sub extends T2 {

	constructor() {
		super( {f: "hi there!"} );				// ok
		super( {f: "what's up?'", n: 42} );		// ok
		// X---PECT errors --> "ObjectLiteral is not a subtype of ~~this[T2Sub]." at "{f: 43, n: 42}"
		super( {f: 43, n: 42} );				// 43 is wrong!
	}
}

*/
