/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */


// note: this code is coming from IDEBUG-43; more detailed tests for structural typing + generics pending!


interface I { public v : number; }
interface GI<T> { public v : T; }
interface ~S { public v : number; }
interface ~GS<T> { public v : T; }

class Foo {
	f1() : S { return {v: 42} }
	f2() : ~I { return {v: 42} }

	f3() : GS<number> {
		// XPECT noerrors --> "this should work" at "{v: 42}"
		return {v: 42}
	}

	public f4() : ~GI<number> {
		// XPECT noerrors --> "this should work" at "{v: 42}"
		return {v: 42}
	}
}

function f(p1 : S, p2 : ~I, p3 : GS<number>, p4 : ~GI<number>) {
	var n : number;
	n = p1.v;
	n = p2.v;
	n = p3.v;
	n = p4.v;
}

f({v: 42}, {v: 42},
	// XPECT noerrors --> "this should work" at "{v: 42}"
	{v: 42},
	// XPECT noerrors --> "this should work" at "{v: 42}"
	{v: 42}
);
