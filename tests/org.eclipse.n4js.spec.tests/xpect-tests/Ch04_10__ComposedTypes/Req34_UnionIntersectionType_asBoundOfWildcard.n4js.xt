/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */


//
// in this file we assert several laws for union/intersection types in bounds of wildcards
// (see section "Covariance and contravariance with unions and intersections" at
// http://ceylon-lang.org/documentation/1.1/tour/generics/)
//


interface A {}
interface B {} // does not inherit from A!

interface G<T> {}


//
// covariant case
//

// union{ G<? extends A>, G<? extends B> }  <:  G<? extends union{A,B}>

var ugeageb : union{G<? extends A>,G<? extends B>};
var geuab : G<? extends union{A,B}>;

// XPECT noerrors -->
geuab = ugeageb;
// XPECT errors --> "G<? extends union{A,B}> is not a subtype of union{G<? extends A>, G<? extends B>}." at "geuab"
ugeageb = geuab;


// G<? extends intersection{A,B}>  <:  intersection{ G<? extends A>, G<? extends B> }

var geiab : G<? extends intersection{A,B}>;
var igeageb : intersection{G<? extends A>,G<? extends B>};

// XPECT noerrors -->
igeageb = geiab;
// XPECT errors --> "intersection{G<? extends A>, G<? extends B>} is not a subtype of G<? extends intersection{A,B}>." at "igeageb"
geiab = igeageb;


//
// contravariant case
//

// union{ G<? super A>, G<? super B> }  <:  G<? super intersection{A,B}>

var ugsagsb : union{G<? super A>, G<? super B>};
var gsiab : G<? super intersection{A,B}>;

// XPECT noerrors -->
gsiab = ugsagsb;
// XPECT errors --> "G<? super intersection{A,B}> is not a subtype of union{G<? super A>, G<? super B>}." at "gsiab"
ugsagsb = gsiab;


// G<? super union{A,B}>  <:  intersection{ G<? super A>, G<? super B> }

var gsuab : G<? super union{A,B}>;
var igsagsb : intersection{G<? super A>, G<? super B>};

// XPECT noerrors -->
igsagsb = gsuab;
// XPECT errors --> "intersection{G<? super A>, G<? super B>} is not a subtype of G<? super union{A,B}>." at "igsagsb"
gsuab = igsagsb;
