/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */

// restricted generator
// XPECT noerrors
function * g20() : Generator<undefined, undefined, undefined> {}
let g20o = g20();

// call next ok
// XPECT noerrors
g20o.next();

// call next ok
// XPECT noerrors
g20o.next(undefined);

// err
// call next arg not allowed
// XPECT errors --> "string is not a subtype of undefined." at ""1""
g20o.next("1");

// warn
// return type of next value is undefined
// XPECT warnings --> "The type of this expression is undefined, so it will never evaluate to a value other than undefined." at "g20o.next().value"
let g20on = g20o.next().value;
g20on;

// err
// throw expects an argument
// XPECT errors --> "Incorrect number of arguments: expected 1, got 0." at "g20o.throw()"
g20o.throw();

// throw expects any argument
// XPECT noerrors
g20o.throw("e");

// call return ok
// XPECT noerrors
g20o.return();

// call return with undefined
// XPECT noerrors
g20o.return(undefined);

// err
// call return arg not allowed
// XPECT errors --> "string is not a subtype of undefined." at ""1""
g20o.return("1");

// warn
// return type of return value is undefined
// XPECT warnings --> "The type of this expression is undefined, so it will never evaluate to a value other than undefined." at "g20o.return().value"
let g20or = g20o.return().value;
g20or;



// full feature generator
// XPECT noerrors
function * g21() : Generator<int, string, boolean> {}
let g21o = g21();

// call next ok
// XPECT noerrors
g21o.next();

// call next ok
// XPECT noerrors
g21o.next(undefined);

// call next arg not allowed
// XPECT noerrors
g21o.next(true);

// return type of next value
// XPECT noerrors
let g21on = g21o.next().value;
g21on;

// call return ok
// XPECT noerrors
g21o.return();

// call return with undefined
// XPECT noerrors
g21o.return(undefined);

// call return arg not allowed
// XPECT noerrors
g21o.return(false);

// call return ok
// XPECT noerrors
let g21or = g21o.return().value;
g21or;
