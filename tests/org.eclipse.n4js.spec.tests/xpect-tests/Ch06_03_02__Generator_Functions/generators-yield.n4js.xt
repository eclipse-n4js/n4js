/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */



// yield has return
// XPECT noerrors
function * g3a() {
	let x = yield;
	x;
}

function * g3b() {
// err
// yield has return of type any, error case
// XPECT errors --> "any is not a subtype of string." at "yield"
	let x : string = yield;
	x;
}

// yield has return
// XPECT noerrors
function * g3c() : Generator<?,?,int> {
	let x = yield;
	x;
}

// yield has return of type TNext
// XPECT noerrors
function * g4() : Generator<?,?,string>{
	let x : string = yield;
	x;
}

function g5() {
// err
// yield is only allowed in generators
/* XPECT errors ---
"yield is a reserved identifier." at "yield"
"Couldn't resolve reference to IdentifiableElement 'yield'." at "yield"
--- */
	yield;
}

// yield can provide a return expression
// XPECT noerrors
function * g6() {
	yield 1 + 2;
}

// yield can provide a return expression using the shorthand form
// XPECT noerrors
function * g7() : int {
	yield 1 + 2;
}

// yield can provide a return expression using the explicit form
// XPECT noerrors
function * g8() : Generator<int, ?, ?> {
	yield 1 + 2;
}
