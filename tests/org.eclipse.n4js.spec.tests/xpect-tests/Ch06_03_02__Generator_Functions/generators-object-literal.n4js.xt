/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */


// generator method in object literal
// XPECT type of 'o1' --> ~Object with { g(): Generator<undefined,undefined,any> }
let o1 = {
	* g() {}
};
// XPECT type of 'ao1' --> ~Object with { ag(): AsyncGenerator<undefined,undefined,any> }
let ao1 = {
	async * ag() {}
};


// XPECT type of 'o2' --> ~Object with { g(): Generator<string,undefined,any> }
let o2 = {
    string * g() {}
};
// XPECT warnings at 'o2.g' --> "A reference to method g is created detached from a (correct) this-instance." at "g"
let o2g = o2.g;
// XPECT type of 'o2g' --> {function():Generator<string,undefined,any>}
o2g;
// XPECT type of 'ao2' --> ~Object with { ag(): AsyncGenerator<string,undefined,any> }
let ao2 = {
    string async * ag() {}
};
// XPECT warnings at 'ao2.ag' --> "A reference to method ag is created detached from a (correct) this-instance." at "ag"
let ao2ag = ao2.ag;
// XPECT type of 'ao2ag' --> {function():AsyncGenerator<string,undefined,any>}
ao2ag;


// XPECT type of 'o3' --> ~Object with { g(): Generator<string,any,any> }
let o3 = {
    string * g() { return 1; }
};
// XPECT type of 'ao3' --> ~Object with { ag(): AsyncGenerator<string,any,any> }
let ao3 = {
    string async * ag() { return 1; }
};


// XPECT type of 'o4' --> ~Object with { g(): Generator<string,undefined,any> }
let o4 = {
    string * g() { yield "1"; }
};
// XPECT type of 'ao4' --> ~Object with { ag(): AsyncGenerator<string,undefined,any> }
let ao4 = {
    string async * ag() { yield "1"; }
};


let o5 = {
    string * g() {
		// XPECT errors at '1' --> "int is not a subtype of string." at "1"
    	yield 1;
    }
};
let ao5 = {
    string async * ag() {
		// XPECT errors at '1' --> "int is not a subtype of string." at "1"
    	yield 1;
    }
};


// XPECT type of 'o6' --> ~Object with { g(): Generator<undefined,undefined,any> }
let o6 = {
    void * g() {}
};
// XPECT type of 'ao6' --> ~Object with { ag(): AsyncGenerator<undefined,undefined,any> }
let ao6 = {
    void async * ag() {}
};


let o7 = {
	// XPECT noerrors
    void * g() { yield; return; }
};
let ao7 = {
	// XPECT noerrors
    void async * ag() { yield; return; }
};


let o8 = {
	// XPECT noerrors
    void * g() { return undefined; }
};
let ao8 = {
	// XPECT noerrors
    void async * ag() { return undefined; }
};


let o9 = {
    void * g() {
		// XPECT errors at '1' -->"int is not a subtype of undefined." at "1"
    	return 1;
    }
};
let ao9 = {
    void async * ag() {
		// XPECT errors at '1' -->"int is not a subtype of undefined." at "1"
    	return 1;
    }
};


let o10 = {
    void * g() {
		// XPECT errors at '1' -->"int is not a subtype of undefined." at "1"
    	yield 1;
    }
};
let ao10 = {
    void async * ag() {
		// XPECT errors at '1' -->"int is not a subtype of undefined." at "1"
    	yield 1;
    }
};
