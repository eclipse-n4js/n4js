/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */


// generator method in object literal
// XPECT noerrors
let o1 = {
	* g() {}
};
// XPECT type of 'o1' --> ~Object with { g(): Generator<undefined,undefined,any> }
o1;

// XPECT type of 'o2' --> ~Object with { g(): Generator<string,undefined,any> }
let o2 = {
    string * g() {}
};
// XPECT warnings at 'o2.g' --> "A reference to method g is created detached from a (correct) this-instance." at "g"
let o2g = o2.g;
// XPECT FIXME type of 'o2g' --> {method * g1(): Generator<undefined,undefined,any>}
o2g;

// XPECT type of 'o3' --> ~Object with { g(): Generator<string,any,any> }
let o3 = {
    string * g() {	return 1;	}
};
o3;

// XPECT type of 'o4' --> ~Object with { g(): Generator<string,undefined,any> }
let o4 = {
    string * g() {	yield "1";	}
};
o4;

let o5 = {
    string * g() {
// XPECT errors at '1' --> "int is not a subtype of string." at "1"
    	yield 1;
    }
};
o5;

// XPECT type of 'o6' --> ~Object with { g(): Generator<undefined,undefined,any> }
let o6 = {
    void * g() {	}
};
o6;

// XPECT noerrors
let o7 = {
    void * g() {	yield; return; }
};
o7;

// XPECT noerrors
let o8 = {
    void * g() {	 return undefined; }
};
o8;

let o9 = {
    void * g() {
// XPECT errors at '1' -->"int is not a subtype of undefined." at "1"
    	return 1;
    }
};
o9;

let o10 = {
    void * g() {
// XPECT errors at '1' -->"int is not a subtype of undefined." at "1"
    	yield 1;
    }
};
o10;
