/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */
class A {

	get s () : number { return 3; }
	// varargs here ?
	set s (fe : number) {}


//////////////////////////
/// -- Method declarations --
///////////////////////
/*  IDE-145 XPECT warnings ---
"This parameter is changed to the default parameter 'b=undefined' since it follows a default parameter." at "b : number"
"This parameter is changed to the default parameter 'c=undefined' since it follows a default parameter." at "c : number"
---*/
	f (a : number=undefined, b : number, c : number) : void {}
// IDE-145 XPECT warnings --> "This parameter is changed to the default parameter 'c=undefined' since it follows a default parameter." at "c : number"
	f2 (a : number, b : number=undefined, c : number) : void {}
// IDE-145 XPECT warnings --> "This parameter is changed to the default parameter 'b=undefined' since it follows a default parameter." at "b : number"
	f3 (a : number=undefined, b : number, c : number=undefined) : void {}

}


//////////////////////////
/// -- Function declarations --
///////////////////////
/* IDE-145 XPECT warnings ---
"This parameter is changed to the default parameter 'b=undefined' since it follows a default parameter." at "b : number"
"This parameter is changed to the default parameter 'c=undefined' since it follows a default parameter." at "c : number"
---*/
function f (a : number=undefined, b : number, c : number) {}
// IDE-145 XPECT warnings --> "This parameter is changed to the default parameter 'c=undefined' since it follows a default parameter." at "c : number"
function f2 (a : number, b : number=undefined, c : number) {}
// IDE-145 XPECT warnings --> "This parameter is changed to the default parameter 'b=undefined' since it follows a default parameter." at "b : number"
function f3 (a : number=undefined, b : number, c : number=undefined) {}

// XPECT noerrors --> "mmmm"
function fOK1 (a : number, b : number=undefined, c : number=undefined) {}
// XPECT noerrors --> "mmmm"
function fOK2 (a : number, b : number=undefined, ... c : number) {}


//////////////////////////
/// -- Function expressions --
///////////////////////
/* IDE-145 XPECT warnings ---
"This parameter is changed to the default parameter 'b=undefined' since it follows a default parameter." at "b : number"
"This parameter is changed to the default parameter 'c=undefined' since it follows a default parameter." at "c : number"
---*/
var result1 : number = function (a : number=undefined, b : number, c : number) : number { return a+2 } (13,0,0)
var resultOK1 : number = function fOK12 (a : number, b : number=undefined, c : number=undefined) : number {return a;} (1,2,3);

//////////////////////////
/// -- Function types --
///////////////////////
/* IDE-145 XPECT warnings ---
"This parameter is changed to the default parameter 'number=undefined' since it follows a default parameter." at "b : number"
"This parameter is changed to the default parameter 'number=undefined' since it follows a default parameter." at "c : number"
---*/
var dynF1 : { function (a : number=undefined, b : number, c : number) : void };
// IDE-145 XPECT warnings --> "This parameter is changed to the default parameter 'number=undefined' since it follows a default parameter." at "c : number"
var dynF2 : { function (a : number, b : number=undefined, c : number) : void };
// IDE-145 XPECT warnings --> "This parameter is changed to the default parameter 'number=undefined' since it follows a default parameter." at "b : number"
var dynF3 : { function (a : number=undefined, b : number, c : number=undefined) : void };

// XPECT noerrors --> "mmmm"
var dynFOK1 : { function (a : number, b : number=undefined, c : number=undefined) : void };
// XPECT noerrors --> "mmmm"
var dynFOK2 : { function (a : number, b : number=undefined, ...c : number) : void };
