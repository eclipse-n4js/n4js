/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */


interface A {}
interface ASub extends A {}
interface B {}


class T1 {

	get g_onlyInT1() : A { return null; };

	get g1() : A { return null; };

	public get g2() : A { return null; };

	get g3() : A { return null; };

	get g4() : A { return null; };
}


class T2 {

	get g_onlyInT2() : A { return null; };

	get g1() : A { return null; };

	private get g2() : A { return null; };

	get g3() : ASub { return null; };

	get g4() : B { return null; };
}


var u : union{T1,T2};


// XPECT errors --> "Member g_onlyInT1 not present in all types of union; missing from: T2." at "g_onlyInT1"
u.g_onlyInT1;
// XPECT errors --> "Member g_onlyInT2 not present in all types of union; missing from: T1." at "g_onlyInT2"
u.g_onlyInT2;
// XPECT type of 'u.g1' --> A
u.g1;
// private members are visible inside module XPECT noerrors -->
u.g2;
// XPECT type of 'u.g3' --> A
u.g3;
// XPECT type of 'u.g4' --> union{A,B}
u.g4;


// writing to a getter
// XPECT errors --> "The accessor g1 is read-only." at "g1"
u.g1 = null;
