/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP  */


var arr = [1,2,3,4,5,6,7,8,9,10,11,12];


// destructuring binding

var [,a1,,,b1,,,] = arr;
console.log('expecting: 2 5');
console.log(a1,b1);


// destructuring assignment

var a2,b2;
[,,a2,,,b2,,] = arr;
console.log('expecting: 3 6');
console.log(a2,b2);




class MyIterator implements Iterator<number> {
	private i = 0;
	@Override
	public next() : IteratorEntry<number> {
		console.log('reading element at index '+this.i);
		return {
			value: arr[this.i++],
			done: this.i>=10
		};
	}
}
class MyArray implements Iterable<number> {
	@Override
	public [Symbol.iterator]() : Iterator<number> {
		console.log('iterator created');
		return new MyIterator();
	}
}

console.log('####');
var a3,b3;
console.log('expecting: exactly two elements should be read (not three or more!!)');
[a3,b3,] = new MyArray();
console.log('expecting: 1 2');
console.log(a3,b3);

console.log('####');
var a4,b4;
console.log('expecting: exactly six elements should be read (not seven or more!!)');
[a4,,b4,,,,] = new MyArray();
console.log('expecting: 1 3');
console.log(a4,b4);

console.log('####');
console.log('expecting: exactly six elements should be read (not seven or more!!)');
var [a5,,b5,,,,] = new MyArray();
console.log('expecting: 1 3');
console.log(a5,b5);


/* XPECT output ---
<==
stdout:
expecting: 2 5
2 5
expecting: 3 6
3 6
####
expecting: exactly two elements should be read (not three or more!!)
iterator created
reading element at index 0
reading element at index 1
expecting: 1 2
1 2
####
expecting: exactly six elements should be read (not seven or more!!)
iterator created
reading element at index 0
reading element at index 1
reading element at index 2
reading element at index 3
reading element at index 4
reading element at index 5
expecting: 1 3
1 3
####
expecting: exactly six elements should be read (not seven or more!!)
iterator created
reading element at index 0
reading element at index 1
reading element at index 2
reading element at index 3
reading element at index 4
reading element at index 5
expecting: 1 3
1 3
stderr:
==>
--- */
