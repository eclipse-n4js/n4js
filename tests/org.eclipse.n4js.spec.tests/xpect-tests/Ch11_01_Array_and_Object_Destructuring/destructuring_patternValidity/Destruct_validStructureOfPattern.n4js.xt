/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP  */


//
// NOTE: most rules on how to structure valid destructuring patterns are enforced by the grammar/parser;
//       here we only check a few extra rules that are not enforece by the syntax and thus need to be
//       validated by ASTStructureValidator
//



var a,b,c,d;
var obj = {a:[1],b:{c:2,d:3}};


// ------------------------------------------------------------------------------------------
// cases that must lead to an error:


// XPECT errors --> "Only a variable or nested destructuring pattern is allowed at this location within a destructuring pattern." at "42"
[a,b,42] = null;
// XPECT errors --> "Only a variable or nested destructuring pattern is allowed at this location within a destructuring pattern." at "42"
({a,b:42}=obj);

// XPECT errors --> "Invalid assignment left-hand side." at "42"
[42=0] = null;
// XPECT errors --> "Invalid assignment left-hand side." at "42"
({a,b:42=0}=obj);


// ------------------------------------------------------------------------------------------
// the following cases must all be legal:

// XPECT noerrors -->
[a] = null;
// XPECT noerrors -->
[a=0] = null;
// XPECT noerrors -->
[[a]] = null;
// XPECT noerrors -->
[{a}] = null;

// XPECT noerrors -->
({a} = obj);
// XPECT noerrors -->
({a=0} = obj);
// XPECT noerrors -->
({a:a} = obj);
// XPECT noerrors -->
({a:a=0} = obj);
// XPECT noerrors -->
({a:[a]} = obj);
// XPECT noerrors -->
({b:{c}} = obj);
