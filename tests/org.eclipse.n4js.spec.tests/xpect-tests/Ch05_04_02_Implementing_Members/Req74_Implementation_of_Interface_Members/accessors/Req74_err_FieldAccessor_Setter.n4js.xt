/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */

// 2 setter

class A{} class B extends A{} class C extends B{}

interface I {
	public set x(p : B)
}

// ok
abstract class C0 implements I {
}

// XPECT errors --> "Class C1 must either be declared abstract or implement setter I.x." at "C1"
class C1 implements I {
}

// XPECT noerrors --> "" at "C2"
class C2 implements I {
	// XPECT noerrors --> "setter via setter" at "x"
	@Override public set x(p : A) {}
}
class C3 implements I {
	// XPECT noerrors --> "setter via setter" at "x"
	@Override public set x(p : B) {}
}
class C4 implements I {
		// XPECT errors --> "Type of setter C4.x does not conform to implemented setter I.x: B is not a subtype of C." at "x"
	@Override public set x(p : C) {}
}
// XPECT noerrors --> "member related error precedes classifier error" at "D1"
class D1 implements I {
	// XPECT noerrors --> "setter via field is ok" at "x"
	@Override public x : A;
}

// XPECT noerrors --> "setter via field is ok" at "D2"
class D2 implements I {
	// XPECT noerrors --> "setter via field" at "x"
	@Override public x : B;
}

// XPECT noerrors --> "member related error precedes classifier error" at "D3"
class D3 implements I {
	// XPECT errors --> "Type of field D3.x does not conform to implemented setter I.x: B is not a subtype of C." at "x"
	@Override public x : C;
}

class E1 implements I {
	// XPECT errors --> "The setter E1.x cannot reduce the visibility of setter I.x." at "x"
	@Override private set x(p : B) {}
}
class E2 implements I {
	@Override public set x(p : B) {}
}
