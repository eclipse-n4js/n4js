/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */
// IDE-777 Constraints 83 (Simple Assignment Expression)

class A{
	// @Readonly
	x : number=4;
	// @Writeonly
	y : number=3;
}
class B extends A{}
class C{}
class D extends A{}
class G<T> { field : T; }

var ga : G<A>, gb : G<B>;

var a : A, b : B, c : C, d : D;
var cond : boolean;


// Readonly (waiting for IDE-139)
// XPECT ! errors --> "Field is readonly" at "x"
a.x = 5;

// Writeonly (waiting for IDE-139)
// XPECT ! errors --> "Field is writeonly." at "y"
var y = a.y;


class Street {
	nummer : number;
}
class Address{
	street : Street;
}

class PSel<T> {
	constructor(s : string){
	}
}

class C2
{
	// OK
	ps : PSel<Address> = new PSel<Address>("street");

    get psget() : PSel<Street> { return null; }

    set psset(p : PSel<Street>) {
    	// OK
    	this.ps = new PSel<Address>("street."+p);
    }

	static <T> foo(p : pathSelector<T>) : void {
		console.log(p);
	}
};

// OK
new C2().ps = new PSel<Address>("street.nummer");
// OK
new C2().psset = new PSel<Street>("nummer");

// OK
new C2().psset = new C2().psget

// OK
new C2().ps = new C2().ps;

// Testing: readonly not allowed
// XPECT errors --> "The accessor psget is read-only." at "psget"
new C2().psget = new C2().psget;

// Testing: writeonly not allowed
// XPECT errors --> "The accessor psset is write-only." at "psset"
new C2().psset = new C2().psset;

// not working yet
// OK
C2.<Address>foo("street.nummer");

// not working yet
// OK
C2.<Address>foo("wrong");
