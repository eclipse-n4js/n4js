/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */

class A {
	instField: string;
    static staticField: string;
    static get staticGetter() { return null; }
    static set staticSetter(s:string) {}
}

interface I {}

// works fine:

var ctor: constructor{A};

// Basic tests:
// XPECT noerrors -->
ctor.staticField;
// XPECT noerrors -->
ctor.staticGetter;
// XPECT errors --> "Write access to the static member staticSetter defined in A must use A directly." at "staticSetter"
ctor.staticSetter = "";
// XPECT errors -->"The accessor staticGetter is read-only." at "staticGetter"
ctor.staticGetter = "";
// XPECT errors -->"The accessor staticSetter is write-only." at "staticSetter"
ctor.staticSetter;


// Union with structural type and constructor

// XPECT nowarnings -->
var ctorUnion: constructor{A} | ~Object with { staticField:string; staticGetter:any }
// XPECT noerrors -->
ctorUnion.staticField;
// XPECT noerrors -->
ctorUnion.staticGetter;

// XPECT errors -->"Union combines fields and getters with name staticGetter and therefore property staticGetter is read-only." at "staticGetter"
ctorUnion.staticGetter = "";
// XPECT errors -->"Member instField not present in all types of union; missing from: ~Object with { staticField: string; staticGetter: any }." at "instField"
ctorUnion.instField;

// XPECT noerrors -->
ctorUnion.constructor;

// Union with structural type and classifier

// XPECT nowarnings -->
var classifierUnion: type{A} | ~Object with { staticField:string; staticGetter:any }
// XPECT noerrors -->
classifierUnion.staticField;
// XPECT noerrors -->
classifierUnion.staticGetter;

// XPECT errors -->"Union combines fields and getters with name staticGetter and therefore property staticGetter is read-only." at "staticGetter"
classifierUnion.staticGetter = "";
// XPECT errors -->"Member instField not present in all types of union; missing from: ~Object with { staticField: string; staticGetter: any }." at "instField"
classifierUnion.instField;

// XPECT noerrors -->
classifierUnion.constructor;

// XPECT nowarnings -->
var interfaceUnion: type{I} | ~Object with { staticField:string; staticGetter:any }
// XPECT noerrors -->
interfaceUnion.constructor;
