/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP  */

// XPECT noerrors -->
class C<out T> {}

// XPECT noerrors -->
interface I<out T> {}


class D {
	/* XPECT issues ---
		"Declaration of definition-site variance only allowed in generic classes and interfaces, not in generic functions or methods." at "out"
		"Type variable T not used in parameters or return type." at "T"
	--- */
	<out T> m1() {}

	/* XPECT issues ---
		"Declaration of definition-site variance only allowed in generic classes and interfaces, not in generic functions or methods." at "in"
		"Type variable T not used in parameters or return type." at "T"
	--- */
	<in T> m2() {}
}

interface J {
	/* XPECT issues ---
		"Declaration of definition-site variance only allowed in generic classes and interfaces, not in generic functions or methods." at "out"
		"Type variable T not used in parameters or return type." at "T"
	--- */
	<out T> m1()

	/* XPECT issues ---
		"Declaration of definition-site variance only allowed in generic classes and interfaces, not in generic functions or methods." at "in"
		"Type variable T not used in parameters or return type." at "T"
	--- */
	<in T> m2()
}


/* XPECT issues ---
	"Declaration of definition-site variance only allowed in generic classes and interfaces, not in generic functions or methods." at "out"
	"Type variable T not used in parameters or return type." at "T"
--- */
function <out T> foo1() {}

/* XPECT issues ---
	"Declaration of definition-site variance only allowed in generic classes and interfaces, not in generic functions or methods." at "in"
	"Type variable T not used in parameters or return type." at "T"
--- */
function <in T> foo2() {}
