/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP  */


class A {}

class G<T> {}
class G_co<out T> {}
class G_con<in T> {}


// XPECT noerrors -->
var x01: G<? extends A>;
// XPECT noerrors -->
var x02: G<? super A>;
// XPECT noerrors -->
var x03: G<out A>;
// XPECT noerrors -->
var x04: G<in A>;

// XPECT noerrors -->
var x11: G_co<? extends A>;
// XPECT errors --> "Cannot use wildcard with lower bound as argument to a covariant (out) type parameter." at "? super A"
var x12: G_co<? super A>;
// XPECT noerrors -->
var x13: G_co<out A>;
// XPECT errors --> "Cannot combine contravariance (in) on use site with covariance (out) on definition site." at "in A"
var x14: G_co<in A>;

// XPECT errors --> "Cannot use wildcard with upper bound as argument to a contravariant (in) type parameter." at "? extends A"
var x21: G_con<? extends A>;
// XPECT noerrors -->
var x22: G_con<? super A>;
// XPECT errors --> "Cannot combine covariance (out) on use site with contravariance (in) on definition site." at "out A"
var x23: G_con<out A>;
// XPECT noerrors -->
var x24: G_con<in A>;

// XPECT noerrors -->
var x31: G<?>;
// XPECT noerrors -->
var x32: G<A>;

// XPECT noerrors -->
var x41: G_co<?>;
// XPECT noerrors -->
var x42: G_co<A>;

// XPECT noerrors -->
var x51: G_con<?>;
// XPECT noerrors -->
var x52: G_con<A>;
