/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */

class X {}

class A {}
class B extends A {}
class C extends B {}

class MyCollectionNominal<T> implements Iterable<T> {
	@Override
	public [Symbol.iterator]() : Iterator<T> {
		return null;
	}
}
class MyCollectionStructural<T> extends Object {
	public [Symbol.iterator]() : Iterator<T> {
		return null;
	}
}

var aIterable : Iterable<A>;
var bIterable : Iterable<B>;
var cIterable : Iterable<C>;

var a : A;
var b : B;
var c : C;


// using pre-declared variables in for...of

// XPECT noerrors -->
for(b of bIterable) {}
// XPECT errors --> "Iterable<A> is not a structural subtype of Iterable<? extends B>: #iterator failed: {function():Iterator<A>} is not a subtype of {function():Iterator<? extends B>}." at "aIterable"
for(b of aIterable) {}
// XPECT noerrors -->
for(b of cIterable) {}

// XPECT noerrors -->
for(b of bIterable) {}
// XPECT noerrors -->
for(a of bIterable) {}
// XPECT errors --> "Iterable<B> is not a structural subtype of Iterable<? extends C>: #iterator failed: {function():Iterator<B>} is not a subtype of {function():Iterator<? extends C>}." at "bIterable"
for(c of bIterable) {}


// declaring explicitly typed variables in for...of
// (these cases should behave exactly as the cases with pre-declared variables)

// XPECT noerrors -->
for(var v1 : B of bIterable) {}
// XPECT errors --> "Iterable<A> is not a structural subtype of Iterable<? extends B>: #iterator failed: {function():Iterator<A>} is not a subtype of {function():Iterator<? extends B>}." at "aIterable"
for(var v2 : B of aIterable) {}
// XPECT noerrors -->
for(var v3 : B of cIterable) {}

// XPECT noerrors -->
for(var v4 : B of bIterable) {}
// XPECT noerrors -->
for(var v5 : A of bIterable) {}
// XPECT errors --> "Iterable<B> is not a structural subtype of Iterable<? extends C>: #iterator failed: {function():Iterator<B>} is not a subtype of {function():Iterator<? extends C>}." at "bIterable"
for(var v6 : C of bIterable) {}


// inferring the type of a variable declared within a for...of loop:

for(var v7 of bIterable) {
	// XPECT errors --> "B is not a subtype of X." at "v7"
	var test7 : X = v7;
}

var belowBIterable : Iterable<? extends B>;
for(var v8 of belowBIterable) {
	// XPECT errors --> "B is not a subtype of X." at "v8"
	var test8 : X = v8;
}

var anyIterable : Iterable<?>;
for(var v9 of anyIterable) {
	// XPECT errors --> "any is not a subtype of X." at "v9"
	var test9 : X = v9;
}

for(var v10 of []) {
	// XPECT errors --> "any is not a subtype of X." at "v10"
	var test10 : X = v10;
}

var myCollNomB: MyCollectionNominal<B>;
for(var v11 of myCollNomB) {
	// XPECT errors --> "B is not a subtype of X." at "v11"
	var test11 : X = v11;
}
var myCollNomBelowB: MyCollectionNominal<? extends B>;
for(var v12 of myCollNomBelowB) {
	// XPECT errors --> "B is not a subtype of X." at "v12"
	var test12 : X = v12;
}

var myCollStructB: MyCollectionStructural<B>;
for(var v13 of myCollStructB) {
	// XPECT errors --> "B is not a subtype of X." at "v13"
	var test13 : X = v13;
}
var myCollStructBelowB: MyCollectionStructural<? extends B>;
for(var v14 of myCollStructBelowB) {
	// XPECT errors --> "B is not a subtype of X." at "v14"
	var test14 : X = v14;
}
