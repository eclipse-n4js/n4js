/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */

/////////////////
// Additive Expression '+' or '-'
//
// Requirement 111
////////
class A {
	public num : number = 2;
}

class B extends A {
	s : string = "a";
	b : boolean = true;
}


//////////////////////////////////////
// ADD : return type string expected:

let s: string ="x", s1: string="y";
let b: boolean =true;
let n: number = 1;

var ergS =  new Array<string>();
// XPECT type of n+n --> number 
n+n;
// XPECT type of s+s --> string
s+s;
// XPECT type of s+n --> string
s+n;
// XPECT type of n+s --> string
n+s;
// XPECT type of n+b --> number
n+b
// XPECT type of b+n --> number
b+n
// XPECT type of s+b --> string
s+b;
// XPECT type of b+s --> string
b+s;
// XPECT type of s+null --> string
s+null;
// XPECT type of null+s --> string
null+s;
// XPECT type of n+null --> number
n+null
// XPECT type of null+n --> number
null+n
// XPECT type of s+undefined --> string
s+undefined;
// XPECT type of undefined+s --> string
undefined+s;
// XPECT type of n+undefined --> number
n+undefined
// XPECT type of undefined+n --> number
undefined+n
// XPECT type of b+b --> number
b+b

//////////////////////////////////////
// SUB : return type number expected:


// XPECT type of b-b --> number
b-b
// XPECT type of n-n --> number
n-n
// XPECT type of n-b --> number
n-b
// XPECT type of b-n --> number
b-n
// XPECT errors --> "string is not a subtype of union{boolean,number}."  at "s"
// XPECT type of s-n --> number
s-n
// XPECT errors --> "string is not a subtype of union{boolean,number}."  at "s"
// XPECT type of n-s --> number
n-s
/* XPECT errors ---
"string is not a subtype of union{boolean,number}." at "s"
"string is not a subtype of union{boolean,number}." at "s1"
--- */
// XPECT type of s1-s --> number
s1-s
// XPECT errors --> "string is not a subtype of union{boolean,number}."  at "s"
// XPECT type of s-b --> number
s-b
// XPECT errors --> "string is not a subtype of union{boolean,number}."  at "s"
// XPECT type of b-s --> number
b-s
// XPECT type of n-null --> number
n-null
// XPECT type of null-n --> number
null-n
// XPECT errors --> "string is not a subtype of union{boolean,number}."  at "s"
// XPECT type of s-null --> number
s-null
// XPECT errors --> "string is not a subtype of union{boolean,number}."  at "s"
// XPECT type of null-s --> number
null-s
// XPECT errors --> "undefined is not a valid number." at "undefined"
// XPECT type of n-undefined --> number
n-undefined
// XPECT errors --> "undefined is not a valid number." at "undefined"
// XPECT type of undefined-n --> number
undefined-n
