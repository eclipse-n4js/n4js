/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */
// IDE-395
// Constraints 73 (Return statement):
// ...

// 3. If enclosing function is declared to to return a type different from void, then
// * all return statements must have a return expression
// * all control flows must either end with a return or throw statement


class A {}
class B extends A{}
class C {}
class D extends C{}


function func01() : number {
	// ok
	return 1 + 1 ;
}

function func02(b : boolean) : number {
	if( b ) {
		return 1+1;
	} else {
		return 1+1;
	}
}

function func03(b : boolean) : number {
	if( b ) {
		// XPECT errors --> "Return statement must have an expression of type number" at "return;"
		return;
	} else {
		return 1+1;
	}
}


function func04(b : boolean) : A {
	if( b ) {
		// XPECT errors --> "Return statement must have an expression of type A" at "return;"
		return;
	} else {
		return new A() ;
	}
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~
// checking controlflow
//
// ok: all paths have either throw or return
function func10(b : boolean) : number {
	if( b ) {
		throw "A thrown string.";
	} else {
		return 1+1;
	}
}


// XPECT errors --> "Missing return or throw statement." at "func11"
function func11(b : boolean) : number {
	if( b )
	{  } else {
		return 1+1;
	}
}

// Things to consider: catch-clauses.

function func12(b : boolean) : number {
	if( b ) {
		// ok, because fo last statement is a return statemnet.
	} else {
		return 1+1;
	}
	return 4;
}

// XPECT errors --> "Missing return or throw statement." at "func13"
function func13(b : number) : number {

	while( b < 4 ) {
		return 1+1;
	}
}

// Last statement must be a return or ((try & catch) | finally) have a return.
// XPECT errors --> "Missing return or throw statement." at "func14"
function func14(b : number) : number {
	try {
		// do something
		return 4;
	} catch ( exc )
	{
		//  rethrow, return, or nothing
	} finally {
		// return or nothing
	}


}

// XPECT errors --> "Missing return or throw statement." at "func15"
function func15(b : number) : number {
	try
	{
		// do something
	} catch ( exc ) {
		return 4;
	} finally {

	}

}

// ok:
function func16(b : number) : number {
	try {
		// do something
		return 4;
	} catch ( exc ) {
		return 5;
	} finally {

	}
}

// ok:
function func17(b : number) : number {
	try {
		// do something
	} catch ( exc ) {
		return 5;
	} finally {
		return 4;
		// return or nothing
	}
}

// ok:
function func18(b : number) : number {
	try {
		// do something
		return 5;
	} catch ( exc ) {
	} finally {
		return 4;
		// return or nothing
	}
}
