/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest

	ResourceSet {
		ThisFile {}
		File "OtherFile.n4js" {}
	}

	END_SETUP
*/


//
// here we test the restrictions on references to const fields from within compile-time expressions
//


import { Cls_OtherFile } from "Others/propertyAndMemberNaming/OtherFile";


class Test01 {
	// XPECT noerrors -->
	[Test01.propName] = 42;
	const propName = 'testField';
}
// XPECT noerrors -->
new Test01().testField;



class Test02 extends Test02SuperClass {
	// XPECT errors --> "Not a compile-time expression: reference must point to a directly owned field (i.e. not inherited, consumed, or polyfilled) and the field must not have a computed name." at "propName"
	[Test02.propName] = 42;
}
class Test02SuperClass {
	const propName = 'testField';
}
// XPECT errors --> "Couldn't resolve reference to IdentifiableElement 'testField'." at "testField"
new Test02().testField;



class Test03 {
	// XPECT errors --> "Not a compile-time expression: reference must point to a directly owned field (i.e. not inherited, consumed, or polyfilled) and the field must not have a computed name." at "fieldWithComputedName"
	[Test03.fieldWithComputedName] = 42;
	const ['fieldWithComputedName'] = 'testField';
}
// XPECT errors --> "Couldn't resolve reference to IdentifiableElement 'testField'." at "testField"
new Test03().testField;



class Test04 {
	// XPECT errors --> "Not a compile-time expression: reference must point to a directly owned field (i.e. not inherited, consumed, or polyfilled) and the field must not have a computed name." at "fieldWithComputedName"
	[Cls_OtherFile.fieldWithComputedName] = 42;
}
// XPECT errors --> "Couldn't resolve reference to IdentifiableElement 'testField'." at "testField"
new Test04().testField;



class Test05 {
	// avoid duplicate error message in this case
	// XPECT errors --> "Couldn't resolve reference to IdentifiableElement 'propName'." at "propName"
	[Test05.propName] = 42;
}
