/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP  */


console.log('####### class/interface');

interface I {
	// XPECT noerrors -->
	public [`field`]: string;
	// XPECT noerrors -->
	get [`${'a'}c${`c`}`](): string
	// XPECT noerrors -->
	set [`a${'c'}c`](value: string)
	// XPECT noerrors -->
	[`me${'th'}od`]()
}
class C implements I {
	private value: string = 'hello from private field';
	// XPECT noerrors -->
	@Override public [`field`]: string = 'hello from public field';
	// XPECT noerrors -->
	@Override get [`a${'c'}c`](): string { return this.value; }
	// XPECT noerrors -->
	@Override set [`${'a'}c${`c`}`](value: string) { this.value = value; }
	// XPECT noerrors -->
	@Override [`${'me'}${`th`}${`od`}`]() { console.log('hello from method'); }
}

let i: I = new C();
console.log(i.field);
console.log(i.acc);
i.acc = 'hello from private field (new value!)';
console.log(i.acc);
i.method();


console.log('####### object literal');

let ol = {
	value: 'hello from private property',
	// XPECT noerrors -->
	[`field`]: 'hello from public property',
	// XPECT noerrors -->
	get [`a${'c'}c`](): string { return this.value; },
	// XPECT noerrors -->
	set [`${'a'}c${`c`}`](value: string) { this.value = value; },
	// XPECT noerrors -->
	[`${'me'}${`th`}${`od`}`]() { console.log('hello from method'); }
}

console.log(ol.field);
console.log(ol.acc);
ol.acc = 'hello from private property (new value!)';
console.log(ol.acc);
ol.method();


/* XPECT output ---
####### class/interface
hello from public field
hello from private field
hello from private field (new value!)
hello from method
####### object literal
hello from public property
hello from private property
hello from private property (new value!)
hello from method
--- */
