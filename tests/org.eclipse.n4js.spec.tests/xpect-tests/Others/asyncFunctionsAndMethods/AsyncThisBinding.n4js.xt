/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP  */

/* XPECT output ---
foo() undefined
foo2() baz
afoo() : ok :: undefined
afoo2() : ok :: baz
--- */

var o = {bar: "baz"};
function foo():string{
	//XPECT warnings ---> "Unnecessary cast from undefined to Object" at "this as Object"
	return this!==undefined ? (this as Object)['bar'] as string : undefined; // note: if not bound, 'this' will be undefined (in strict mode) or the global object (in non-strict mode)
}

console.log("foo()", foo())
var foo2 = foo.bind(o);
console.log("foo2()", foo2())

async function afoo():string{
	//XPECT warnings ---> "Unnecessary cast from undefined to Object" at "this as Object"
	return this!==undefined ? (this as Object)['bar'] as string : undefined; // note: if not bound, 'this' will be undefined (in strict mode) or the global object (in non-strict mode)
}

async function run(){

	try{
		var v1 = await afoo();
		console.log("afoo() : ok ::", v1);
	}catch(e1){
		console.log("afoo() : not_ok ::", e1);
	}

	try{
		var afoo2 = afoo.bind(o);
		// XPECT warnings --> "await should only be used on expressions of type Promise<?,?> since otherwise it has no effect." at "await afoo2()"
		var v2 = await afoo2();
		console.log("afoo2() : ok ::", v2);
	}catch(e2){
		console.log("afoo2() : not_ok ::", e2);
	}


};

run();
