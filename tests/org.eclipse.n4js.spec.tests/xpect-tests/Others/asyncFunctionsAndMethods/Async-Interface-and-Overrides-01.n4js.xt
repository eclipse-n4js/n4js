/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP  */

// IDE-1534

interface I {

	// XPECT type of 'm1' --> {function():Promise<undefined,?>}
	async m1() : void // void left out, irrespective whether body is missing or not

	// XPECT type of 'm2' --> {function():Promise<undefined, ?>}
	async m2() : void {} // note: got a body in this case

	// XPECT type of 'm3' --> {function():Promise<undefined, ?>}
	m3() : Promise<undefined, ?> // no body

	// found during IDE-1852: XPECT FIXME noerrors
	// XPECT type of 'm4' --> {function():Promise<undefined, ?>}
	m4() : Promise<undefined, ?> {} // note: got a body in this case

}

interface J extends I {

	// XPECT noerrors --> No error expected: 'return type compatible with that of the overridden method'
	@Override m1() : Promise<undefined, ?> { return undefined } // note: got a body in this case

	// XPECT noerrors --> 'return type compatible with that of the overridden method'
	@Override m2() : Promise<undefined, ?> { return undefined; } // note: got a body in this case

	// XPECT noerrors --> No error expected: "Signature of method J.m3 does not conform to implemented method I.m3: {function():void} is not a subtype of {function():Promise<undefined,?>}." at "m3"
	@Override async m3() : void {}

	// XPECT noerrors --> No error expected: 'return type compatible with that of the overridden method'
	@Override async m4() : void {}

}
