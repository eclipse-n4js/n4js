/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */


class Other<T> {}

class C<T> {

	// -----------------------------------------------------------------------------------------
	// success cases:

	ok_field1 : T;
	ok_field2 : Other<T>;

	ok_m2(t : T) : void {}

	ok_m3() : T {
		return null;
	}

	ok_m4() : void {
		var t : T;
	}

	get ok_getter1() : T {
		return null;
	}
	get ok_getter2() : string {
		var t : T;
		return null;
	}

	set ok_setter1(p : T) {
	}
	set ok_setter2(p : string) {
		var t : T;
	}


	// -----------------------------------------------------------------------------------------
	// simple failure cases: accessing a type var from a static context

	// XPECT errors --> "The type variable T cannot be accessed from a static context." at "T"
	static field1 : T;
	// XPECT errors --> "The type variable T cannot be accessed from a static context." at "T"
	static field2 : Other<T>;

	// XPECT errors --> "The type variable T cannot be accessed from a static context." at "T"
	static m2(t : T) : void {
	}

	// XPECT errors --> "The type variable T cannot be accessed from a static context." at "T"
	static m3() : T {
		return null;
	}

	static m4() : void {
		// XPECT errors --> "The type variable T cannot be accessed from a static context." at "T"
		var t : T;
	}

	// XPECT errors --> "The type variable T cannot be accessed from a static context." at "T"
	static get getter1() : T {
		return null;
	}
	static get getter2() : string {
		// XPECT errors --> "The type variable T cannot be accessed from a static context." at "T"
		var t : T;
		return null;
	}

	// XPECT errors --> "The type variable T cannot be accessed from a static context." at "T"
	static set setter1(p : T) {
	}
	static set setter2(p : string) {
		// XPECT errors --> "The type variable T cannot be accessed from a static context." at "T"
		var t : T;
	}


	// -----------------------------------------------------------------------------------------
	// important exception (in the following case, accessing a type var from a static context is fine!)

	static <U> m5(u : U) : void {}	// ok!

	// but not:

	/* XPECT issues ---
		"The type variable T cannot be accessed from a static context." at "T"
		"Type variable U not used in parameters or return type." at "U"
	--- */
	static <U> m6(t : T) : void {}


	// -----------------------------------------------------------------------------------------
	// important exception (nested classes with static fields / methods)

	m7() : void {
		// XPECT errors --> "Unsupported feature: class expressions." at "class"
		var innerClass = class {

			static field : T;  // ok!  (but might change once the semantics of class expressions are defined)

			static m() : void {
				var t : T;  // ok!  (but might change once the semantics of class expressions are defined)
			}
		};
	}


	// -----------------------------------------------------------------------------------------
	// other cases with nesting

	// cf. file "../typesystem/Generics_TypeArgumentChecks_nested.n4js.xt"

}
