/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */



export function m2___n4():number { return 5;}

// this is how to work around naming conflicts:
var m2__legal_n4 = m2___n4;

export public interface X {

	public m1() : void {
		// impl
		// XPECT errors --> "A reference to a function ending with "___n4" is not allowed inside a method-body." at "m2___n4"
		m2___n4();

		function f() {
			function g() {
				// nested
				// XPECT errors --> "A reference to a function ending with "___n4" is not allowed inside a method-body." at "m2___n4"
				m2___n4();
			}
			// XPECT errors --> "A reference to a function ending with "___n4" is not allowed inside a method-body." at "m2___n4"
			var y = m2___n4;
			// XPECT errors --> "A reference to a function ending with "___n4" is not allowed inside a method-body." at "m2___n4"
			y = m2___n4;

		}

		// XPECT errors --> "A reference to a function ending with "___n4" is not allowed inside a method-body." at "m2___n4"
		var x = m2___n4;
		x();

		// Only a warning X!PECT noerrors -->
		// XPECT warnings --> "A reference to method m2___n4 is created detached from a (correct) this-instance." at "m2___n4"
		var y = this.m2___n4;
		y();

	}

	public m2___n4() : void {
		// impl2
		// XPECT errors --> "A reference to a function ending with "___n4" is not allowed inside a method-body." at "m2___n4"
		m2___n4();

		// legal XPECT noerrors --> "A reference to a function ending with ___n4 is not allowed inside a method-body." at "m2___n4"
		this.m2___n4();
	}

	public static sm1() : void {
		// static impl
		// XPECT errors --> "A reference to a function ending with "___n4" is not allowed inside a method-body." at "m2___n4"
		m2___n4();

	}

	public static sm2___n4() : void {
		// static impl2
		// XPECT errors --> "A reference to a function ending with "___n4" is not allowed inside a method-body." at "m2___n4"
		m2___n4();

		// static legal XPECT noerrors --> "A reference to a function ending with ___n4 is not allowed inside a method-body." at "m2___n4"
		X.sm2___n4();
	}


}

class B implements X {

	// XPECT noerrors -->
	a = this.m2___n4();

	constructor() {
		// XPECT errors --> "A reference to a function ending with "___n4" is not allowed inside a method-body." at "m2___n4"
		m2___n4();

		// XPECT noerrors --> "A reference to a function ending with "___n4" is not allowed inside a method-body." at "m2___n4"
		m2__legal_n4();
	}

	@Override
	// XPECT noerrors -->
	public m2___n4() : number {
		return 0;
	}

	get x() : string {
		// legal in Accessor XPECT noerrors --> "A reference to a function ending with "___n4" is not allowed inside a method-body." at "m2___n4"
		m2___n4();

		return "";
	}
	set x(s : string){
		// legal in Accessor XPECT noerrors --> "A reference to a function ending with "___n4" is not allowed inside a method-body." at "m2___n4"
		m2___n4();
	}



}

class C extends B {

	@Override
	public m2___n4() : number {
		// method-call, not a function-call XPECT noerrors -->
		return super.m2___n4();
	}

}

// legal call:
// XPECT noerrors -->
m2___n4();
