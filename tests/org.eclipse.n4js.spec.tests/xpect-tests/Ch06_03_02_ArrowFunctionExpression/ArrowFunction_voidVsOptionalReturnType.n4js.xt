/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */


function none(): void {}

// XPECT noerrors -->
let fn01 = ()=>none();

// XPECT noerrors -->
let fn11: ()=>void = ()=>none();
// XPECT noerrors -->
let fn12: ()=>any? = ()=>none();
// XPECT errors --> "An arrow-function is used in a context where its body is expected to have some value as opposed to being void." at "none()"
let fn13: ()=>any = ()=>none();

// XPECT noerrors -->
let fn21 = ():void => none();
// XPECT noerrors -->
let fn22 = ():any? => none();
// XPECT errors --> "void is not a subtype of any." at "none()"
let fn23 = ():any => none();



// same, but more use-case oriented:

function foo1(f : {function(): void}) {}
// XPECT noerrors -->
foo1(() => none())

function foo2(f: {function():any?}) {}
// XPECT noerrors -->
foo2(() => none());

function foo3(f: {function():any}) {}
// XPECT errors --> "An arrow-function is used in a context where its body is expected to have some value as opposed to being void." at "none()"
foo3(() => none());
