/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */


class A {}
class B extends A {}
class C extends B {}

class X {}


interface I<out T> {
	read(): T {return null;}
}
interface J<out T> extends I<T> {}
interface J_C extends J<C> {}


class A01 implements I<B> {}
class B01 extends A01 {}
// XPECT noerrors -->
class C01 extends B01 implements I<C> {}
// XPECT noerrors -->
class D01 extends C01 {}
// XPECT type of 'new D01().read()' --> C
new D01().read();


class A02 implements I<B> {}
class B02 extends A02 {}
// XPECT noerrors -->
class C02 extends B02 implements I<A> {} // also ok: super type of B
// XPECT noerrors -->
class D02 extends C02 {}
// XPECT type of 'new D02().read()' --> B
new D02().read();


class A03 implements I<B> {}
class B03 extends A03 {}
// XPECT noerrors -->
class C03 extends B03 implements I<X> {} // also ok: entirely unrelated type!
// XPECT noerrors -->
class D03 extends C03 {}
// XPECT type of 'new D03().read()' --> intersection{B,X}
new D03().read();


// XPECT noerrors -->
class A11 implements I<B>, J<C> {}
// XPECT type of 'new A11().read()' --> C
new A11().read();


// XPECT noerrors -->
class A21 implements I<B>, J_C {}
// XPECT type of 'new A21().read()' --> C
new A21().read();
