/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */

// See also Ch05_03_01_03__GenericMethods/NoUnusedTypeVariables.n4js.xt

// XPECT warnings --> "Type variable T not used in parameters or return type." at "T"
function <T> f1(s: string): void {}

// XPECT nowarnings -->
function <T> f2(s: T): void {}

// XPECT nowarnings -->
function <T> f3(s: Array<T>): void {}

// XPECT nowarnings -->
function <T> f4(s: Array<Array<T>>): void {}

// XPECT nowarnings -->
function <T> f5(): T { return null; }

// XPECT nowarnings -->
function <T> f6(): Array<T> { return null; }

// XPECT nowarnings -->
function <T> f7(): Array<Array<T>> { return null; }

// XPECT warnings --> "Type variable S not used in parameters or return type." at "S"
function <T,S> f8(): Array<Array<T>> { return null; }

// XPECT warnings --> "Type variable S not used in parameters or return type." at "S"
function <T,S> f9(t: T): Array<Array<T>> { return null; }

// XPECT nowarnings -->
function <T> f10(t: Array<? extends T>): void {}

// XPECT nowarnings -->
function <T> f11(): Array<? super T> { return null; }

/* XPECT warnings ---
	"Type variable T not used in parameters or return type." at "T"
	"Type variable S not used in parameters or return type." at "S"
--- */
function <T,S> f12(s: string): void {}

// XPECT nowarnings -->
function <T> f13(a: T & string) {}

// XPECT nowarnings -->
function <T> f14(a: string | T) {}

// XPECT nowarnings -->
function <T> f15() : string & T { return null; }

// XPECT nowarnings -->
function <T> f16() : T | string { return null; }

// XPECT nowarnings -->
function <T,S> f17(a : T & S) { return null; }

// XPECT nowarnings -->
function <T,S> f18(a : T | S) { return null; }

// XPECT nowarnings -->
function <T,S> f19(): T & S { return null; }

// XPECT nowarnings -->
function <T,S> f20(): S | T { return null; }


// Function expressions

// XPECT warnings --> "Type variable T not used in parameters or return type." at "T"
var vf1 = function <T> () {}

/* XPECT warnings ---
	"Type variable T not used in parameters or return type." at "T"
	"Type variable S not used in parameters or return type." at "S"
--- */
var vf2 = function <T,S> () {}

// XPECT nowarnings -->
var vf3 = function <T> (s: T) {}

// XPECT nowarnings -->
var vf4 = function <T> () : T { return null; }


// Function types

// XPECT warnings --> "Type variable T not used in parameters or return type." at "T"
var ft1: {function <T> (s: string): void}

// XPECT nowarnings -->
var ft2: {function <T> (s: T): void }

// XPECT nowarnings -->
var ft3: {function <T> (s: Array<T>): void}

// XPECT nowarnings -->
var ft4: {function <T> (s: Array<Array<T>>): void}

// XPECT nowarnings -->
var ft5: {function <T> (): T}

// XPECT nowarnings -->
var ft6: {function <T> (): Array<T>}

// XPECT nowarnings -->
var ft7: {function <T> (): Array<Array<T>> }

// XPECT warnings --> "Type variable S not used in parameters or return type." at "S"
var ft8: {function <T,S> (): Array<Array<T>>}

// XPECT warnings --> "Type variable S not used in parameters or return type." at "S"
var ft9: {function <T,S> (t: T): Array<Array<T>>}

// XPECT nowarnings -->
var ft10: {function <T> (t: Array<? extends T>): void}

// XPECT nowarnings -->
var ft11: {function <T> (): Array<? super T>}

/* XPECT warnings ---
	"Type variable T not used in parameters or return type." at "T"
	"Type variable S not used in parameters or return type." at "S"
--- */
var ft12: {function <T,S> (s: string): void}

// XPECT nowarnings -->
var ft13: {function <T> (s: string & T)}

// XPECT nowarnings -->
var ft14: {function <T> (s: T | string)}

// XPECT nowarnings -->
var ft15: {function <T> (): T & string}

// XPECT nowarnings -->
var ft16: {function <T> (): string | T}

// XPECT nowarnings -->
var ft17: {function <T,S> (a: T & S)}

// XPECT nowarnings -->
var ft18: {function <T,S> (a: S | T)}

// XPECT nowarnings -->
var ft19: {function <T,S> (): T & S}

// XPECT nowarnings -->
var ft20: {function <T,S> (): T | S}
