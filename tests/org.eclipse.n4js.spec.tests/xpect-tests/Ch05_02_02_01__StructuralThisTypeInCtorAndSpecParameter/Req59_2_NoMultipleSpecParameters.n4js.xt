/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */

// IDE-347


class A {
	// XPECT errors ---
	//	"Only a single formal parameter in each constructor may be annotated with @Spec." at "Spec"
	//	"Only a single formal parameter in each constructor may be annotated with @Spec." at "Spec"
	// ---
	constructor(@Spec a : ~i~this, b : number, @Spec c : ~i~this) {}
}


// combined case:

class B {
	// XPECT errors ---
	// "Annotation @Spec may only be used with formal parameters of type ~i~this." at "Spec"
	// "Only a single formal parameter in each constructor may be annotated with @Spec." at "Spec"
	// "Only a single formal parameter in each constructor may be annotated with @Spec." at "Spec"
	// ---
	constructor(@Spec a : string, b : number, @Spec c : ~i~this) {}

	// misplaced annotation XPECT errors -->"The annotation @Spec may only be applied at a parameter of a constructor." at "Spec"
	public someMethod(@Spec nonspec: number) {}
}


interface I {
	// misplaced annotation XPECT errors -->"The annotation @Spec may only be applied at a parameter of a constructor." at "Spec"
	m(@Spec p) : void;
}
