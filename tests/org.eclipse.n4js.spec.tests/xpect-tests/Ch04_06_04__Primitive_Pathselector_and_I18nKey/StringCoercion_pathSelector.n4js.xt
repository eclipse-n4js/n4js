/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */


class A {}
class B extends A {}

// OK string to ps XPECT noerrors
var ps1 : pathSelector<?> = "ab/cd/ef";

// OK ps to string  XPECT noerrors
var sPs1 : string = ps1;

// Mismatch Wildcsard -> concrete Typeref  XPECT errors --> "pathSelector<?> is not a subtype of pathSelector<N4Object>." at "ps1"
var ps2 : pathSelector<N4Object> = ps1;

// OK concrete typerf -> wildcard XPECT noerrors
ps1 = ps2;

var psA : pathSelector<A> = "A";
var psB : pathSelector<B> = "B";

// Typeref mismatch XPECT errors --> "pathSelector<A> is not a subtype of pathSelector<B>." at "psA"
psB = psA;
// Typeref mismatch XPECT errors --> "pathSelector<B> is not a subtype of pathSelector<A>." at "psB"
psA = psB;


var psC : pathSelector<? extends A> = "C"

// OK lower bound typeref XPECT noerrors
psC = psA;
// OK lower bound typeref XPECT noerrors
psC = psB;

// mismatch lower bound typeref XPECT errors --> "pathSelector<? extends A> is not a subtype of pathSelector<A>." at "psC"
psA = psC;
// mismatch lower bound typeref XPECT errors --> "pathSelector<? extends A> is not a subtype of pathSelector<B>." at "psC"
psB = psC;

// OK autobox XPECT noerrors
var a1 : number = psC.length;
// OK autobox XPECT noerrors
var a2 : string = psA.toUpperCase();
