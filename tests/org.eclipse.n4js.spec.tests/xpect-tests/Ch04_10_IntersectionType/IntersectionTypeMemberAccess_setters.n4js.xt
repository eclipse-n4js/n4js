/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */

interface A {}
interface B {}

let a:A;
let b:B;
let ab:A|B;

interface I1 {
	set onlyIn1(a:A);
	set inBothSameType(a:A);
	set inBothDiffType(a:A);
}

interface I2 {
	set onlyIn2(b:B);
	set inBothSameType(a:A);
	set inBothDiffType(a:B);
}

var i12 : I1&I2;
// set onlyIn1(a:A)
// set onlyIn2(b:B)
// set inBothSameType(a:A)
// set inBothDiffType(ab:A|B)

// XPECT errors --> "The accessor onlyIn1 is write-only in I1." at "onlyIn1"
i12.onlyIn1;

// XPECT noerrors
i12.onlyIn1 = a;

// XPECT errors --> "B is not a subtype of A." at "b"
i12.onlyIn1 = b;

// XPECT errors --> "The accessor onlyIn2 is write-only in I2." at "onlyIn2"
i12.onlyIn2;

// XPECT errors --> "A is not a subtype of B." at "a"
i12.onlyIn2 = a;

// XPECT noerrors
i12.onlyIn2 = b;

// XPECT errors --> "The accessor inBothSameType is write-only." at "inBothSameType"
i12.inBothSameType;

// XPECT noerrors
i12.inBothSameType = a;

// XPECT errors --> "B is not a subtype of A." at "b"
i12.inBothSameType = b;

// XPECT errors --> "The accessor inBothDiffType is write-only." at "inBothDiffType"
i12.inBothDiffType;

// XPECT noerrors
i12.inBothDiffType = ab;
