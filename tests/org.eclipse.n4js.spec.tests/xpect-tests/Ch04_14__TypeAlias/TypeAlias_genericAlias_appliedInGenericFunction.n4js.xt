/*
 * Copyright (c) 2021 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */


class A {}
class B extends A {}
class C extends B {}

class G<T> {}
class H<T> {}



type AG2<T> = string | T | G<T>;

function <TF> fn2(p1: TF, p2: AG2<TF>): Array<TF> {
	return null;
}

let arg21: G<B>;
// XPECT type of 'result21' --> Array<B>
let result21 = fn2(new C(), arg21);

let arg22: B | G<B>;
// XPECT type of 'result22' --> Array<B>
let result22 = fn2(new C(), arg22);

let arg23: AG2<B>;
// XPECT type of 'result23' --> Array<B>
let result23 = fn2(new C(), arg23);



type AG1<T> = string | G<T> | H<T>;

function <TF> fn1(p1: TF, p2: AG1<TF>): Array<TF> {
	return null;
}

let arg11: G<B>;
// XPECT type of 'result11' --> Array<B>
let result11 = fn1(new C(), arg11);

let arg12: G<B> | H<B>;
// XPECT type of 'result12' --> Array<B>
let result12 = fn1(new C(), arg12);

let arg13: AG1<B>;
// XPECT type of 'result13' --> Array<B>
let result13 = fn1(new C(), arg13);
