/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */

class A {
	// XPECT noerrors -->
	const s1 = "Hello";

	// XPECT errors --> "Const field s2 must be provided with an initializer." at "s2"
	const s2;

	// XPECT errors --> "All const fields are static. Remove unnecessary modifier static." at "s3"
	static const s3 = "Hello";

	static m = "Hello";
}

var a : A;

// XPECT errors --> "The static member s1 cannot be accessed from a non-static context." at "s1"
a.s1;

// XPECT noerrors --> "non-const can be re-assigned"
A.m = "World";

// XPECT errors --> "The const field s1 is read-only." at "s1"
A.s1 = "World";



//
// ... and the same for interfaces:
//

interface I {
	// XPECT noerrors -->
	const s1 = "Hello";

	// XPECT errors --> "Const field s2 must be provided with an initializer." at "s2"
	const s2;

	// XPECT errors --> "All const fields are static. Remove unnecessary modifier static." at "s3"
	static const s3 = "Hello";

	static m = "Hello";
}

var i : I;

// XPECT errors ---
// "Static members of interfaces may only be accessed directly via the type name of their containing interface." at "i"
// "The static member s1 cannot be accessed from a non-static context." at "s1"
// ---
i.s1;

// XPECT noerrors --> "non-const can be re-assigned"
I.m = "World";

// XPECT errors --> "The const field s1 is read-only." at "s1"
I.s1 = "World";
