/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */

class A {

	// XPECT errors --> "A field may not be declared both final and static. Use a const field instead." at "s0"
	@Final static s0 : string = "Hello";

	// XPECT noerrors --> "ok"
	@Final s1 : string = "Hello";

	// XPECT errors --> "Final field s2 must be provided with an initializer or must be initialized in the constructor." at "s2"
	@Final s2 : string;

	// XPECT noerrors --> "s3 is assigned in ctor"
	@Final s3 : string;

	// 58.1 and 57.3 XPECT errors --> "A field may not be declared both final and const." at "s4"
	@Final const s4 = "Hello";

	constructor() {
		// XPECT errors --> "Final field s1 has an initializer and may therefore not be initialized in the constructor." at "s1"
		this.s1 = "bummer";

		// XPECT noerrors --> "has no initializer, so can be assigned in ctor" at "s3"
		this.s3 = "Hello"

		var a : A;
		// wrong target instance XPECT errors --> "The final field s2 is read-only." at "s2"
		a.s2 = "bad";
		// previous line tests two things:
		// (1) that we get an error here and
		// (2) that the expected error at the declaration of s2 above does not appear due to this bogus assignment
	}

	m() {
		// XPECT errors --> "The final field s2 is read-only." at "s2"
		this.s2 = "Hello";
	}
}

class B {
	// XPECT errors --> "Final field s2 must be provided with an initializer or must be initialized in the constructor." at "s2"
	@Final s2 : string;

	// no ctor provided
}


//
// globals from GlobalObject (see file "global.n4ts")
// (they don't look like fields, but they actually are fields)
//

// XPECT noerrors -->
var inf = Infinity;
// XPECT errors --> "The built-in constant Infinity is read-only." at "Infinity"
Infinity = null;
