/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */
// cf. https://github.com/NumberFour/n4js/issues/221



class Y {}
class B {}
class C extends B { constructor(s: string) {} }
class D extends C { constructor(s: string) { super(s)} }
class E extends C { constructor(u: int) { super("x")} }

// XPECT noerrors -->
let _xtor: constructor{?};
// XPECT noerrors -->
let _ctor: constructor{? extends C};
let _dtor: constructor{? extends D};
let ctor: constructor{C};

// XPECT errors --> "constructor{? extends C} is not a subtype of constructor{C}." at "_ctor"
ctor = _ctor;
// XPECT noerrors -->
_ctor = ctor;
// XPECT errors -->"constructor{?} is not a subtype of constructor{? extends C}." at "_xtor"
_ctor = _xtor;
// XPECT noerrors -->
_xtor = _ctor;

// XPECT noerrors -->
_ctor = _dtor;
// XPECT errors --> "constructor{? extends C} is not a subtype of constructor{? extends D}." at "_ctor"
_dtor = _ctor;

// XPECT noerrors -->
let t: type{?}
// XPECT noerrors -->
let t2: type{? extends C}

// XPECT noerrors -->
_xtor = C;
// XPECT noerrors -->
_xtor = Y;

// XPECT noerrors -->
_ctor = C;
// XPECT noerrors -->
ctor = C;

// XPECT noerrors -->
_ctor = D;
// XPECT noerrors -->
ctor = D;

// XPECT noerrors -->
_ctor = E;
// XPECT errors --> "constructor{E} is not a subtype of constructor{C}." at "E"
ctor = E;

// XPECT errors --> "constructor{B} is not a subtype of constructor{? extends C}." at "B"
_ctor = B;
// XPECT errors --> "constructor{B} is not a subtype of constructor{C}." at "B"
ctor = B;

// XPECT errors --> "constructor{Y} is not a subtype of constructor{? extends C}." at "Y"
_ctor = Y;
// XPECT errors --> "constructor{Y} is not a subtype of constructor{C}." at "Y"
ctor = Y;


// XPECT noerrors -->
new ctor("");
// XPECT errors --> "Cannot instantiate ? extends C, because C does not have a @CovariantConstructor." at "_ctor"
new _ctor();
// XPECT errors --> "Cannot instantiate constructor{?}." at "_xtor"
new _xtor();
