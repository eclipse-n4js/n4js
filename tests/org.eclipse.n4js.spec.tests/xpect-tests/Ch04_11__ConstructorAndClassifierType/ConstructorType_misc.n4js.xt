/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */


var o: Object = new Object();
// XPECT type of 'x0' --> constructor{? extends Object}
var x0 = o.constructor;

// XPECT type of 'x1' --> constructor{? extends Object}
// XPECT noerrors -->
var x1 = ({}).constructor;

var os: ~Object with { prop: string; } = { prop: "hello there!" };
// XPECT type of 'x2' --> constructor{? extends Object}
// XPECT noerrors -->
var x2 = os.constructor;



class A {}

// XPECT type of 'x3' --> constructor{Function}
// XPECT noerrors -->
var x3 = A.constructor;


// ----------------------------------------------------------------------------------------------------
// the following code shows why we have to infer A.constructor to "constructor{Function}"
// (and not "{function(string):void}")

var y1 = A.constructor;
var y2 = Function;
var y3: constructor{?};

// note that now we have: y1 === y2
/* XPECT output ---
true
--- */
console.log(y1 === y2);

// XPECT noerrors --> "{function(string):void} is not a subtype of constructor{Function}."
y2 = y1;
// XPECT noerrors --> "{function(string):void} is not a subtype of constructor{?}."
y3 = y1;
