/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.N4JSSpecTest END_SETUP */


// keep this file aligned with file ConstructorType_MemberAccessInCaseOfWildcard.n4js.xt


class A {
	static method(): string {
		return 'hello';
	}
}


// member access on ClassifierTypeRef with wildcard, style 1:

var t1: type{? extends A};
// XPECT type of 'm11' --> constructor{Function}
var m11 = t1.constructor;
// XPECT type of 'm12' --> Object
var m12 = t1.prototype;
// XPECT type of 'm13' --> string
var m13 = t1.method();


// member access on ClassifierTypeRef with wildcard, style 2:

class C2<T> {
	m(): type{T} {return null;}
}
var c2: C2<? extends A>;
// XPECT type of 't2' --> type{? extends A}
var t2 = c2.m();
// XPECT type of 'm21' --> constructor{Function}
var m21 = t2.constructor;
// XPECT type of 'm22' --> Object
var m22 = t2.prototype;
// XPECT type of 'm23' --> string
var m23 = t2.method();



// member access on ClassifierTypeRef with wildcard, style 3:

class C3<T extends A> {
	m(): type{T} {return null;}
}
var c3: C3<?>;
// XPECT type of 't3' --> type{? extends A}
var t3 = c3.m();
// XPECT type of 'm31' --> constructor{Function}
var m31 = t3.constructor;
// XPECT type of 'm32' --> Object
var m32 = t3.prototype;
// XPECT type of 'm33' --> string
var m33 = t3.method();


// member access on ClassifierTypeRef with wildcard, style 4:

class C4<T extends A> {
	m(): type{? extends T} {return null;}
}
var c4: C4<?>;
// XPECT type of 't4' --> type{? extends A}
var t4 = c4.m();
// XPECT type of 'm41' --> constructor{Function}
var m41 = t4.constructor;
// XPECT type of 'm42' --> Object
var m42 = t4.prototype;
// XPECT type of 'm43' --> string
var m43 = t4.method();
