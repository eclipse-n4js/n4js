/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.SpecXtTest

	 Workspace {
		Project "PolyfillTest" {
			Folder "src" {
				ThisFile {}
				File "P.n4jsd" {}
			}
			File "package.json" { from="../package.json" }
		}
	}

	END_SETUP
 */


// Note: if this test fails, maybe have a look at
// org.eclipse.n4js.naming.N4JSQualifiedNameProvider.getPolyfillFQN(TClassifier, IQualifiedNameProvider)
// as there is a hack which handles built-in types and their global segment slightly differently


let f = new Object();
// XPECT noerrors --> "provided by polyfill P"
f.additionalMethod();
// XPECT noerrors --> "bind to original def"
f.toString();
// XPECT noerrors --> "bind to polyfill in P"
Object.addStatic();


let i: IArguments;
// XPECT noerrors --> "provided by polyfill P"
i.additionalMethod();
// XPECT noerrors --> "bind to original def"
let len: number = i.length;
