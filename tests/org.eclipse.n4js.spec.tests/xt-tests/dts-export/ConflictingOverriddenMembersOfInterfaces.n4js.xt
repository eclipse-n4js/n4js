/*
 * Copyright (c) 2021 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.SpecXtTest 
   GENERATE_DTS
   END_SETUP
 */


interface KeepGetterSetter1_A {
    public a: string;
}
class KeepGetterSetter1_B implements KeepGetterSetter1_A {
    @Override
    public set a(val : string) {}
    @Override
    public get a() : string {return "";}
}

interface KeepField1_A {
    public a: string;
}
class KeepField1_B implements KeepField1_A {
    @Override
    public a: string;
}

interface KeepField2_A {
    set a(val : string) {}
    get a() : string {return "";}
}
class KeepField2_B implements KeepField2_A {
    @Override
    a: string;
}

interface KeepField3_A {
	/**
	 * Some JSDoc 
	 */
    set a(val : string);
}
class KeepField3_B implements KeepField3_A {
    @Override
    set a(val : string) {}
}
class KeepField3_C extends KeepField3_B {
    @Override
    a: string;
}

interface KeepField4_A {
    public get a() : string {return "";}
}
class KeepField4_B implements KeepField4_A {
    @Override
    public a: string;
}
class KeepField4_C extends KeepField4_B {
    @Override
    public set a(val : string) {}
    @Override
    public get a() : string {return "";}
}


/* XPECT generated_dts ---
declare interface KeepGetterSetter1_A {
	a: string;
}
declare class KeepGetterSetter1_B implements KeepGetterSetter1_A {
	public set a(val: string);
	public get a(): string;
}
declare interface KeepField1_A {
	a: string;
}
declare class KeepField1_B implements KeepField1_A {
	public a: string;
}
declare interface KeepField2_A {}
declare class KeepField2_B implements KeepField2_A {
	a: string;
}
declare interface KeepField3_A {}
declare class KeepField3_B implements KeepField3_A {
	set a(val: string);
}
declare class KeepField3_C extends KeepField3_B {
	get a(): string;
}
declare interface KeepField4_A {
	get a(): string;
}
declare class KeepField4_B implements KeepField4_A {
	public a: string;
}
declare class KeepField4_C extends KeepField4_B {}
--- */
