/*
 * Copyright (c) 2021 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.SpecXtTest END_SETUP */


// --------------------------------------------------------------------------------------------------------------
// for @NumberBased enums:


@NumberBased
enum Digit {
	ZERO: 0, ONE: 1, TWO: 2
}
@NumberBased
enum DigitFewer {
	ZERO: 0, ONE: 1
}
@NumberBased
enum DigitMore {
	ZERO: 0, ONE: 1, TWO: 2, THREE: 3
}

let num: number;
let num_0: 0;
let num_012: 0 | 1 | 2;
let digit: Digit;
let digitFewer: DigitFewer;
let digitMore: DigitMore;

// for reference, here the relation between @NumberBased enums and other types than LiteralTypeRef:

// XPECT noerrors -->
digit = Digit.ZERO;
// XPECT errors --> "0 is not a subtype of Digit." at "0"
digit = 0;
// XPECT errors --> "DigitFewer.ZERO is not a subtype of Digit." at "DigitFewer.ZERO"
digit = DigitFewer.ZERO;
// XPECT errors --> "DigitFewer is not a subtype of Digit." at "digitFewer"
digit = digitFewer;
// XPECT noerrors -->
num = Digit.ZERO;

// and now the relation between @NumberBased enums and LiteralTypeRef:

// XPECT errors --> "0 is not a subtype of Digit." at "num_0"
digit = num_0;
// XPECT errors --> "union{0,1,2} is not a subtype of Digit." at "num_012"
digit = num_012;

// XPECT noerrors -->
num_0 = Digit.ZERO;
// XPECT noerrors -->
num_012 = digit;
// XPECT noerrors -->
num_012 = digitFewer;
// XPECT errors --> "DigitMore is not a subtype of union{0,1,2}." at "digitMore"
num_012 = digitMore;


// --------------------------------------------------------------------------------------------------------------
// exactly the same, but for @StringBased enums:


@StringBased
enum Color {
	RED, GREEN, BLUE
}
@StringBased
enum ColorFewer {
	RED, GREEN
}
@StringBased
enum ColorMore {
	RED, GREEN, BLUE, YELLOW
}

let str: string;
let str_red: "RED";
let str_rgb: "RED" | "GREEN" | "BLUE";
let color: Color;
let colorFewer: ColorFewer;
let colorMore: ColorMore;

// for reference, here the relation between @StringBased enums and other types than LiteralTypeRef:

// XPECT noerrors -->
color = Color.RED;
// XPECT errors --> ""RED" is not a subtype of Color." at ""RED""
color = "RED";
// XPECT errors --> "ColorFewer.RED is not a subtype of Color." at "ColorFewer.RED"
color = ColorFewer.RED;
// XPECT errors --> "ColorFewer is not a subtype of Color." at "colorFewer"
color = colorFewer;
// XPECT noerrors -->
str = Color.RED;

// and now the relation between @StringBased enums and LiteralTypeRef:

// XPECT errors --> ""RED" is not a subtype of Color." at "str_red"
color = str_red;
// XPECT errors --> "union{"RED","GREEN","BLUE"} is not a subtype of Color." at "str_rgb"
color = str_rgb;

// XPECT noerrors -->
str_red = Color.RED;
// XPECT noerrors -->
str_rgb = color;
// XPECT noerrors -->
str_rgb = colorFewer;
// XPECT errors --> "ColorMore is not a subtype of union{"RED","GREEN","BLUE"}." at "colorMore"
str_rgb = colorMore;


// --------------------------------------------------------------------------------------------------------------
// exactly the same, but for normal enums:


enum ColorNormal {
	RED, GREEN, BLUE
}
enum ColorNormalFewer {
	RED, GREEN
}
enum ColorNormalMore {
	RED, GREEN, BLUE, YELLOW
}

let colorNormal_red: ColorNormal.RED;
let colorNormal_rg: ColorNormal.RED | ColorNormal.GREEN;
let colorNormal_rgb: ColorNormal.RED | ColorNormal.GREEN | ColorNormal.BLUE;
let colorNormal: ColorNormal;
let colorNormalFewer: ColorNormalFewer;
let colorNormalMore: ColorNormalMore;

// for reference, here the relation between normal enums and other types than LiteralTypeRef:

// XPECT noerrors -->
colorNormal = ColorNormal.RED;
// XPECT errors --> "ColorNormalFewer.RED is not a subtype of ColorNormal." at "ColorNormalFewer.RED"
colorNormal = ColorNormalFewer.RED;
// XPECT errors --> "ColorNormalFewer is not a subtype of ColorNormal." at "colorNormalFewer"
colorNormal = colorNormalFewer;

// and now the relation between normal enums and LiteralTypeRef:

// XPECT noerrors -->
colorNormal = colorNormal_red;
// XPECT noerrors -->
colorNormal = colorNormal_rgb;

// XPECT noerrors -->
colorNormal_red = ColorNormal.RED;
// XPECT errors --> "union{ColorNormal.RED,ColorNormal.GREEN} is not a subtype of ColorNormal.RED." at "colorNormal_rg"
colorNormal_red = colorNormal_rg;
// XPECT noerrors -->
colorNormal_rg = ColorNormal.RED;
// XPECT noerrors -->
colorNormal_rg = colorNormal_red;
// XPECT noerrors -->
colorNormal_rg = colorNormal_rg;
// XPECT errors --> "union{ColorNormal.RED,ColorNormal.GREEN,ColorNormal.BLUE} is not a subtype of union{ColorNormal.RED,ColorNormal.GREEN}." at "colorNormal_rgb"
colorNormal_rg = colorNormal_rgb;
// XPECT noerrors -->
colorNormal_rgb = colorNormal;
// XPECT errors --> "ColorNormalFewer is not a subtype of union{ColorNormal.RED,ColorNormal.GREEN,ColorNormal.BLUE}." at "colorNormalFewer"
colorNormal_rgb = colorNormalFewer;
// XPECT errors --> "ColorNormalMore is not a subtype of union{ColorNormal.RED,ColorNormal.GREEN,ColorNormal.BLUE}." at "colorNormalMore"
colorNormal_rgb = colorNormalMore;
