/*
 * Copyright (c) 2021 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.spec.tests.SpecXtTest

	 Workspace {
		Project "ProjectOther" {
			Folder "src" {
				File "Other.n4js" { from="./MemberRedefinition_accessibilityOfOverriddenMember_Other.n4js" }
			}
		}
		Project "ProjectMain" {
			Folder "src" {
				ThisFile {}
			}
			DEPENDS_ON "ProjectOther"
		}
	}

END_SETUP */


// CASE #1: the overridden/implemented member Ifc#someMethod() is accessible from SubCls but not from OtherCls,
// the owner of the inherited overriding/implementing member OtherCls#someMethod()
// --> should be allowed, because accessibility from the context of SubCls is relevant (not from OtherCls)
// (this was a bug (see GH-2210) and threw an exception: "You can only add issues for EObjects contained in the currently validated resource")


import {OtherCls} from "Other";

@CovariantConstructor
interface Ifc {
	project someMethod(p: string)
}

// XPECT noerrors -->
class SubCls extends OtherCls implements Ifc {}
