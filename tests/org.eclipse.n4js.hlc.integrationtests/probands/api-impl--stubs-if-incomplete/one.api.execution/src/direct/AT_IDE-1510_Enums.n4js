/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

import { E } from "p/A"
import { ES } from "p/A"
import { Missing_E } from "p/A"
import { Assert } from "direct/MiniAssertions"

export public class AT_IDE_1510_enum {


	/** Access to existing Enum-Literals */
	@Test
	public test_Literal_in_existing_Enum() : void {
		// Access to existing Enum-Literals		
		var e : E = E.a;
		Assert.isNotUndefined( e );
		e = E.b;
		Assert.isNotUndefined( e );
		e = E.c;
		Assert.isNotUndefined( e );
	}
	
	/** Access to NOT-existing Enum-Literals */
	@Test
	public test_missing_Literal_in_existing_Enum() : void {
		// Access to NOT-existing Enum-Literals	
		Assert.throws( function() {
			var e : E = E.missing_d;
			console.log("grrrrrrr1")
		}, N4ApiNotImplementedError, "Illegal Access to missing Literal. Expected the N4ApiNotImplementedError");
	}

	/** Access to NOT-existing Enum-Literals	 */
	@Test
	public test_literal_in_missing_Enum() : void {
		// Access to NOT-existing Enum-Literals	
		var e : Missing_E;
		Assert.throws( function() {
			e = Missing_E.a;
			console.log("grrrrrrr2")
		}, N4ApiNotImplementedError, "Illegal Access to literal in missing Enumeration. Expected the N4ApiNotImplementedError");
		Assert.throws( function() {
			e = Missing_E.b;
			console.log("grrrrrrr3")
		}, N4ApiNotImplementedError, "Illegal Access to literal in missing Enumeration. Expected the N4ApiNotImplementedError");
		Assert.throws( function() {
			e = Missing_E.c;
			console.log("grrrrrrr4")
		}, N4ApiNotImplementedError, "Illegal Access to literal in missing Enumeration. Expected the N4ApiNotImplementedError");
	}
	
	/** Access to existing StringBased Enum-Literals		 */
	@Test
	public test_normal_existing_EnumSB() : void {
		// Access to existing StringBased Enum-Literals		
		var e : ES = ES.a;
		Assert.isNotUndefined( e );
		e = ES.b;
		Assert.isNotUndefined( e );
		e = ES.c;
		Assert.isNotUndefined( e );
	}
	
	/** Access to NOT-existing StringBased Enum-Literals	 */
	@Test
	public test_missing_Literal_in_existing_EnumSB() : void {
		// Access to NOT-existing StringBased Enum-Literals	
		Assert.throws( function() {
			var e : ES = ES.missing_d;
			console.log("grrrrrrr5")
		}, N4ApiNotImplementedError, "Illegal Access to missing Literal. Expected the N4ApiNotImplementedError");
	}

	/** Access to NOT-existing StringBased Enum-Literals */
	@Test
	public test_literal_in_missing_EnumSB() : void {
		var e : Missing_E;
		Assert.throws( function() {
			e = Missing_E.a;
			console.log("grrrrrrr6")
		}, N4ApiNotImplementedError, "Illegal Access to literal in missing Enumeration. Expected the N4ApiNotImplementedError");
		Assert.throws( function() {
			e = Missing_E.b;
			console.log("grrrrrrr7")
		}, N4ApiNotImplementedError, "Illegal Access to literal in missing Enumeration. Expected the N4ApiNotImplementedError");
		Assert.throws( function() {
			e = Missing_E.c;
			console.log("grrrrrrr8")
		}, N4ApiNotImplementedError, "Illegal Access to literal in missing Enumeration. Expected the N4ApiNotImplementedError");
	}



}
