# wsp1/P1/ext1/c/X.js
// same as scenario 6, but now we have a project that ONLY contains external
// sources (i.e. *no* n4js file). This kind of project caused problems before.
export public class A {
	constructor() {
		console.log(" in class "+A)
	}
}

# wsp1/P1/package.json
{
	"name": "P1",
	"version": "0.0.1-SNAPSHOT",
	"n4js": {
		"projectType": "application",
		"vendorId": "org.eclipse.n4js",
		"vendorName": "Eclipse N4JS Project",
		"output": "outfolder",
		"sources": {
			"external": [
				"ext1",
				"ext2"
			]
		},
		"moduleFilters": {
			"noModuleWrap": [
				{
					"module": "c/*",
					"sourceContainer": "ext2"
				}
			]
		}
	}
}
# wsp1/P1/ext2/c/X2.js
export public class C {
	constructor() {
		console.log(" in class "+C)
	}
} 
