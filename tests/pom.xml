<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (c) 2016 NumberFour AG.
All rights reserved. This program and the accompanying materials
are made available under the terms of the Eclipse Public License v1.0
which accompanies this distribution, and is available at
http://www.eclipse.org/legal/epl-v10.html

Contributors:
  NumberFour AG - Initial API and implementation
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>org.eclipse.n4js.tests</artifactId>
	<packaging>pom</packaging>

	<parent>
		<groupId>org.eclipse.n4js</groupId>
		<artifactId>org.eclipse.n4js.distribution</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<modules>
		<!-- test modules are included below via profiles "execute-basic-tests" (which is active by default), "execute-ecma-tests", etc. -->
	</modules>

	<properties>
		<!-- use "-Dlog4j.debug -Dorg.apache.logging.log4j.simplelog.StatusLogger.level=TRACE" to get debug messages from the logger -->
		<loggingArgs>-Dlog4j.configuration="file:${basedir}/../../plugins/org.eclipse.n4js.utils.logging/log4j_tests.xml"</loggingArgs>

		<junit-version>4.13.1</junit-version>

		<surefire-plugin.failIfNoTests>false</surefire-plugin.failIfNoTests>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc-plugin.version}</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
		</plugins>

		<!-- Management of plugins which can be activated by children. -->
		<pluginManagement>
			<plugins>
				<plugin>
					<!-- main test execution configuration -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<!-- argLine needs to be one line, if you auto-format line break will break tests -->
						<argLine>${memoryArgs} ${encodingArgs} ${loggingArgs}</argLine>
						<!-- XXX remote debug -->
<!-- 					<argLine>${memoryArgs} ${encodingArgs} ${loggingArgs} -Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=y</argLine> -->
						<!-- XXX remote debug -->
						<testSourceDirectory>${project.basedir}/src</testSourceDirectory>
						<testClassesDirectory>${project.build.outputDirectory}</testClassesDirectory>
						<failIfNoTests>${surefire-plugin.failIfNoTests}</failIfNoTests>
						<systemPropertyVariables>
							<NODEJS_PATH>${NODEJS_PATH}</NODEJS_PATH>
							<org.eclipse.n4js.defaultNodePath>${org.eclipse.n4js.defaultNodePath}</org.eclipse.n4js.defaultNodePath>
						</systemPropertyVariables>
						<includes>
							<!-- replace surefire's default inclusion patterns by this simpler convention: -->
							<include>**/*Test.java</include>
						</includes>
						<excludes>
							<exclude>**/*PerformanceTest.java</exclude>
							<exclude>**/*InSuite.java</exclude>
						</excludes>
					</configuration>
					<executions>
						<execution>
							<id>run-pojo-surefire-tests</id>
							<goals>
								<goal>test</goal>
							</goals>
							<phase>test</phase>
							<configuration>
								<runOrder>alphabetical</runOrder>
								<systemPropertyVariables>
									<NODEJS_PATH>${NODEJS_PATH}</NODEJS_PATH>
									<org.eclipse.n4js.defaultNodePath>${org.eclipse.n4js.defaultNodePath}</org.eclipse.n4js.defaultNodePath>
								</systemPropertyVariables>
								<additionalClasspathElements>
									<additionalClasspathElement>${cu_org.eclipse.n4js.runner}</additionalClasspathElement>
								</additionalClasspathElements>
							</configuration>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.surefire</groupId>
							<artifactId>surefire-junit47</artifactId>
							<version>${maven-surefire-plugin.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<!-- suppress default execution of tycho surefire plugin -->
					<groupId>org.eclipse.tycho</groupId>
					<artifactId>tycho-surefire-plugin</artifactId>
					<executions>
						<execution>
							<id>default-test</id>
							<phase>none</phase>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<!-- Profile workspace-to-userhome is automatically activated if the property WORKSPACE is not set.
			 As a fall-back it sets it to ${user.home} -->
		<profile>
			<id>workspace-to-userhome</id>
			<activation>
				<property>
					<name>!WORKSPACE</name>
				</property>
			</activation>
			<properties>
				<WORKSPACE>${user.home}</WORKSPACE>
			</properties>
		</profile>		

		<!-- This profile is active by default; can be deactivated on command line with "-DdoNotExecuteBasicTests" -->
		<profile>
			<id>execute-basic-tests</id>
			<activation>
				<property><name>!doNotExecuteBasicTests</name></property>
			</activation>
			<modules>
				<module>org.eclipse.n4js.lang.tests</module>
				<module>org.eclipse.n4js.spec.tests</module>

				<module>org.eclipse.n4js.bugreports.tests</module>
				<module>org.eclipse.n4js.expectmatrix.tests</module>
				<module>org.eclipse.n4js.flowgraphs.tests</module>
				<module>org.eclipse.n4js.spec.examples.xpect.tests</module>
				<module>org.eclipse.n4js.xpect.tests</module>

				<module>org.eclipse.n4js.ts.model.tests</module>

				<module>org.eclipse.n4js.transpiler.tests</module>
				<module>org.eclipse.n4js.transpiler.es5.tests</module>
				<module>org.eclipse.n4js.transpiler.es.tests</module>

				<module>org.eclipse.n4js.json.tests</module>
				<module>org.eclipse.n4js.json.xpect.tests</module>

				<module>org.eclipse.n4js.packagejson.xpect.tests</module>

				<module>org.eclipse.n4js.semver.tests</module>

				<module>org.eclipse.n4js.jsdoc.tests</module>

				<module>org.eclipse.n4js.utils.tests</module>
				<module>org.eclipse.n4js.releng.utils.tests</module>

				<module>org.eclipse.n4js.regex.tests</module>

				<module>org.eclipse.n4js.jsdoc2spec.tests</module>

				<module>org.eclipse.n4js.ide.tests</module>
				<module>org.eclipse.n4js.ide.tests.helper.tests</module>
				<module>org.eclipse.n4js.ui.tests</module> <!-- note the bad name: these are actually IDE tests -->

			</modules>
		</profile>

		<profile>
			<id>execute-accesscontrol-tests</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<modules>
				<module>org.eclipse.n4js.accesscontrol.tests</module>
			</modules>
		</profile>

		<profile>
			<id>execute-integration-tests</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<modules>
				<module>org.eclipse.n4js.integration.tests</module>
			</modules>
		</profile>

		<profile>
			<id>execute-ecma-tests</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<modules>
				<module>org.eclipse.n4js.tests.ecmatestsuite</module>
			</modules>
		</profile>

		<profile>
			<id>execute-smoke-tests</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<modules>
				<module>org.eclipse.n4js.smoke.tests</module>
			</modules>
		</profile>

	</profiles>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit-version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.eclipse.xtend</groupId>
				<artifactId>org.eclipse.xtend.lib</artifactId>
				<version>${xtext-version}</version>
				<type>pom</type>
			</dependency>
		</dependencies>
	</dependencyManagement>

</project>
