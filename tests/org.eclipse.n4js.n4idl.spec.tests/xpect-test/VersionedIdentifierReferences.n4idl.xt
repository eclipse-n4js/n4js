/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.n4idl.spec.tests.N4IDLSpecTest END_SETUP */

interface I#1 {}

class A#1 {
	public static staticField1 : int = 1;
}

class B#1 {
	public static staticField1 : int = 2;
}

class A#2 {
	public static staticField2 : int = 3;
}

class B#2 {
	public static staticField2 : int = 4;
}

// some function that accepts constructors as parameter
function some(ctor : constructor{N4Object}) {}

@Migration(1,2)
function f(a : A#1) : A#2 {
	// XPECT noerrors
	console.log(A#1.staticField1)
	// XPECT noerrors
	console.log(A#2.staticField2)
	// XPECT noerrors
	console.log(B#1.staticField1)
	// XPECT noerrors
	console.log(B#2.staticField2)
	// XPECT noerrors

	// XPECT noerrors
	let ctor : constructor{A#1}

	// XPECT noerrors
	let combined : union{A#1, B#1}

	// XPECT noerrors
	let isect : intersection{A#1, I#1}

	// As function parameter XPECT noerrors
	some(A#1)

	// As simple primary expression XPECT noerrors
	A#1;

	// In NewExpression XPECT noerrors
	new A#1();
	
	return null;
}