/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.n4idl.spec.tests.N4IDLSpecTest END_SETUP */

class A#1 {}
class A#2 {}
class A#3 {}
class A#4 {}
class A#5 {}

interface I#1 {}
interface I#2 {}

@VersionAware
function f() {
	// XPECT typeSwitch of a1 --> "((v instanceof A#2) || ((v array with (v[0] instanceof A#1)))) && ((v instanceof A#3) || ((v array with (v[0] instanceof A#5))))"
	let a1 : (A#2|[A#1])&(A#3|Array<A#5>)
	
	// XPECT typeSwitch of a2 --> "((((v array with (v[0] instanceof A#2))) || ((v array with (v[0] instanceof A#1)))) && (((v instanceof I#1) && (v instanceof A#3)) || (v instanceof A#5))) || (v instanceof I#1)"
	let a2 : (([A#2|A#1])&((I#1&A#3|A#5)))|I#1
	
	// Nested composed type XPECT typeSwitch of a3 --> "((v instanceof A#2) || (v instanceof A#1)) && ((v instanceof A#3) || (v instanceof A#5))" 
	let a3 : (A#2|A#1)&(A#3|A#5)
	    
	// Nested composed type XPECT typeSwitch of a4 --> "(((v instanceof A#2) || (v instanceof A#1)) && (((v instanceof I#1) && (v instanceof A#3)) || (v instanceof A#5))) || (v instanceof I#1)"
	let a4 : ((A#2|A#1)&((I#1&A#3|A#5)))|I#1
}