/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation	
 */

/* XPECT_SETUP org.eclipse.n4js.n4idl.spec.tests.N4IDLSpecTest END_SETUP */

class A#1 {}
class A#2 {}
class A#3 {}


@Migration
// Simple valid migration (A#1) -> (A#2) XPECT noerrors
function migrate1to2(a1 : A#1) : A#2 {
	return null;
}

@Migration
// Primitive parameters only are insufficient to infer the source version XPECT errors --> "Migrations must declare at least one versioned source type." at "a : int"
function migratePrimitiveToA2(a : int) : A#1 {
	return null;
}

@Migration
/* Multiple model versions in the source types are disallowed XPECT errors ---
	 "The source version of migration ambiguousSourceMigration is ambiguous." at "a1 : A#1, a2 : A#2"
 * ---
 */
function ambiguousSourceMigration(a1 : A#1, a2 : A#2) : A#1 {
	return null;
}

@Migration
/* Multiple model versions in the target types are disallowed XPECT errors ---
	"The target version of migration ambiguousTargetMigration is ambiguous." at "~Object with {a1: A#1, a2: A#2}"
--- */
function ambiguousTargetMigration(a1 : A#1) : ~Object with {a1: A#1, a2: A#2} {
	return null;
}

@Migration(1,2)
// Explicitly declared source and target version allow arbitrarily versioned source and target types XPECT noerrors 
function explicitlyDeclaredSourceAndTargetVersion(a : A#3) : ~Object with {a1 : A#1, n : number} {
	return null;
}

@Migration
// Generic migration are currently not validated wrt source and target version XPECT noerrors
function <T> m(t : T) : A#2 {
	return null;
}