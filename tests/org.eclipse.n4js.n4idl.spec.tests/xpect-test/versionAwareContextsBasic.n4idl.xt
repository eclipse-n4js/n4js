/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */


/* XPECT_SETUP org.eclipse.n4js.n4idl.spec.tests.N4IDLSpecTest END_SETUP */

/** This test assures that explicit type version requests are only allowed
   in contexts that are explicitly specified to be version aware (e.g. @Migration, @VersionAware).
 */

export public class A#1 {}
export public class A#2 {}


// In regular function declarations, type versions may not be specified explicitly XPECT errors --> "The explicit declaration of type version requests is only allowed in functions/classifiers annotated as @Migration or @VersionAware." at "#1"
function notAMigration(p : A#1) {}

// In the extends clause, type version may not be specified explicitly XPECT errors --> "The explicit declaration of type version requests is only allowed in functions/classifiers annotated as @Migration or @VersionAware." at "#1"
class SubClass#1 extends A#1 {
	// In class declarations, type version may not be specified explicitly XPECT errors --> "The explicit declaration of type version requests is only allowed in functions/classifiers annotated as @Migration or @VersionAware." at "#1"
	field : A#1
}

@Migration
function migration(p : A#1) : A#2 {
	// In migrations, type versions may be specified explicitly XPECT noerrors
	let a1 = new A#1();
	// In migrations, type versions may be specified explicitly XPECT noerrors
	let a2 = new A#2();

	// In migrations, an explicit declaration of type versions is required XPECT errors --> "Failed to infer the context version for A. Please declare an explicit type version." at "A"
	let noVersion = new A();
	
	return null;
}

// classes can be declared @VersionAware
@VersionAware
// version-aware classifiers may not declare a version XPECT errors --> "Classifiers annotated as @VersionAware must not declare a version." at "VersionAwareClass"
class VersionAwareClass#5 {
	// In @VersionAware classes, explicit type version requests may be specified XPECT noerrors
	field1 : A#1
	// In @VersionAware classes, explicit type version requests may be specified XPECT noerrors
	field2 : A#2

	// fields cannot be declared @VersionAware XPECT errors --> "The annotation @VersionAware is disallowed for this location." at "VersionAware"
	@VersionAware
	unrelated : int
}

@VersionAware
// XPECT noerrors
export public class VersionAwareClass {}

// functions can be declared @VersionAware XPECT noerrors
@VersionAware
function f() {
	// @VersionAware functions may specify explicit version requests XPECT noerrors
	let f : A#1
}
