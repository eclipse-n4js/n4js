/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.n4idl.spec.tests.N4IDLSpecTest 
   
   IssueConfiguration {
		IssueCode "AST_TOP_LEVEL_STATEMENTS" {enabled=false}
	}
   
   END_SETUP
 */

/** Custom MigrationController implementation. */
@VersionAware
// The MigrationController interface can be implemented XPECT noerrors
class MyController implements MigrationController {
	@Override
	public <TargetType extends Object> migrate(args : Array<?>) : TargetType {
		return null;
	}
	@Override
	public <TargetType extends Object> migrateWith(migration: Function, args : Array<?>) : TargetType {
		return null;
	}
	
	@Override
	public get context() : MigrationContext { return null; }
}

/** Custom MigrationContext implementation. */
@VersionAware
// The MigrationContext interface can be implemented XPECT noerrors
class MyContext implements MigrationContext {
	@Override
	public getTrace(argument : Object) : Array<?> { 
		return [];
	}
	@Override
	public isModified(obj : Object, property : string = undefined) : boolean { 
		return true;
	}
	@Override
	public setUserData(key : string, value : any) : void {}
	@Override
	public getUserData(key : string) : any {
		return null;
	}
}

/* Prints the runtime representation of MigrationContext and MigrationController */
@VersionAware
function f() {
	console.log(MigrationContext);
	console.log(MigrationController);
	console.log("N4Type.of(MigrationContext) instanceof N4Interface:", N4Type.of(MigrationContext) instanceof N4Interface);
	console.log("N4Type.of(MigrationController) instanceof N4Interface:", N4Type.of(MigrationController) instanceof N4Interface);
}

/* MigrationController and MigrationContext are defined at runtime XPECT output ---
   <==
   stdout:
   [Function: MigrationContext]
   [Function: MigrationController]
   N4Type.of(MigrationContext) instanceof N4Interface: true
   N4Type.of(MigrationController) instanceof N4Interface: true
   stderr:
   ==>
   ---
 */
eval("f()");