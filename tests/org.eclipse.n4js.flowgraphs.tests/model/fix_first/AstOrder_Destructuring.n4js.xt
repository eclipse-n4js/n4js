/*
 * Copyright (c) 2017 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */


/* XPECT_SETUP org.eclipse.n4js.flowgraphs.tests.N4JSFlowGraphTest END_SETUP */


/**
 * The order of all features of AST node instances is tested here.
 * Example:
 *   The 'while' statement has the two features 'expression' and 'statement'.
 *   Their order must be: first 'expression', then 'statement'.
 */



/* Destructuring1 XPECT astOrder ---
	0: function Destructuring1() { let [x\,y] = [1\, 2]; },
	10: y, 11: y,
	1: { let [x\,y] = [1\, 2]; },
	2: let [x\,y] = [1\, 2];,
	3: [x\,y] = [1\, 2],
	4: [1\, 2],
	5: 1,
	6: 2,
	7: [x\,y],
	8: x,
	9: x
--- */
function Destructuring1() {
	let [x,y] = [1, 2];
}


/* Destructuring3 XPECT astOrder ---
	0: function Destructuring3() { let {x\,y} = {x:1\, y:2}; },
	10: y,
	11: y,
	1: { let {x\,y} = {x:1\, y:2}; },
	2: let {x\,y} = {x:1\, y:2};,
	3: {x\,y} = {x:1\, y:2},
	4: {x:1\, y:2},
	5: 1,
	6: 2,
	7: {x\,y},
	8: x,
	9: x
--- */
function Destructuring3() {
	let {x,y} = {x:1, y:2};
}


/* Destructuring5 XPECT astOrder ---
	0: function Destructuring5() { let {x\,y} = {x:1\, y:[2]}; },
	10: x, 11: y,
	12: y, 1: { let {x\,y} = {x:1\, y:[2]}; },
	2: let {x\,y} = {x:1\, y:[2]};,
	3: {x\,y} = {x:1\, y:[2]},
	4: {x:1\, y:[2]},
	5: 1,
	6: [2],
	7: 2,
	8: {x\,y},
	9: x
--- */
function Destructuring5() {
	let {x,y} = {x:1, y:[2]};
}


/* Destructuring6 XPECT astOrder ---
	0: function Destructuring6() { let [x\,y] = [1\, {y:2}]; },
	10: x,
	11: y,
	12: y,
	1: { let [x\,y] = [1\, {y:2}]; },
	2: let [x\,y] = [1\, {y:2}];,
	3: [x\,y] = [1\, {y:2}],
	4: [1\, {y:2}],
	5: 1,
	6: {y:2},
	7: 2,
	8: [x\,y],
	9: x
--- */
function Destructuring6() {
	let [x,y] = [1, {y:2}];
}


/* Destructuring7 XPECT astOrder ---
	0: function Destructuring7() { var [ {x} = {y : 1} ] = null; },
	10: {y : 1},
	11: 1, 1: { var [ {x} = {y : 1} ] = null; },
	2: var [ {x} = {y : 1} ] = null;,
	3: [ {x} = {y : 1} ] = null,
	4: null,
	5: [ {x} = {y : 1} ],
	6: {x} = {y : 1},
	7: {x},
	8: x,
	9: x
--- */
function Destructuring7() {
	var [ {x} = {y : 1} ] = null;
}


/* Destructuring8 XPECT astOrder ---
	0: function Destructuring8(q) { var {prop2: x = ({q} = {q: ""})} = {prop2: {x: 5}}; },
	10: ({q} = {q: ""}),
	11: {q} = {q: ""},
	12: {q},
	13: q, 14: {q: ""}, 15: "",
	1: { var {prop2: x = ({q} = {q: ""})} = {prop2: {x: 5}}; },
	2: var {prop2: x = ({q} = {q: ""})} = {prop2: {x: 5}};,
	3: {prop2: x = ({q} = {q: ""})} = {prop2: {x: 5}},
	4: {prop2: {x: 5}},
	5: {x: 5},
	6: 5,
	7: {prop2: x = ({q} = {q: ""})},
	8: x = ({q} = {q: ""}),
	9: x = ({q} = {q: ""})
--- */
function Destructuring8(q) {
	var {prop2: x = ({q} = {q: ""})} = {prop2: {x: 5}};
}


/* DestructuringDefault1 XPECT astOrder ---
	0: function DestructuringDefault1() { let {a=0} = {a:1}; },
	1: { let {a=0} = {a:1}; },
	2: let {a=0} = {a:1};,
	3: {a=0} = {a:1},
	4: {a:1},
	5: 1, 6: {a=0},
	7: a=0,
	8: a=0, 9: 0
--- */
function DestructuringDefault1() {
	let {a=0} = {a:1};
}


/* DestructuringDefault2 XPECT astOrder ---
	0: function DestructuringDefault2() { let [x=0] = [1]; },
	1: { let [x=0] = [1]; },
	2: let [x=0] = [1];,
	3: [x=0] = [1],
	4: [1], 5: 1,
	6: [x=0],
	7: x=0,
	8: x=0,
	9: 0
--- */
function DestructuringDefault2() {
	let [x=0] = [1];
}


/* DestructuringComputedPropName1 XPECT astOrder ---
	0: function DestructuringComputedPropName1() { ({ ["a"]: 0 }); },
	1: { ({ ["a"]: 0 }); },
	2: ({ ["a"]: 0 });,
	3: ({ ["a"]: 0 }),
	4: { ["a"]: 0 },
	5: "a",
	6: 0
--- */
function DestructuringComputedPropName1() {
	({ ["a"]: 0 });
}


/* DestructuringAssignmentPadding1 XPECT astOrder ---
	0: function DestructuringAssignmentPadding1(x) { [\,\,x] = [1\,2\,3]; }\n,
	1: { [\,\,x] = [1\,2\,3]; },
	2: [\,\,x] = [1\,2\,3];,
	3: [\,\,x] = [1\,2\,3],
	4: [\,\,x],
	5: x,
	6: [1\,2\,3],
	7: 1,
	8: 2,
	9: 3
--- */
function DestructuringAssignmentPadding1(x) {
	[,,x] = [1,2,3];
}
