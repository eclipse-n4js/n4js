/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */


/* XPECT_SETUP org.eclipse.n4js.flowgraphs.tests.N4JSFlowgraphTest END_SETUP */


/**
 * Note:
 *
 * Tests in this file check the different kinds of control flow containers only.
 */


// Script XPECT succs at '"Script1"' --> "Script2"
// Script XPECT succs at '"Script2"' --> "Script3"
// Script XPECT succs at '"Script3"' --> "Script4"
// Script XPECT path from '"Script2"' notTo "FB1"
"Script1";
"Script2";


function FunctionBody() {
	// FunctionBody XPECT succs at '"FB1"' --> "FB2"
	"FB1";
	"FB2";
}

"Script3";

class C {
	// XPECT warnings --> "Method names should start with lower case letter." at "MethodBody"
	MethodBody() {
		// MethodBody XPECT succs at '"MB1"' --> "MB2"
		"MB1";
		"MB2";
	}
}

"Script4";

// DefaultParameter XPECT succs at '"DP1"' --> "DP2"
function DefaultParameter(a = "DP1" + "DP2") {
}



// FunctionExpression XPECT succs at '"FEX1"' --> "FEX2"
// FunctionExpression XPECT path from '"FEX_T1"' notTo "FEX1"
function FunctionExpression() {
	"FEX_T1"
	return (function() {
		"FEX1";
		"FEX2";
	});
}


// FieldInitializer1 XPECT succs at '"FI1"' --> "FI2"
// FieldInitializer1 XPECT succs at '"FI2"' --> "FI1" + "FI2"
class FieldInitializer1 {
    field = "FI1" + "FI2";
}


class AnnotationParameter1 {
	@Parameter(1)
    field;
}


class AnnotationConfigurable1 {
	@Configurable(false)
    field;
}


class ComputedPropertyName1 {
	// ComputedPropertyName1 XPECT succs at '"CPN1"' --> "CPN2"
	// ComputedPropertyName1 XPECT succs at '"CPN2"' --> "CPN1" + "CPN2"
	// ComputedPropertyName1 XPECT warnings --> "Field names should start with lower case letter." at "["CPN1" + "CPN2"]"
	public ["CPN1" + "CPN2"];
}


// ExportedVariableStatement XPECT succs at '"ExportedVariableStatement1"' --> expVS1
// ExportedVariableStatement XPECT succs at 'expVS1' --> public var expVS1;
// ExportedVariableStatement XPECT succs at 'public var expVS1;' --> "ExportedVariableStatement2"
"ExportedVariableStatement1";
export public var expVS1;
"ExportedVariableStatement2";



// ThrowInScript XPECT succs at '1' --> 2
// ThrowInScript XPECT succs at '2' --> throw 2;
1;
throw 2;
