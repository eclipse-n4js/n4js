/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */


/* XPECT_SETUP org.eclipse.n4js.flowgraphs.tests.N4JSFlowgraphTest END_SETUP */



function Block1() {
	// Block1 XPECT succs at '"start"' --> 1
	"start";
	// Block1 XPECT succs at '1' --> "end"
	{
		1;
	}
	"end";
}

function Block2() {
	// Block2 XPECT succs at '"start"' --> 1
	"start";
	// Block2 XPECT succs at '1' --> 2
	// Block2 XPECT succs at '2' --> "end"
	{
		1;
		{
			2;
		}
	}
	"end";
}

function Block3() {
	// Block3 XPECT succs at '"start"' --> 1
	"start";
	// Block3 XPECT succs at '1' --> 2
	// Block3 XPECT succs at '2' --> "end"
	{
		{
			1;
		}
		2;
	}
	"end";
}

function DoStatement1() {
	// DoStatement1 XPECT succs at '"start"' --> 1
	"start";
	do {
		// DoStatement1 XPECT succs at '1' --> 2
		1;
		// DoStatement1 XPECT succs at '2' --> 1, "end"
	} while (2);
	"end";
}

function DoStatementBreak1() {
	// DoStatementBreak1 XPECT succs at '"start"' --> 1
	"start";
	do {
		// DoStatementBreak1 XPECT succs at '1' --> break;
		1;
		// DoStatementBreak1 XPECT succs at 'break;' --> "end"
		break;
		// DoStatementBreak1 XPECT warnings --> "Dead code. No execution possible after break." at "2;"
		// DoStatementBreak1 XPECT succs at '2' --> 3
		2;
		// DoStatementBreak1 XPECT succs at '3' --> 1, "end"
	} while (3);
	"end";
}

function DoStatementContinue1() {
	// DoStatementContinue1 XPECT succs at '"start"' --> 1
	"start";
	do {
		// DoStatementContinue1 XPECT succs at '1' --> continue;
		1;
		// DoStatementContinue1 XPECT succs at 'continue;' --> 3
		continue;
		// DoStatementContinue1 XPECT warnings --> "Dead code. No execution possible after continue." at "2;"
		// DoStatementContinue1 XPECT succs at '2' --> 3
		2;
		// DoStatementContinue1 XPECT succs at '3' --> 1, "end"
	} while (3);
	"end";
}

function ForStatement1() {
	// EmptyStatement XPECT succs at '"start"' --> "end"
	"start";
	// EmptyStatement XPECT succs at ';' --> "end"
	for (;;);
	"end";
}

function IfStatement1() {
	// IfStatement1 XPECT succs at '"start"' --> 1
	"start";
	// IfStatement1 XPECT succs at '1' --> 2,3
	// IfStatement1 XPECT succs at '2' --> "end"
	// IfStatement1 XPECT succs at '3' --> "end"
	if (1) 2; else 3;
	"end";
}

function IfStatement2() {
	// IfStatement2 XPECT succs at '"start"' --> 1
	"start";
	// IfStatement2 XPECT succs at '1' --> 2,"end"
	// IfStatement2 XPECT succs at '2' --> "end"
	if (1) 2;
	"end";
}



function SwitchCase1() {
	// IfStatement1 XPECT succs at '"start"' --> 1
	"start";
	// SwitchCase1 XPECT succs at '1' --> 2 , "end"
	switch (1) {
		// SwitchCase1 XPECT succs at '2' --> 3
		// SwitchCase1 XPECT succs at '3' --> "end"
		case 2: 3;
	}
	"end";
}

function SwitchCaseFallThrough() {
	// IfStatement1 XPECT succs at '"start"' --> 1
	"start";
	// SwitchCaseFallThrough XPECT succs at '1' --> 2, 4, "end"
	switch (1) {
		// SwitchCaseFallThrough XPECT succs at '2' --> 3
		// SwitchCaseFallThrough XPECT succs at '3' --> 4
		case 2: 3;
		// SwitchCaseFallThrough XPECT succs at '4' --> 5
		// SwitchCaseFallThrough XPECT succs at '5' --> "end"
		case 4: 5;
	}
	"end";
}

function SwitchCaseBreak1() {
	// IfStatement1 XPECT succs at '"start"' --> 1
	"start";
	// SwitchCaseBreak1 XPECT succs at '1' --> 2, 4, "end"
	switch (1) {
		// SwitchCaseBreak1 XPECT succs at '2' --> 3
		// SwitchCaseBreak1 XPECT succs at '3' --> break;
		// SwitchCaseBreak1 XPECT succs at 'break;' --> "end"
		case 2: 3; break;
		// SwitchCaseBreak1 XPECT succs at '3' --> 5
		// SwitchCaseBreak1 XPECT succs at '5' --> break;
		// SwitchCaseBreak1 XPECT succs at 'break;' --> "end"
		case 4: 5; break;
	}
	"end";
}

function SwitchCaseDefault1() {
	// IfStatement1 XPECT succs at '"start"' --> 1
	"start";
	// SwitchCaseDefault1 XPECT succs at '1' --> 2, 5
	switch (1) {
		// SwitchCaseDefault1 XPECT succs at '2' --> 3
		// SwitchCaseDefault1 XPECT succs at '3' --> 5
		case 2: 3;
		// SwitchCaseDefault1 XPECT succs at '5' --> "end"
		default: 5;
	}
	"end";
}

function SwitchCaseDefault2() {
	// IfStatement1 XPECT succs at '"start"' --> 1
	"start";
	// SwitchCaseDefault2 XPECT succs at '1' --> 2, 5
	switch (1) {
		// SwitchCaseDefault2 XPECT succs at '2' --> 5
		// SwitchCaseDefault2 XPECT succs at '5' --> break;
		// SwitchCaseDefault2 XPECT succs at 'break;' --> "end"
		case 2: 5; break;
		// SwitchCaseDefault2 XPECT succs at '5' --> "end"
		default: 5;
	}
	"end";
}

function WhileStatement1() {
	// WhileStatement1 XPECT succs at '"start"' --> 1
	"start";
	// WhileStatement1 XPECT succs at '1' --> 2, "end"
	while (1) {
		// WhileStatement1 XPECT succs at '2' --> 1
		2;
	}
	"end";
}

function WhileStatementBreak1() {
	// WhileStatementBreak1 XPECT succs at '"start"' --> 1
	"start";
	// WhileStatementBreak1 XPECT succs at '1' --> 2, "end"
	while (1) {
		// WhileStatementBreak1 XPECT succs at '2' --> break;
		2;
		// WhileStatementBreak1 XPECT succs at 'break;' --> "end"
		break;
		// WhileStatementBreak1 XPECT warnings --> "Dead code. No execution possible after break." at "3;"
		// WhileStatementBreak1 XPECT succs at '3' --> 1
		3;
	}
	"end";
}

function WhileStatementContinue1() {
	// WhileStatementContinue1 XPECT succs at '"start"' --> 1
	"start";
	// WhileStatementContinue1 XPECT succs at '1' --> 2, "end"
	while (1) {
		// WhileStatementContinue1 XPECT succs at '2' --> continue;
		2;
		// WhileStatementContinue1 XPECT succs at 'continue;' --> 1
		continue;
		// WhileStatementContinue1 XPECT warnings --> "Dead code. No execution possible after continue." at "3;"
		// WhileStatementContinue1 XPECT succs at '3' --> 1
		3;
	}
	"end";
}

function EmptyStatement() {
	// EmptyStatement XPECT succs at '"start"' --> "end"
	"start";
	// EmptyStatement XPECT succs at ';' --> "end"
	;
	"end";
}


/*
AnnotationList
BreakStatement
ContinueStatement
ForStatement
ReturnStatement
ThrowStatement
TryStatement
VariableDeclaration
VariableStatement
 */
