/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */


/* XPECT_SETUP org.eclipse.n4js.flowgraphs.tests.N4JSFlowgraphTest END_SETUP */



function Block1() {
	/* Block1 XPECT allEdges ---
		"start" --> 1,
		1 --> "end"
	--- */
	// Block1 XPECT allPaths --> "start" -> 1 -> "end"
	// Block1 XPECT transitiveSuccs from '"start"' to '"end"' -->
	// Block1 XPECT succs at '"start"' --> 1
	"start";
	// Block1 XPECT succs at '1' --> "end"
	{
		1;
	}
	"end";
}

function Block2() {
	/* Block2 XPECT allEdges ---
		"start" --> 1,
		1 --> 2,
		2 --> "end"
	--- */
	// Block2 XPECT allPaths --> "start" -> 1 -> 2 -> "end"
	// Block2 XPECT succs at '"start"' --> 1
	"start";
	// Block2 XPECT succs at '1' --> 2
	// Block2 XPECT succs at '2' --> "end"
	{
		1;
		{
			2;
		}
	}
	"end";
}

function Block3() {
	/* Block3 XPECT allEdges ---
		"start" --> 1,
		1 --> 2,
		2 --> "end"
	--- */
	// Block3 XPECT allPaths --> "start" -> 1 -> 2 -> "end"
	// Block3 XPECT succs at '"start"' --> 1
	"start";
	// Block3 XPECT succs at '1' --> 2
	// Block3 XPECT succs at '2' --> "end"
	{
		{
			1;
		}
		2;
	}
	"end";
}

function DoStatement1() {
	/* DoStatement1 XPECT allEdges ---
		"start" --> 1,
		1 --> 2,
		2 -Repeat-> 1,
		2 --> "end"
	--- */
	/* DoStatement1 XPECT allPaths ---
	"start" -> 1 -> 2 -> "end",
	"start" -> 1 -> 2 -> 1 -> 2 -> "end",
	"start" -> 1 -> 2 -> 1 -> 2 -> 1 -> 2 -> "end"
	--- */
	// DoStatement1 XPECT succs at '"start"' --> 1
	"start";
	do {
		// DoStatement1 XPECT succs at '1' --> 2
		1;
		// DoStatement1 XPECT succs at '2' --> 1, "end"
	} while (2);
	"end";
}

function DoStatementBreak1() {
	/* DoStatementBreak1 XPECT allEdges ---
		"start" --> 1,
		1 --> break;,
		2 --> 3,
		3 -Repeat-> 1,
		3 --> "end",
		break; -Break-> "end"
	--- */
	// DoStatementBreak1 XPECT allPaths --> "start" -> 1 -> break; -> "end"
	// DoStatementBreak1 XPECT succs at '"start"' --> 1
	"start";
	do {
		// DoStatementBreak1 XPECT succs at '1' --> break;
		1;
		// DoStatementBreak1 XPECT succs type 'Break' at 'break;' --> "end"
		break;
		// DoStatementBreak1 XPECT warnings --> "Dead code. No execution possible after break." at "2;"
		// DoStatementBreak1 XPECT succs at '2' --> 3
		2;
		// DoStatementBreak1 XPECT succs at '3' --> 1, "end"
	} while (3);
	"end";
}

function DoStatementContinue1() {
	/* DoStatementContinue1 XPECT allEdges ---
		"start" --> 1,
		1 --> continue;,
		continue; -Continue-> 3,
		2 --> 3,
		3 -Repeat-> 1,
		3 --> "end"
	--- */
	/* DoStatementContinue1 XPECT allPaths ---
	"start" -> 1 -> continue; -> 3 -> "end",
	"start" -> 1 -> continue; -> 3 -> 1 -> continue; -> 3 -> "end",
	"start" -> 1 -> continue; -> 3 -> 1 -> continue; -> 3 -> 1 -> continue; -> 3 -> "end"
	--- */
	// DoStatementContinue1 XPECT succs at '"start"' --> 1
	"start";
	do {
		// DoStatementContinue1 XPECT succs at '1' --> continue;
		1;
		// DoStatementContinue1 XPECT succs type 'Continue' at 'continue;' --> 3
		continue;
		// DoStatementContinue1 XPECT warnings --> "Dead code. No execution possible after continue." at "2;"
		// DoStatementContinue1 XPECT succs at '2' --> 3
		2;
		// DoStatementContinue1 XPECT succs at '3' --> 1, "end"
	} while (3);
	"end";
}

function ForStatement1() {
	/* ForStatement1 XPECT allEdges ---
		"start" --> ;,
		; -Repeat-> ;
	--- */
	// ForStatement1 XPECT allPaths --> "start" -> ; -> ; -> ;
	// ForStatement1 XPECT succs at '"start"' --> ;
	"start";
	// ForStatement1 XPECT succs at ' ;' --> ;
	for (;;) ;
	"end";
}

function ForStatement2() {
	/* ForStatement2 XPECT allEdges ---
		"start" --> 5,
		5 -Repeat-> 5
	--- */
	// ForStatement2 XPECT allPaths --> "start" -> 5 -> 5 -> 5
	// ForStatement2 XPECT succs at '"start"' --> 5
	"start";
	// ForStatement2 XPECT succs at '5' --> 5
	for (;;) 5;
	"end";
}

function ForStatement3() {
	/* ForStatement3 XPECT allEdges ---
		"start" --> 1,
		1 --> 2,
		2 -Repeat-> 5,
		5 --> 3,
		3 --> 2,
		2 --> "end"
	--- */
	/* ForStatement3 XPECT allPaths ---
	"start" -> 1 -> 2 -> "end",
	"start" -> 1 -> 2 -> 5 -> 3 -> 2 -> "end",
	"start" -> 1 -> 2 -> 5 -> 3 -> 2 -> 5 -> 3 -> 2 -> "end"
	--- */
	// ForStatement3 XPECT succs at '"start"' --> 1
	"start";
	// ForStatement3 XPECT succs at '1' --> 2
	// ForStatement3 XPECT succs at '2' --> 5, "end"
	// ForStatement3 XPECT succs type 'Repeat' at '2' --> 5
	// ForStatement3 XPECT succs at '5' --> 3
	// ForStatement3 XPECT succs at '3' --> 2
	for (1;2;3) 5;
	"end";
}

function ForStatement4() {
	/* ForStatement4 XPECT allEdges ---
		"start" --> 1,
		1 --> 5,
		5 --> 3,
		3 -Repeat-> 5
	--- */
	// ForStatement4 XPECT allPaths --> "start" -> 1 -> 5 -> 3 -> 5 -> 3 -> 5 -> 3
	// ForStatement4 XPECT succs at '"start"' --> 1
	"start";
	// ForStatement4 XPECT succs at '1' --> 5
	// ForStatement4 XPECT succs at '5' --> 3
	// ForStatement4 XPECT succs type 'Repeat' at '3' --> 5
	for (1;;3) 5;
	"end";
}

function ForStatement5() {
	/* ForStatement5 XPECT allEdges ---
		"start" --> 1,
		1 --> 2,
		2 -Repeat-> 5,
		5 --> 2,
		2 --> "end"
	--- */
	/* ForStatement5 XPECT allPaths ---
	"start" -> 1 -> 2 -> "end",
	"start" -> 1 -> 2 -> 5 -> 2 -> "end",
	"start" -> 1 -> 2 -> 5 -> 2 -> 5 -> 2 -> "end"
	--- */
	// ForStatement5 XPECT succs at '"start"' --> 1
	"start";
	// ForStatement5 XPECT succs at '1' --> 2
	// ForStatement5 XPECT succs at '2' --> 5, "end"
	// ForStatement5 XPECT succs type 'Repeat' at '2' --> 5
	// ForStatement5 XPECT succs at '5' --> 2
	for (1;2;) 5;
	"end";
}

function ForStatement6() {
	/* ForStatement6 XPECT allEdges ---
		"start" --> 2,
		2 -Repeat-> 5,
		5 --> 3,
		3 --> 2,
		2 --> "end"
	--- */
	/* ForStatement6 XPECT allPaths ---
	"start" -> 2 -> "end",
	"start" -> 2 -> 5 -> 3 -> 2 -> "end",
	"start" -> 2 -> 5 -> 3 -> 2 -> 5 -> 3 -> 2 -> "end"
	--- */
	// ForStatement6 XPECT succs at '"start"' --> 2
	"start";
	// ForStatement6 XPECT succs at '2' --> 5, "end"
	// ForStatement6 XPECT succs type 'Repeat' at '2' --> 5
	// ForStatement6 XPECT succs at '5' --> 3
	// ForStatement6 XPECT succs at '3' --> 2
	for (;2;3) 5;
	"end";
}

function ForStatement7() {
	/* ForStatement7 XPECT allEdges ---
		"start" --> 5,
		5 --> 3,
		3 -Repeat-> 5
	--- */
	// ForStatement7 XPECT allPaths --> "start" -> 5 -> 3 -> 5 -> 3 -> 5 -> 3
	// ForStatement7 XPECT succs at '"start"' --> 5
	"start";
	// ForStatement7 XPECT succs at '5' --> 3
	// ForStatement7 XPECT succs type 'Repeat' at '3' --> 5
	for (;;3) 5;
	"end";
}

function ForStatement8() {
	/* ForStatement8 XPECT allEdges ---
		"start" --> 2,
		2 -Repeat-> 5,
		5 --> 2,
		2 --> "end"
	--- */
	/* ForStatement8 XPECT allPaths ---
	"start" -> 2 -> "end",
	"start" -> 2 -> 5 -> 2 -> "end",
	"start" -> 2 -> 5 -> 2 -> 5 -> 2 -> "end"
	--- */
	// ForStatement8 XPECT succs at '"start"' --> 2
	"start";
	// ForStatement8 XPECT succs at '2' --> 5, "end"
	// ForStatement8 XPECT succs type 'Repeat' at '2' --> 5
	// ForStatement8 XPECT succs at '5' --> 2
	for (;2;) 5;
	"end";
}

function ForStatement9() {
	/* ForStatement9 XPECT allEdges ---
		"start" --> 1,
		1 --> 5,
		5 -Repeat-> 5
	--- */
	// ForStatement9 XPECT allPaths --> "start" -> 1 -> 5 -> 5 -> 5
	// ForStatement9 XPECT succs at '"start"' --> 1
	"start";
	// ForStatement9 XPECT succs at '1' --> 5
	// ForStatement9 XPECT FIXME succs type 'Repeat' at '5' --> 5
	for (1;;) 5;
	"end";
}

function ForStatementVarDecl1() {
	/* ForStatementVarDecl1 XPECT allEdges ---
		"start" --> 0,
		0 --> i=0,
		i=0 --> 2,
		2 -Repeat-> 5,
		5 --> 3,
		3 --> 2,
		2 --> "end"
	--- */
	/* ForStatementVarDecl1 XPECT allPaths ---
	"start" -> 0 -> i=0 -> 2 -> "end",
	"start" -> 0 -> i=0 -> 2 -> 5 -> 3 -> 2 -> "end",
	"start" -> 0 -> i=0 -> 2 -> 5 -> 3 -> 2 -> 5 -> 3 -> 2 -> "end"
	--- */
	// ForStatementVarDecl1 XPECT succs at '"start"' --> 0
	"start";
	// ForStatementVarDecl1 XPECT succs at '0' --> i=0
	// ForStatementVarDecl1 XPECT succs at 'i=0' --> 2
	// ForStatementVarDecl1 XPECT succs at '2' --> 5, "end"
	// ForStatementVarDecl1 XPECT succs type 'Repeat' at '2' --> 5
	// ForStatementVarDecl1 XPECT succs at '5' --> 3
	// ForStatementVarDecl1 XPECT succs at '3' --> 2
	for (var i=0; 2; 3) 5;
	"end";
}

function ForStatementVarDecl2() {
	/* ForStatementVarDecl2 XPECT allEdges ---
		"start" --> 0,
		0 --> i=0,
		i=0 --> 1,
		1 --> j=1,
		j=1 --> 2,
		2 -Repeat-> 5,
		5 --> 3,
		3 --> 2,
		2 --> "end"
	--- */
	/* ForStatementVarDecl2 XPECT allPaths ---
	"start" -> 0 -> i=0 -> 1 -> j=1 -> 2 -> "end",
	"start" -> 0 -> i=0 -> 1 -> j=1 -> 2 -> 5 -> 3 -> 2 -> "end",
	"start" -> 0 -> i=0 -> 1 -> j=1 -> 2 -> 5 -> 3 -> 2 -> 5 -> 3 -> 2 -> "end"
	--- */
	// ForStatementVarDecl2 XPECT succs at '"start"' --> 0
	"start";
	// ForStatementVarDecl2 XPECT succs at '0' --> i=0
	// ForStatementVarDecl2 XPECT succs at 'i=0' --> 1
	// ForStatementVarDecl2 XPECT succs at '1' --> j=1
	// ForStatementVarDecl2 XPECT succs at 'j=1' --> 2
	// ForStatementVarDecl2 XPECT succs at '2' --> 5, "end"
	// ForStatementVarDecl2 XPECT succs type 'Repeat' at '2' --> 5
	// ForStatementVarDecl2 XPECT succs at '5' --> 3
	// ForStatementVarDecl2 XPECT succs at '3' --> 2
	for (var i=0, j=1; 2; 3) 5;
	"end";
}

function ForStatementBreak1() {
	/* ForStatementBreak1 XPECT allEdges ---
		"start" --> 1,
		1 --> 2,
		2 -Repeat-> break;,
		break; -Break-> "end",
		3 --> 2,
		2 --> "end"
	--- */
	/* ForStatementBreak1 XPECT allPaths ---
	"start" -> 1 -> 2 -> "end",
	"start" -> 1 -> 2 -> break; -> "end"
	--- */
	// ForStatementBreak1 XPECT succs at '"start"' --> 1
	"start";
	// ForStatementBreak1 XPECT succs at '1' --> 2
	// ForStatementBreak1 XPECT succs at '2' --> break;, "end"
	// ForStatementBreak1 XPECT succs type 'Repeat' at '2' --> break;
	// ForStatementBreak1 XPECT succs type 'Break' at 'break;' --> "end"
	// ForStatementBreak1 XPECT succs at '3' --> 2
	for (1;2;3) break;
	"end";
}

function ForStatementContinue1() {
	/* ForStatementContinue1 XPECT allEdges ---
		"start" --> 1,
		1 --> 2,
		2 -Repeat-> continue;,
		continue; -Continue-> 3,
		3 --> 2,
		2 --> "end"
	--- */
	/* ForStatementContinue1 XPECT allPaths ---
	"start" -> 1 -> 2 -> "end",
	"start" -> 1 -> 2 -> continue; -> 3 -> 2 -> "end",
	"start" -> 1 -> 2 -> continue; -> 3 -> 2 -> continue; -> 3 -> 2 -> "end"
	--- */
	// ForStatementContinue1 XPECT succs at '"start"' --> 1
	"start";
	// ForStatementContinue1 XPECT succs at '1' --> 2
	// ForStatementContinue1 XPECT succs at '2' --> continue;, "end"
	// ForStatementContinue1 XPECT succs type 'Repeat' at '2' --> continue;
	// ForStatementContinue1 XPECT succs type 'Continue' at 'continue;' --> 3
	// ForStatementContinue1 XPECT succs at '3' --> 2
	for (1;2;3) continue;
	"end";
}

function ForStatementContinue2() {
	/* ForStatementContinue2 XPECT allEdges ---
		"start" --> 2,
		2 -Repeat-> continue;,
		continue; -Continue-> 3,
		3 --> 2,
		2 --> "end"
	--- */
	/* ForStatementContinue2 XPECT allPaths ---
	"start" -> 2 -> "end",
	"start" -> 2 -> continue; -> 3 -> 2 -> "end",
	"start" -> 2 -> continue; -> 3 -> 2 -> continue; -> 3 -> 2 -> "end"
	--- */
	// ForStatementContinue2 XPECT succs at '"start"' --> 2
	"start";
	// ForStatementContinue2 XPECT succs at '2' --> continue;, "end"
	// ForStatementContinue2 XPECT succs type 'Repeat' at '2' --> continue;
	// ForStatementContinue2 XPECT succs type 'Continue' at 'continue;' --> 3
	// ForStatementContinue2 XPECT succs at '3' --> 2
	for (;2;3) continue;
	"end";
}

function ForStatementContinue3() {
	/* ForStatementContinue3 XPECT allEdges ---
		"start" --> 2,
		2 -Repeat-> continue;,
		continue; -Continue-> 2,
		2 --> "end"
	--- */
	/* ForStatementContinue3 XPECT allPaths ---
	"start" -> 2 -> "end",
	"start" -> 2 -> continue; -> 2 -> "end",
	"start" -> 2 -> continue; -> 2 -> continue; -> 2 -> "end"
	--- */
	// ForStatementContinue3 XPECT succs at '"start"' --> 2
	"start";
	// ForStatementContinue3 XPECT succs at '2' --> continue;, "end"
	// ForStatementContinue3 XPECT succs type 'Repeat' at '2' --> continue;
	// ForStatementContinue3 XPECT succs type 'Continue' at 'continue;' --> 2
	// ForStatementContinue3 XPECT succs at 'continue;' --> 2
	for (;2;) continue;
	"end";
}



function IfStatement1() {
	/* IfStatement1 XPECT allEdges ---
		"start" --> 1,
		1 --> 2,
		1 --> 3,
		2 --> "end",
		3 --> "end"
	--- */
	/* IfStatement1 XPECT allPaths ---
	"start" -> 1 -> 2 -> "end",
	"start" -> 1 -> 3 -> "end"
	--- */
	// IfStatement1 XPECT succs at '"start"' --> 1
	"start";
	// IfStatement1 XPECT succs at '1' --> 2,3
	// IfStatement1 XPECT succs at '2' --> "end"
	// IfStatement1 XPECT succs at '3' --> "end"
	if (1) 2; else 3;
	"end";
}

function IfStatement2() {
	/* IfStatement2 XPECT allEdges ---
		"start" --> 1,
		1 --> 2,
		2 --> "end",
		1 --> "end"
	--- */
	/* IfStatement2 XPECT allPaths ---
	"start" -> 1 -> 2 -> "end",
	"start" -> 1 -> "end"
	--- */
	// IfStatement2 XPECT succs at '"start"' --> 1
	"start";
	// IfStatement2 XPECT succs at '1' --> 2,"end"
	// IfStatement2 XPECT succs at '2' --> "end"
	if (1) 2;
	"end";
}



function SwitchCase1() {
	/* SwitchCase1 XPECT allEdges ---
		"start" --> 1,
		1 --> 2,
		2 --> 3,
		1 --> "end",
		3 --> "end"
	--- */
	/* SwitchCase1 XPECT allPaths ---
	"start" -> 1 -> 2 -> 3 -> "end",
	"start" -> 1 -> "end"
	---	*/
	// SwitchCase1 XPECT succs at '"start"' --> 1
	"start";
	// SwitchCase1 XPECT succs at '1' --> 2 , "end"
	switch (1) {
		// SwitchCase1 XPECT succs at '2' --> 3
		// SwitchCase1 XPECT succs at '3' --> "end"
		case 2: 3;
	}
	"end";
}

function SwitchCaseFallThrough() {
	/* SwitchCaseFallThrough XPECT allEdges ---
		"start" --> 1,
		1 --> 2,
		1 --> 4,
		1 --> "end",
		2 --> 3,
		3 --> 4,
		4 --> 5,
		5 --> "end"
	--- */
	/* SwitchCaseFallThrough XPECT allPaths ---
	"start" -> 1 -> 2 -> 3 -> 4 -> 5 -> "end",
	"start" -> 1 -> 4 -> 5 -> "end",
	"start" -> 1 -> "end"
	--- */
	// SwitchCaseFallThrough XPECT succs at '"start"' --> 1
	"start";
	// SwitchCaseFallThrough XPECT succs at '1' --> 2, 4, "end"
	switch (1) {
		// SwitchCaseFallThrough XPECT succs at '2' --> 3
		// SwitchCaseFallThrough XPECT succs at '3' --> 4
		case 2: 3;
		// SwitchCaseFallThrough XPECT succs at '4' --> 5
		// SwitchCaseFallThrough XPECT succs at '5' --> "end"
		case 4: 5;
	}
	"end";
}

function SwitchCaseBreak1() {
	/* SwitchCaseBreak1 XPECT allEdges ---
		"start" --> 1,
		1 --> 2,
		1 --> 4,
		1 --> "end",
		2 --> 3,
		3 --> break;,
		break; -Break-> "end",
		4 --> 5,
		5 --> break;,
		break; -Break-> "end"
	--- */
	/* SwitchCaseBreak1 XPECT allPaths ---
	"start" -> 1 -> 2 -> 3 -> break; -> "end",
	"start" -> 1 -> 4 -> 5 -> break; -> "end",
	"start" -> 1 -> "end"
	--- */
	// SwitchCaseBreak1 XPECT succs at '"start"' --> 1
	"start";
	// SwitchCaseBreak1 XPECT succs at '1' --> 2, 4, "end"
	switch (1) {
		// SwitchCaseBreak1 XPECT succs at '2' --> 3
		// SwitchCaseBreak1 XPECT succs at '3' --> break;
		// SwitchCaseBreak1 XPECT succs type 'Break' at 'break;' --> "end"
		case 2: 3; break;
		// SwitchCaseBreak1 XPECT succs at '3' --> 5
		// SwitchCaseBreak1 XPECT succs at '5' --> break;
		// SwitchCaseBreak1 XPECT succs type 'Break' at 'break;' --> "end"
		case 4: 5; break;
	}
	"end";
}

function SwitchCaseDefault1() {
	/* SwitchCaseDefault1 XPECT allEdges ---
		"start" --> 1,
		1 --> 2,
		1 --> 5,
		2 --> 3,
		3 --> 5,
		5 --> "end"
	--- */
	/* SwitchCaseDefault1 XPECT allPaths ---
	"start" -> 1 -> 2 -> 3 -> 5 -> "end",
	"start" -> 1 -> 5 -> "end"
	--- */
	// SwitchCaseDefault1 XPECT succs at '"start"' --> 1
	"start";
	// SwitchCaseDefault1 XPECT succs at '1' --> 2, 5
	switch (1) {
		// SwitchCaseDefault1 XPECT succs at '2' --> 3
		// SwitchCaseDefault1 XPECT succs at '3' --> 5
		case 2: 3;
		// SwitchCaseDefault1 XPECT succs at '5' --> "end"
		default: 5;
	}
	"end";
}

function SwitchCaseDefault2() {
	/* SwitchCaseDefault2 XPECT allEdges ---
		"start" --> 1,
		1 --> 2,
		1 --> 5,
		2 --> 3,
		3 --> break;,
		break; -Break-> "end",
		5 --> "end"
	--- */
	/* SwitchCaseDefault2 XPECT allPaths ---
	"start" -> 1 -> 2 -> 3 -> break; -> "end",
	"start" -> 1 -> 5 -> "end"
	--- */
	// SwitchCaseDefault2 XPECT succs at '"start"' --> 1
	"start";
	// SwitchCaseDefault2 XPECT succs at '1' --> 2, 5
	switch (1) {
		// SwitchCaseDefault2 XPECT succs at '2' --> 3
		// SwitchCaseDefault2 XPECT succs at '3' --> break;
		// SwitchCaseDefault2 XPECT succs type 'Break' at 'break;' --> "end"
		case 2: 3; break;
		// SwitchCaseDefault2 XPECT succs at '5' --> "end"
		default: 5;
	}
	"end";
}

function WhileStatement1() {
	/* WhileStatement1 XPECT allEdges ---
		"start" --> 1,
		1 -Repeat-> 2,
		2 --> 1,
		1 --> "end"
	--- */
	/* WhileStatement1 XPECT allPaths ---
	"start" -> 1 -> "end",
	"start" -> 1 -> 2 -> 1 -> "end",
	"start" -> 1 -> 2 -> 1 -> 2 -> 1 -> "end"
	--- */
	// WhileStatement1 XPECT succs at '"start"' --> 1
	"start";
	// WhileStatement1 XPECT succs at '1' --> 2, "end"
	// WhileStatement1 XPECT succs type 'Repeat' at '1' --> 2
	while (1) {
		// WhileStatement1 XPECT succs at '2' --> 1
		2;
	}
	"end";
}

function WhileStatementBreak1() {
	/* WhileStatementBreak1 XPECT allEdges ---
		"start" --> 1,
		1 -Repeat-> 2,
		2 --> break;,
		break; -Break-> "end",
		3 --> 1,
		1 --> "end"
	--- */
	/* WhileStatementBreak1 XPECT allPaths ---
	"start" -> 1 -> "end",
	"start" -> 1 -> 2 -> break; -> "end"
	--- */
	// WhileStatementBreak1 XPECT succs at '"start"' --> 1
	"start";
	// WhileStatementBreak1 XPECT succs at '1' --> 2, "end"
	// WhileStatementBreak1 XPECT succs type 'Repeat' at '1' --> 2
	while (1) {
		// WhileStatementBreak1 XPECT succs at '2' --> break;
		2;
		// WhileStatementBreak1 XPECT succs type 'Break' at 'break;' --> "end"
		break;
		// WhileStatementBreak1 XPECT warnings --> "Dead code. No execution possible after break." at "3;"
		// WhileStatementBreak1 XPECT succs at '3' --> 1
		3;
	}
	"end";
}

function WhileStatementContinue1() {
	/* WhileStatementContinue1 XPECT allEdges ---
		"start" --> 1,
		1 -Repeat-> 2,
		2 --> continue;,
		continue; -Continue-> 1,
		3 --> 1,
		1 --> "end"
	--- */
	/* WhileStatementContinue1 XPECT allPaths ---
	"start" -> 1 -> "end",
	"start" -> 1 -> 2 -> continue; -> 1 -> "end",
	"start" -> 1 -> 2 -> continue; -> 1 -> 2 -> continue; -> 1 -> "end"
	--- */
	// WhileStatementContinue1 XPECT succs at '"start"' --> 1
	"start";
	// WhileStatementContinue1 XPECT succs at '1' --> 2, "end"
	// WhileStatementContinue1 XPECT succs type 'Repeat' at '1' --> 2
	while (1) {
		// WhileStatementContinue1 XPECT succs at '2' --> continue;
		2;
		// WhileStatementContinue1 XPECT succs type 'Continue' at 'continue;' --> 1
		continue;
		// WhileStatementContinue1 XPECT warnings --> "Dead code. No execution possible after continue." at "3;"
		// WhileStatementContinue1 XPECT succs at '3' --> 1
		3;
	}
	"end";
}

function EmptyStatement() {
	/* EmptyStatement XPECT allEdges ---
		"start" --> ;,
		; --> "end"
	--- */
	// EmptyStatement XPECT allPaths --> "start" -> ; -> "end"
	// EmptyStatement XPECT succs at '"start"' --> ;
	"start";
	// EmptyStatement XPECT succs at ';' --> "end"
	;
	"end";
}


/*
AnnotationList
BreakStatement
ContinueStatement
ForStatement
ReturnStatement
ThrowStatement
TryStatement
VariableDeclaration
VariableStatement
 */
