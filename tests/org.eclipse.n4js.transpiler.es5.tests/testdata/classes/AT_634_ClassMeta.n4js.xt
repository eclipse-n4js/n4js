/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.transpiler.es5.xpect.tests.CompileAndExecuteTest END_SETUP */

/* XPECT output ---
<==
stdout:
a.constructor.n4type:
N4Class {
  origin: 'org.eclipse.n4js.transpiler.es5.tests',
  annotations: [],
  name: 'A',
  fqn: 'classes/AT_634_ClassMeta/A',
  n4superType: N4Class {
    origin: 'n4js-runtime',
    annotations: [],
    name: 'N4Object',
    fqn: 'N4BuiltInTypes/N4Object',
    n4superType: undefined,
    allImplementedInterfaces: [],
    ownedMembers: [],
    consumedMembers: []
  },
  allImplementedInterfaces: [],
  ownedMembers: [
    N4DataField {
      origin: undefined,
      annotations: [Array],
      name: 'field1',
      owner: [Circular],
      isStatic: false
    },
    N4DataField {
      origin: undefined,
      annotations: [Array],
      name: 'field2',
      owner: [Circular],
      isStatic: false
    },
    N4DataField {
      origin: undefined,
      annotations: [],
      name: 'field3',
      owner: [Circular],
      isStatic: false
    }
  ],
  consumedMembers: []
}


A.n4type:
N4Class {
  origin: 'org.eclipse.n4js.transpiler.es5.tests',
  annotations: [],
  name: 'A',
  fqn: 'classes/AT_634_ClassMeta/A',
  n4superType: N4Class {
    origin: 'n4js-runtime',
    annotations: [],
    name: 'N4Object',
    fqn: 'N4BuiltInTypes/N4Object',
    n4superType: undefined,
    allImplementedInterfaces: [],
    ownedMembers: [],
    consumedMembers: []
  },
  allImplementedInterfaces: [],
  ownedMembers: [
    N4DataField {
      origin: undefined,
      annotations: [Array],
      name: 'field1',
      owner: [Circular],
      isStatic: false
    },
    N4DataField {
      origin: undefined,
      annotations: [Array],
      name: 'field2',
      owner: [Circular],
      isStatic: false
    },
    N4DataField {
      origin: undefined,
      annotations: [],
      name: 'field3',
      owner: [Circular],
      isStatic: false
    }
  ],
  consumedMembers: []
}
stderr:
==>
--- */
class A {
	@Nfon('read')
	@Observable
	field1 : string;
	@Nfon('write')
	field2 : string;
	field3 : string;
}
var a = new A()
console.log('a.constructor.n4type:')
console.log(a.constructor.n4type)
console.log('\n\nA.n4type:')
console.log(A.n4type)
