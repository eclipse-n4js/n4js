/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.transpiler.es5.xpect.tests.CompileAndExecuteTest END_SETUP */

/* XPECT output ---
[ 1, 2, 3 ]
[ 1, 2, 3 ]
[ 1, 2, 3 ]
[ 1, 2, 3 ]
[ 1, 2, 3 ]
--- */

// IDEBUG-558 wrong transpilation of single-expr arrow-fun with leading comment.

var nums = [1, 2, 3]

var res = nums.filter(n => // comment
	n > 0
)
console.log(res)

res = nums.filter(n => //comment
	//comment
	n > 0
)
console.log(res)

res = nums.filter(n => /*
 *
 * comment2*/
  // single line
    n > 0
)
console.log(res)

res = nums.filter(n =>
    /*comment3*/
    n > 0
)
console.log(res)

res = nums.filter(n => /*comment4*/ n /*comment5*/ > 0
)
console.log(res)



// and now multi-line comments, this time not preceding the lambda-body

res = nums.filter(n => n /*
 *
 * comment2*/
  // single line
// XPECT noerrors -->
    > 0
)

res = nums.filter(n => n
    /*comment3*/
// XPECT noerrors -->
    > 0
)

// XPECT noerrors -->
res = nums.filter(n => n /*comment4*/ /*comment5*/ > 0
)
