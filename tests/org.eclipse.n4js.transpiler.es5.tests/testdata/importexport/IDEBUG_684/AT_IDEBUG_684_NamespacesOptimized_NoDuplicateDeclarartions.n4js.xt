/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.transpiler.es5.xpect.tests.CompileAndExecuteTest

	ResourceSet {
		ThisFile {}
		File "Err.n4js" {}
	}

	END_SETUP
 */

/* XPECT compileResult ---
// Generated by N4JS transpiler; for copyright see original N4JS source file.

import 'n4js-runtime'
import * as N from './Err'

console.log(N.Error);
console.log(N.Error);
var x = N;
console.log(x);
function ASD() {
	N.Error.prototype.constructor.call(this);
}
$makeClass(ASD, N.Error, [], {}, {
	n4type: {
		get: function getN4type___n4() {
			const $sym = Symbol.for('org.eclipse.n4js/reflectionInfo');
			if (this.hasOwnProperty($sym)) {
				return this[$sym];
			}
			const instanceProto = this.prototype, staticProto = this;
			return this[$sym] = new N4Class({
				name: 'ASD',
				origin: 'org.eclipse.n4js.transpiler.es5.tests',
				fqn: 'importexport/IDEBUG_684/AT_IDEBUG_684_NamespacesOptimized_NoDuplicateDeclarartions/ASD',
				n4superType: N.Error.n4type,
				allImplementedInterfaces: [],
				ownedMembers: [],
				consumedMembers: [],
				annotations: []
			});
		}
	}
}, undefined);
--- */

import * as N from "importexport/IDEBUG_684/Err"

console.log(N.Error)//use thing from namespace N
console.log(N.Error)//use again
var x : N = N; //use
console.log(x)//indirect use
class ASD extends N.Error{} //use in super class

//expect only one N dep in compiled code
