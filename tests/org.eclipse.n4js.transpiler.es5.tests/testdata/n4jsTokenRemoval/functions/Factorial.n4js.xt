/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.transpiler.es5.xpect.tests.CompileAndExecuteTest  END_SETUP */

/* XPECT output ---
factors(1): 1
factors(10): 1,2,5,10
factors(100): 1,2,4,5,10,20,25,50,100
=== stderr ===
error when running logFactors(-100) : RangeError: illegal input, should be > 0, but was -100
error when running logFactors(-10) : RangeError: illegal input, should be > 0, but was -10
error when running logFactors(-1) : RangeError: illegal input, should be > 0, but was -1
error when running logFactors(0) : RangeError: illegal input, should be > 0, but was 0
--- */

function factors(num : number):Array<number>{
	if(typeof num !== 'number') throw new TypeError('illegal input, should be typeof number , but was ' + typeof num);
	if(num <= 0) throw new RangeError('illegal input, should be > 0, but was ' + num )

	var n_factors : Array<number> = [];
	var i : number = void 0;

	for (i = 1; i <= Math.floor(Math.sqrt(num)); i += 1){
		if (num % i === 0)  {
			n_factors.push(i);
			if (num / i !== i){
				n_factors.push(num / i);
			}
		}
	}
	return n_factors.sort(function(a, b){return a - b;});
}

var logFactors : {function(number):void} = function (n : number){ //inconsistent type
	console.log('factors(' + n + '): ' + factors(n))
}

function safeEval(dyn : string){
	try{
		eval(dyn)
	} catch(e){
		console.error('error when running ' + dyn + ' : ' + e);
	}
};


//run
(function(){
	safeEval('logFactors(-100)');
	safeEval('logFactors(-10)');
	safeEval('logFactors(-1)');
	safeEval('logFactors(0)');
	safeEval('logFactors(1)');
	safeEval('logFactors(10)');
	safeEval('logFactors(100)');
})();
