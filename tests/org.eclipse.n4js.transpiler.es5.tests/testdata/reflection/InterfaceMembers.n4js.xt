/*
 * Copyright (c) 2020 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.transpiler.es5.xpect.tests.CompileAndExecuteTest END_SETUP  */





function show(label: string, members: Array<? extends N4Member>) {
    console.log(label, members.map((m)=>m.name).join(', '));
}

interface I {
    field;
    fieldD = 1;
    static sField;
    static sFieldD = 2;
    static get sGetterD() {return null;}
    static set sSetterD(a) { }
    get getterD() {return null;}
    set setterD(a) { }
    get getter()
    set setter(a)
    foo()
    fooD() {}
    static sFooD() {}
}

show("members of I:", I.n4type.members(true,true,true));

console.log(I.n4type);


/* XPECT output ---
members of I: getter, setter, foo, field, fieldD, getterD, setterD, fooD, sGetterD, sSetterD, sFooD, sField, sFieldD
N4Interface {
  origin: 'org.eclipse.n4js.transpiler.es5.tests',
  annotations: [],
  name: 'I',
  fqn: 'reflection/InterfaceMembers/I',
  n4superType: undefined,
  allImplementedInterfaces: [],
  ownedMembers: [
    N4Accessor {
      origin: undefined,
      annotations: [],
      name: 'getter',
      owner: [Circular],
      isStatic: false,
      getter: true
    },
    N4Accessor {
      origin: undefined,
      annotations: [],
      name: 'setter',
      owner: [Circular],
      isStatic: false,
      getter: false
    },
    N4Method {
      origin: undefined,
      annotations: [],
      name: 'foo',
      owner: [Circular],
      isStatic: false,
      jsFunction: undefined
    },
    N4DataField {
      origin: undefined,
      annotations: [],
      name: 'field',
      owner: [Circular],
      isStatic: false
    },
    N4DataField {
      origin: undefined,
      annotations: [],
      name: 'fieldD',
      owner: [Circular],
      isStatic: false
    },
    N4Accessor {
      origin: undefined,
      annotations: [],
      name: 'getterD',
      owner: [Circular],
      isStatic: false,
      getter: true
    },
    N4Accessor {
      origin: undefined,
      annotations: [],
      name: 'setterD',
      owner: [Circular],
      isStatic: false,
      getter: false
    },
    N4Method {
      origin: undefined,
      annotations: [],
      name: 'fooD',
      owner: [Circular],
      isStatic: false,
      jsFunction: undefined
    },
    N4Accessor {
      origin: undefined,
      annotations: [],
      name: 'sGetterD',
      owner: [Circular],
      isStatic: true,
      getter: true
    },
    N4Accessor {
      origin: undefined,
      annotations: [],
      name: 'sSetterD',
      owner: [Circular],
      isStatic: true,
      getter: false
    },
    N4Method {
      origin: undefined,
      annotations: [],
      name: 'sFooD',
      owner: [Circular],
      isStatic: true,
      jsFunction: undefined
    },
    N4DataField {
      origin: undefined,
      annotations: [],
      name: 'sField',
      owner: [Circular],
      isStatic: true
    },
    N4DataField {
      origin: undefined,
      annotations: [],
      name: 'sFieldD',
      owner: [Circular],
      isStatic: true
    }
  ],
  consumedMembers: []
}
--- */
