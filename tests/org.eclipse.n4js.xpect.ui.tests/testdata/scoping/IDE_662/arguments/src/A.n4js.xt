/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.xpect.ui.tests.N4JSXpectPluginTest END_SETUP */

// The following are replicated to AT_662_arguments_localvar.n4js.xt (model/scopingSimple/arguments/src)
// but with a local definition of class "ArgumentsType" - so they still should work!
// --- --- --- positive tests --- --- --- \\

function a1(s1 : string, n2 : number) {
	// OK XPECT noerrors
	var l : number = arguments.length
	var ls1 : string = arguments[0] as string;
	var ln1 : number = arguments[1] as number;
	// write access
	arguments[2] = "nummer 3";
	arguments[3] = 4;
}

class A {
	constructor(s1 : string, n2 : number) {
		var l : number = arguments.length
		var ls1 : string = arguments[0] as string;
		var ln1 : number = arguments[1] as number;
		// write access
		arguments[2] = "nummer 3";
		arguments[3] = 4;
	}

	a2(s1 : string, n2 : number) : void {
		var l : number = arguments.length
		var ls1 : string = arguments[0] as string;
		var ln1 : number = arguments[1] as number;
		// write access
		arguments[2] = "nummer 3";
		arguments[3] = 4;
	}

	get name() : string{return "-"}
}

interface R {
    a3(s1 : string, n2 : number) : void {
		var l : number = arguments.length
		var ls1 : string = arguments[0] as string;
		var ln1 : number = arguments[1] as number ;
		// write access
		arguments[2] = "nummer 3";
		arguments[3] = 4;
	}
}

interface R2 {
	b() : void {
		var x = 3;
		arguments.length;
	}
}



export class ArgumentsType {
	public xa : number = 3;
	public yo() : void {}
}


var args : ArgumentsType = new ArgumentsType();
var s : number = args.xa;



export class XAt {
	public xa : number = 3;
	public yo() : void {}
}
