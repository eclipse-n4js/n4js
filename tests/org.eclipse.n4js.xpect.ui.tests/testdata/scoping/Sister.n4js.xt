/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.xpect.ui.tests.N4JSXpectPluginTest

	Workspace {
		JavaProject "N4JSXpectTests" {
			Folder "model" {
				Folder "scoping" {
					ThisFile {}
					File "Brother.n4js" {}
					File "Child.n4js" {}
				}
			}
			File "manifest.n4mf" { from="../../manifest.n4mf" }
		}
	}

   END_SETUP
 */

import { Brother } from "scoping/Brother";
import { Child } from "scoping/Child";

export class Sister {
/* XPECT scope at ': |Brother' ---
Array, Boolean, Brother, Child, Date, Error, EvalError, Function, Generator,
Iterable,
Iterable2, Iterable3, Iterable4, Iterable5, Iterable6, Iterable7, Iterable8, Iterable9,
Iterator, IteratorEntry,
JSON, Math, MigrationContext, MigrationController,
N4Accessor, N4Annotation, N4Class, N4Classifier, N4DataField, N4Element, N4Enum,
N4EnumType, N4Interface, N4Member, N4Method, N4NamedElement, N4Object, N4Provider,
N4StringBasedEnum, N4StringBasedEnumType,
N4Type, N4ApiNotImplementedError,
Number, Object, Promise, RangeError, ReferenceError, RegExp, Sister, String, Symbol, SyntaxError,
TEMP_ReturnTypeOfMatchExec, TypeError, URIError, any, boolean, console, i18nKey, number, int, pathSelector,
scoping.Brother.Brother, scoping.Child.Child, scoping.Sister.Sister, string, symbol, typeName, void
---*/
	project getBrother() : Brother { return null; }
	project getChild() : Child { return null; }
}
var sister : Sister = new Sister();
var brother : Brother = new Brother();
var child : Child = new Child();
/* XPECT scope at getSister ---
__proto__, constructor, getChild, getSister, hasOwnProperty, isPrototypeOf,
propertyIsEnumerable, toLocaleString, toString, valueOf
--- */
/* XPECT scope at getBrother ---
__proto__, constructor, getBrother, getChild, hasOwnProperty, isPrototypeOf,
propertyIsEnumerable, toLocaleString, toString, valueOf
--- */
brother = brother.getSister().getBrother();
sister = brother.getSister();
child = sister.getChild();
var childAge  = child.age;
/* XPECT scope at getBrother ---
__proto__, constructor, getBrother, getChild, hasOwnProperty, isPrototypeOf,
propertyIsEnumerable, toLocaleString, toString, valueOf
--- */
/* XPECT scope at getChild ---
__proto__, constructor, getChild, getSister, hasOwnProperty, isPrototypeOf,
propertyIsEnumerable, toLocaleString, toString, valueOf
--- */
var brotherChildAge = sister.getBrother().getChild().age;
