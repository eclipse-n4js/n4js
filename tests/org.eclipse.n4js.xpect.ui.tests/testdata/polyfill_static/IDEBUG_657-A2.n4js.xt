/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.xpect.ui.tests.N4JSXpectPluginTest

    Workspace {
   	 Project "P_USERTL_B00" {
   	 	Folder "src" {
	   	 	Folder "n4js" {
	   	 		File "A.n4js" { from="IDEBUG_657_wrong_binding_filling-A.n4js.xt"}
	   	 		ThisFile "A2.n4js" { from="IDEBUG_657-A2.n4js.xt" }
	   	 		File "A3.n4js" { from="IDEBUG_657-A3.n4js.xt" }
	   	 	}
	   	 	Folder "n4js-gen" {
	   	 		File "A.n4js" { from="IDEBUG_657_wrong_binding_filled-A.n4js"}
	   	 	}
	   	}
   	 	File "manifest.n4mf" { from="manifest_uses_b00.n4mf" }
   	 }
   }

   END_SETUP
 */

import { Poly } from "A"

export public class PolyB extends Poly {

// The following test()-method is commented out on purpose:
//  The filled-in test-method should still be available to other resources.
//	@Override
//    public boolean test() {
//        return this.value == 0;
//    }

    @Override
    public action(other : Poly ) : void {
        // filled in missing XPECT noerrors --> "Couldn't resolve reference to IdentifiableElement 'test'."
        other.test();

        // filled in missing XPECT noerrors --> "Couldn't resolve reference to IdentifiableElement 'test'."
        this.test();

    }

	@Override
    public action2(other : Poly) : void {
        // inherited filled in missing XPECT noerrors --> "Couldn't resolve reference to IdentifiableElement 'test'."
        other.test();

        // inherited filled in missing XPECT noerrors --> "Couldn't resolve reference to IdentifiableElement 'action'."
        other.action( this );

        // inherited filled in missing XPECT noerrors --> "Couldn't resolve reference to IdentifiableElement 'action2'."
        other.action2( this );

    }

}
