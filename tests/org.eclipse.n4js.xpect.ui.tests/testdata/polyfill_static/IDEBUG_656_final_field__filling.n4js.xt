/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.xpect.ui.tests.N4JSXpectPluginTest

    Workspace {
   	 Project "P_USERTL_B00" {
   	 	Folder "src" {
	   	 	Folder "n4js" {
	   	 		ThisFile "Poly.n4js" { from="IDEBUG_656_final_field__filling.n4js.xt"}
	   	 	}
	   	 	Folder "n4js-gen" {
	   	 		File "Poly.n4js" { from="IDEBUG_656_final_field__filled.n4js"}
	   	 	}
	   	}
   	 	File "manifest.n4mf" { from="manifest_uses_b00.n4mf" }
   	 }
   }

   END_SETUP
 */

@@StaticPolyfillModule

@StaticPolyfill
export public class A extends A {

    @Final b : number;

    @Override
	constructor(@Spec spec : ~i~this) {
        super();

        // XPECT noerrors --> "The final field a is read-only." at "a"
        this.a = 5;    // < - - - - this will fail because A.a is read-only

        // XPECT noerrors --> "The final field a is read-only." at "b"
        this.b = 5;
    }
}

@StaticPolyfill
export public class B extends B {

    @Final c : number;

    @Override
	constructor(@Spec spec : ~i~this) {
		super( spec );

        // Not directly filled type. XPECT errors --> "The final field a is read-only." at "a"
        this.a = 5;    // < - this will fail because A.a is read-only &

        // XPECT noerrors --> "The final field a is read-only." at "b"
        this.b = 5;

        // XPECT noerrors --> "The final field a is read-only." at "c"
        this.c = 5;

	}
}
