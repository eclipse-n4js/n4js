/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.xpect.ui.tests.N4JSXpectPluginTest

    Workspace {
   	 Project "P_USERTL_B00" {
   	 	Folder "src" {
	   	 	Folder "n4js" {
	   	 		ThisFile "Poly.n4js" { from="IDEBUG_657_wrong_binding_filling-A.n4js.xt"}
	   	 		File "A2.n4js" { from="IDEBUG_657-A2.n4js.xt" }
	   	 		File "A3.n4js" { from="IDEBUG_657-A3.n4js.xt" }
	   	 	}
	   	 	Folder "n4js-gen" {
	   	 		File "Poly.n4js" { from="IDEBUG_657_wrong_binding_filled-A.n4js"}
	   	 	}
	   	}
   	 	File "package.json" { from="package_uses_b00.json" }
   	 }
   }

   END_SETUP
 */

@@StaticPolyfillModule
import { PolyB } from "A2"
@StaticPolyfill
export public class Poly extends Poly {

    public test() : boolean {
        return this.value == 0;
    }

    public action(other : Poly) : void {
        // filled in missing XPECT noerrors --> "Couldn't resolve reference to IdentifiableElement 'test'." at "test"
        other.test();
    }

    public action2(other : Poly) : void {
		// This test can't work with xPECT, since it relies on the order of loading and correct provision of correct
		// TModule information in the ResourceDescriptions(aka Index). When this test is run, files get loaded in a order, that
		// full resolution is not possible: This file (Poly.n4js) provides information for the correct computation of
		// the fillings inherited by A2.PolyB. But this only served after a first build. In the first round this information is not available
		// and hence the usage of A2.PolyB in this file is not able to find the fillings in the first pass.
        // inherited filled in missing XPECT ! noerrors --> "Couldn't resolve reference to IdentifiableElement 'test'." at "test"
        other.test();
    }

}

@StaticPolyfill
export public class Buddy extends Buddy {

	public foo(other : Poly) : void{
        // filled in missing XPECT noerrors --> "Couldn't resolve reference to IdentifiableElement 'test'." at "test"
		other.test();
	}

	public bar(other : PolyB) : void{
		// This test can't work with xPECT, since it relies on the order of loading and correct provision of correct
		// TModule information in the ResourceDescriptions(aka Index). When this test is run, files get loaded in a order, that
		// full resolution is not possible: This file (Poly.n4js) provides information for the correct computation of
		// the fillings inherited by A2.PolyB. But this only served after a first build. In the first round this information is not available
		// and hence the usage of A2.PolyB in this file is not able to find the fillings in the first pass.
//		// inherited filled in missing XPECT ! noerrors --> "Couldn't resolve reference to IdentifiableElement 'test'." at "test"
//		other.test();
	}

}
