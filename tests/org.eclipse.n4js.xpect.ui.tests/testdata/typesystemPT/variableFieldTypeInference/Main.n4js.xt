/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.xpect.ui.tests.N4JSXpectPluginTest

	Workspace {
		Project "ProjectMain" {
			Folder "src" {
				Folder "m" {
					ThisFile { }
				}
			}
			File "manifest.n4mf" { from="./manifestMain.n4mf" }
		}
		Project "ProjectImportee" {
			Folder "src" {
				Folder "i" {
					File "Importee.n4js" { }
					File "ImporteeGenerics1.n4js" { }
					File "ImporteeGenerics2.n4js" { }
				}
			}
			File "manifest.n4mf" { from="./manifestImportee.n4mf" }
		}
	}

	END_SETUP
*/



import * as NI from "i/Importee"
import * as NG1 from "i/ImporteeGenerics1"
import * as NG2 from "i/ImporteeGenerics2"



var remote : NI.Remote;



// instance fields:

// XPECT type of 'remote.fieldFN_decl' --> {function(string):number}
var x01 = remote.fieldFN_decl;
// XPECT type of 'remote.fieldFN_inf' --> {function(string):number}
var x02 = remote.fieldFN_inf;

// XPECT type of 'remote.fieldOL_decl' --> ~Object with { s: string; n: number }
var x03 = remote.fieldOL_decl;
// XPECT type of 'remote.fieldOL_inf' --> ~Object with { s: string; n: number }
var x04 = remote.fieldOL_inf;



// static fields:

// XPECT type of 'Remote.staticFieldFN_decl' --> {function(string):number}
var x11 = NI.Remote.staticFieldFN_decl;
// XPECT type of 'Remote.staticFieldFN_inf' --> {function(string):number}
var x12 = NI.Remote.staticFieldFN_inf;

// XPECT type of 'Remote.staticFieldOL_decl' --> ~Object with { s: string; n: number }
var x13 = NI.Remote.staticFieldOL_decl;
// XPECT type of 'Remote.staticFieldOL_inf' --> ~Object with { s: string; n: number }
var x14 = NI.Remote.staticFieldOL_inf;



// exported variables:

// XPECT type of 'remote_variableFN_decl' --> {function(string):number}
var x21 = NI.remote_variableFN_decl;
// XPECT type of 'remote_variableFN_inf' --> {function(string):number}
var x22 = NI.remote_variableFN_inf;

// XPECT type of 'remote_variableOL_decl' --> ~Object with { s: string; n: number }
var x23 = NI.remote_variableOL_decl;
// XPECT type of 'remote_variableOL_inf' --> ~Object with { s: string; n: number }
var x24 = NI.remote_variableOL_inf;



// with generics:

var remoteGenString : NG1.RemoteGen<string>;
var remoteGenNumber : NG2.RemoteGenNumber;

// XPECT type of 'remoteGenString.field' --> {function(string):number}
var x31 = remoteGenString.field;
// XPECT type of 'remoteGenNumber.field' --> {function(number):number}
var x32 = remoteGenNumber.field;
// XPECT type of 'remoteGenNumber.fieldIndirect' --> {function(number):number}
var x33 = remoteGenNumber.fieldIndirect;
