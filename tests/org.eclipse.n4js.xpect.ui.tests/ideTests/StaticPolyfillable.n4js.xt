/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.xpect.ui.tests.XtTestSetupTest

    Workspace {
   	 Project "SuperMethodAccess" {
   	 	Folder "src" {
   	 		ThisFile {  }
   	  	}
   	  	Folder "src-filler" {
   	  		File "StaticPolyfillable.n4js" { from="StaticPolyfillable-Filler.n4js" }
   	  	}
   	 	File "package.json" { from="supermethodaccess-package.json" }
   	 }
   }

   END_SETUP
*/



@@StaticPolyfillAware

interface I {
	public consumedMethod() {}
}

export public abstract class StaticPolyfillClass implements I {
	public concreteMethod() { return ""; }

	public abstract abstractBaseMethod();
}

export public abstract class Subclass extends StaticPolyfillClass {}

class A extends StaticPolyfillClass {
	@Override
	public abstractMethod() {
		// Invoke abstract super method in StaticPolyfill (1 level) XPECT errors --> "Cannot call super method since it is abstract." at "abstractMethod"
		super.abstractMethod();

		// Invoke consumed method from interface I with implementation in polyfillable XPECT noerrors -->
		super.consumedMethod();

		// Invoke abstract method that is implemented in filler XPECT noerrors -->
		super.abstractBaseMethod();
	}
}

class B extends Subclass {
	@Override
	public abstractMethod() {
		// Invoke abstract super method in StaticPolyfill (2 levels) XPECT errors --> "Cannot call super method since it is abstract." at "abstractMethod"
		super.abstractMethod();

		// Invoke consumed method from interface I with implementation in polyfillable (3 levels) XPECT noerrors -->
		super.consumedMethod();
	}
}
