/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.bugreports.tests.N4JSBugreportTest END_SETUP  */

// XPECT noerrors --> "Direct subtype of Error."
export external class SubError extends Error { }

// XPECT noerrors --> "Indirect subtype of Error."
export external class SubEvalError extends EvalError { }

// XPECT noerrors --> "Indirect subtype of Error."
export external class SubRangeError extends RangeError { }

// XPECT noerrors --> "Indirect subtype of Error."
export external class SubReferenceError extends ReferenceError { }

// XPECT noerrors --> "Indirect subtype of Error."
export external class SubSyntaxError extends SyntaxError{ }

// XPECT noerrors --> "Indirect subtype of Error."
export external class SubTypeError extends TypeError { }

// XPECT noerrors --> "Indirect subtype of Error."
export external class SubURIError extends URIError { }



// Intentionally has @EcmaScript
@EcmaScript
export external class MyError extends Error { }

// XPECT noerrors --> "External classes annotated with @N4JS aren't allowed to extend a class without such annotation." at "MySubError"
export external class MySubError extends MyError { }



// Unlike in the previos test case we do not have the @EcmaScript annotation at the custom error class level.
export external class MyError2 extends Error { }

// XPECT noerrors --> "Indirect subtype of Error"
export external class MySubError2 extends MyError2 { }



// Intentionally has @EcmaScript
@EcmaScript
export external class SuperClass { }

// XPECT noerrors --> "External classes annotated with @N4JS aren't allowed to extend a class without such annotation." at "SubClass"
export external class SubClass extends SuperClass {

}
