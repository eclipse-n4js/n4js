/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.bugreports.tests.N4JSBugreportTest END_SETUP  */

class A { }
class B extends A { }
class C {}

class S1 extends Impl<B> {}
var s1 : S1;
// Assignment correct but HOVER on ".t" shows: "getter T get t()" instead of "getter B t()";
// XPECT noerrors -->
var sa1 : B = s1.t;

interface I<T extends A> {
//	T get t() { return null; } //  problem independent of default / not default method.
	get t()  : T; // { return null; } //  problem independent of default / not default method.
}
class Impl<T extends A> implements I<T> {
	//  problem independent of default / not default method.
	@Override
	get t() : T { return null; }
}

class Container2<S extends Impl<B>> {
	// we know:
	// S <: Impl<B> <: I<B>  =>   member.t <: B
	member : S;
	f() {
		// instead of "T is not a subtype of string." it should read
		// XPECT errors --> "B is not a subtype of string." at "this.member.t"
		var x1 : string = this.member.t;
		// XPECT noerrors -->
		var x2 : A = this.member.t;
		// XPECT noerrors --> "T is not a subtype of B." at "this.member.t"
		var x3 : B = this.member.t;
	}
}

var cs2 : Container2<S1>;
// OK XPECT noerrors -->
var a : A = cs2.member.t
// OK XPECT noerrors -->
var b : B = cs2.member.t
// OK XPECT errors --> "B is not a subtype of C." at "cs2.member.t"
var c : C = cs2.member.t
