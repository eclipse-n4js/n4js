/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.bugreports.tests.N4JSBugreportTest END_SETUP  */


/* XPECT output ---
setter in B: 42
setter in A: 84
result: b._a == 84
result: b.a  == 74
done
--- */


class A {

  _a : number = undefined;

  set a(n : number) {
    console.log('setter in A: '+n);
    this._a = n;
  }
  get a() : number {
    return this._a - 10;
  }
}

// This test file was modified as part of IDE-2228. Field accessor related test cases might have reduced relevance.
// As a part of this modification some tests were removed.
// See 192980b3133a5a7fce70630c70d577a8fd410002, c74c82650408278a26d1d3433b780122e7a63ce5, 9732be951c73ac638d7a12c5d6767fb5e5d4f7cd, cd24fa1498702f9a6fd731916b3caa413f0fabc6.
class B extends A {

  @Override get a() : number { return super.a; }
  @Override
  set a(n : number) {
    console.log('setter in B: '+n);
    super.a = n * 2;
  }
}


var b = new B();

b.a = 42;

console.log('result: b._a == ' + b._a );
console.log('result: b.a  == ' + b.a  );

console.log('done');
