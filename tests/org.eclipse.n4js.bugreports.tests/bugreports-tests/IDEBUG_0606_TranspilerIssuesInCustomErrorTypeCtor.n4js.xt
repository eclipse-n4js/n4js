/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.bugreports.tests.N4JSBugreportTest END_SETUP  */

/* XPECT output ---
A: message for ctor A

B: message for ctor B

before C<init> n: 36
before C<init> message: message for ctor C [modified before calling super ctor]
after C<init> n: 42
after C<init> message: message for ctor C
C: message for ctor C [modified before calling super ctor]

before D<init> n: 42
before D<init> message: message for ctor D [modified before calling super ctor]
after D<init> n: 36
after D<init> message: message for ctor D
D: message for ctor D

--- */

class A extends Error {

}

class B extends Error {
	constructor(n : number, message : string=undefined) {
		super(message);
	}
}

class C extends Error {
	constructor(n : number, message : string=undefined) {
		var originalmessage = message;
		var originalN = n;
		n = 36;
		message = message + ' [modified before calling super ctor]';
		console.log('before C<init> n: ' + n);
		console.log('before C<init> message: ' + message);
		super(message);
		n = originalN;
		message = originalmessage;
		console.log('after C<init> n: ' + n);
		console.log('after C<init> message: ' + message);
	}
}

class D extends Error {
	public n : number;
	constructor(@Spec spec : ~i~this) {
		var originalN = spec.n;
		console.log('before D<init> n: ' + spec.n);
		console.log('before D<init> message: ' + spec.message + ' [modified before calling super ctor]');
		super(spec.message);
		this.n = 36;
		console.log('after D<init> n: ' + this.n);
		console.log('after D<init> message: ' + spec.message);
	}
}

console.log('A: ' + new A('message for ctor A').message)
console.log()

console.log('B: ' + new B(42, 'message for ctor B').message)
console.log()

console.log('C: ' + new C(42, 'message for ctor C').message)
console.log()

console.log('D: ' + new D({n: 42, message: 'message for ctor D'}).message)
console.log()
