/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.bugreports.tests.N4JSBugreportTest END_SETUP  */
/* XPECT output ---
 typeof C =  function
 typeof D =  function
 typeof E =  function
 typeof I =  object
 typeof {}=  object
 typeof String =  function
 typeof Number =  function
 typeof "a" =  string
 typeof String("a") =  object
 typeof  5 =  number
 typeof new Number(5) =  object
c instanceof C  true
c instanceof D  false
d instanceof C  false
d instanceof D  true
e instanceof C  true
e instanceof D  false
e instanceof E  true
{} instanceof C  false
{} instanceof D  false
{}instanceof I  false
###############
c instanceof C  true
c instanceof C  true
c instanceof D  false
d instanceof C  false
d instanceof D  true
e instanceof C  true
e instanceof D  false
e instanceof E  true
{} instanceof C  false
{} instanceof D  false
{}instanceof I  false
###############
 {} instanceof N4Enum=  false
 {} instanceof N4Object=  false
 {} instanceof Object=  true
 {} instanceof String =  false
 {} instanceof Number =  false
++++++

--- */

function instanceOf(obj : Object, t : type{N4Object}) {
    return obj instanceof t;
}


interface I {}

class C {}

class D implements I {}
class E extends C implements I {}

var d : D = new D();
var c : C = new C();
var e : E = new E();

console.log( " typeof C = ", typeof C )
console.log( " typeof D = ", typeof D )
console.log( " typeof E = ", typeof E )
console.log( " typeof I = ", typeof I )
console.log( " typeof {}= ", typeof {} )
console.log( " typeof String = ", typeof String )
console.log( " typeof Number = ", typeof Number )
console.log( " typeof \"a\" = ", typeof "a")
console.log( " typeof String(\"a\") = ", typeof new String("a") )
console.log( " typeof  5 = ", typeof 5 )
console.log( " typeof new Number(5) = ", typeof new Number(5))

console.log("c instanceof C ",instanceOf(c, C));
console.log("c instanceof D ",instanceOf(c, D));
console.log("d instanceof C ",instanceOf(d, C));
console.log("d instanceof D ",instanceOf(d, D));
console.log("e instanceof C ",instanceOf(e, C));
console.log("e instanceof D ",instanceOf(e, D));
console.log("e instanceof E ",instanceOf(e, E));
console.log("{} instanceof C ",instanceOf({}, C));
console.log("{} instanceof D ",instanceOf({}, C));
console.log("{}instanceof I ",  instanceOf({}, I));



console.log("###############");
console.log("c instanceof C ",c instanceof (C));

console.log("c instanceof C ",c instanceof C);
console.log("c instanceof D ",c instanceof D);
console.log("d instanceof C ",d instanceof C);
console.log("d instanceof D ",d instanceof D);
console.log("e instanceof C ",e instanceof C);
console.log("e instanceof D ",e instanceof D);
console.log("e instanceof E ",e instanceof E);
console.log("{} instanceof C ",{} instanceof C);
console.log("{} instanceof D ",{} instanceof C);
console.log("{}instanceof I ",{} instanceof I);


console.log("###############");
console.log( " {} instanceof N4Enum= ", {} instanceof N4Enum )
console.log( " {} instanceof N4Object= ", {} instanceof N4Object )
console.log( " {} instanceof Object= ", {} instanceof Object )
console.log( " {} instanceof String = ", {} instanceof String )
console.log( " {} instanceof Number = ", {} instanceof Number )
console.log("++++++\n")
