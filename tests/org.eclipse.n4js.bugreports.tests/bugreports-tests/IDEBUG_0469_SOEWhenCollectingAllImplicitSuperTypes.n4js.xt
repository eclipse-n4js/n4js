/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.bugreports.tests.N4JSBugreportTest END_SETUP  */

// Non of the inheritance cycle validations should throw SOE.


// XPECT errors --> "Inheritance cycle detected: A, A." at "A"
class A extends A { }
var f = function (type : Object) { };
var fa = function (type : A) { };
// XPECT noerrors -->
f(new A());
// XPECT noerrors -->
fa(new A());

// XPECT errors --> "Inheritance cycle detected: B, C, B." at "C"
class B extends C { }
// XPECT errors --> "Inheritance cycle detected: C, B, C." at "B"
class C extends B { }

var b : B;
// XPECT noerrors -->
var o1 : Object = b;
// XPECT noerrors -->
var no1 : N4Object = b;

var c : C;
// XPECT noerrors -->
var o2 : Object = c;
// XPECT noerrors -->
var no2 : N4Object = c;

// XPECT noerrors -->
f(new B());

// XPECT errors -->"B is not a subtype of A." at "new B()"
fa(new B());

// XPECT noerrors -->
f(new C());

// XPECT errors -->"C is not a subtype of A." at "new C()"
fa(new C());


interface I<T> {
	foo(t : T) : T;
}

interface I1 extends I<string> {}
interface I2 extends I<number> {}

// XPECT errors ---
// "Cannot implement interface I multiple times with different type arguments for invariant T: string, number." at "IC"
// "Inheritance cycle detected: IC, IC." at "IC"
// ---
abstract class IC extends IC implements I1, I2 {}

// XPECT errors ---
// "Cannot consume IDEBUG_0469_SOEWhenCollectingAllImplicitSuperTypes/I multiple times." at "I<string>"
// "Cannot implement interface I multiple times with different type arguments for invariant T: string, number." at "IC2"
// ---
abstract class IC2 implements I<string>, I<number> {}

var ic : IC = null;
// XPECT noerrors --> "don't show follow-up error"
ic.foo(false);
// XPECT noerrors --> "don't show follow-up error"
var x : boolean = ic.foo(null);
