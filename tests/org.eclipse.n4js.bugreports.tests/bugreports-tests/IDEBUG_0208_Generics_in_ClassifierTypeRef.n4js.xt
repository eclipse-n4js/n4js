/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.bugreports.tests.N4JSBugreportTest END_SETUP  */

interface A<T> { m1(x : T) : void }

function <T> createS(p : type{T}): T { return null; }
function <T> create(      p1 : T, p : type{T}): T {return null;}
function <T> createR(p : type{T}, p1 : T     ): T {return null;}


// Generic Type in ClassifiertTypeRef XPECT noerrors --> No error expected: "type{A} is not a subtype of type{T}." at "A"
var c1 = <A<string>> createS( A );

var astr : A<string>;
var anum : A<number>;

// Mixing RawType and BoundType XPECT noerrors -->
var c2 : A<string> = create(astr, A);

// Mixing BoundType and RawType XPECT noerrors -->
var c3 : A<string> = createR(A, astr);

// TypArg from LHS XPECT noerrors -->
var c4 : A<string> = createS( A );
