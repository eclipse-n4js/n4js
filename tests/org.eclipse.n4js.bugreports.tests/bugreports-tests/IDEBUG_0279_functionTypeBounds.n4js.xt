/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.bugreports.tests.N4JSBugreportTest END_SETUP  */


class A {} class B extends A {}
var a : A;
var bot : undefined;
var top : any;

class G<T> {
	i(cb : {function(T)}) : {function(T)}{ return null;}
	o(cb : {function():T}) : {function():T}{ return null;}

	getI() : {function(T)}{ return null;}
	getO() : {function():T}{ return null;}

	ptr(t : T) { }
	getPtr() : T { return null;}
}

var p = function f(a : A) { }
var p_top = function f_top(a : any) { }
var p_bot = function f_bot(b : undefined) {  }

var c = function f():A { return null; }
// XPECT errors --> "null is not a subtype of undefined." at "null"
var c_top = function f(): undefined { return null; }
var c_bot = function f_bot() { return null; }



var g : G<? extends A>;

// XPECT errors --> "A is not a subtype of ? extends A." at "a"
g.ptr(a);
// XPECT errors --> "any is not a subtype of ? extends A." at "top"
g.ptr(top);
// no errors, but a warning XPECT warnings --> "The type of this expression is undefined, so it will never evaluate to a value other than undefined." at "bot"
g.ptr(bot);

// XPECT noerrors -->
a = g.getPtr();
// XPECT errors --> "? extends A is not a subtype of undefined." at "g.getPtr()"
bot = g.getPtr();
// XPECT noerrors -->
top = g.getPtr();

// XPECT noerrors -->
g.i(p);
// XPECT noerrors -->
g.i(p_top);
// XPECT errors --> "{function(undefined):void} is not a subtype of {function(? extends A)}." at "p_bot"
g.i(p_bot);
// XPECT errors --> "{function(? extends A)} is not a subtype of {function(? extends A)}." at "g.getI()"
g.i(g.getI());

// XPECT errors --> "{function():A} is not a subtype of {function():? extends A}." at "c"
g.o(c);
// XPECT noerrors -->
g.o(c_top);
// XPECT errors --> "{function():any} is not a subtype of {function():? extends A}." at "c_bot"
g.o(c_bot);
// XPECT errors --> "{function():? extends A} is not a subtype of {function():? extends A}." at "g.getO()"
g.o(g.getO());

// XPECT errors --> "{function(? extends A)} is not a subtype of {function(A):void}." at "g.getI()"
p = g.getI();
// XPECT errors --> "{function(? extends A)} is not a subtype of {function(any):void}." at "g.getI()"
p_top = g.getI();
// XPECT noerrors --> No error expected: "{function(? extends A)} is not a subtype of {function(undefined):void}." at "g.getI()"
p_bot = g.getI();

// XPECT noerrors --> No error expected: "{function():? extends A} is not a subtype of {function():A}." at "g.getO()"
c = g.getO();
// XPECT errors --> "{function():? extends A} is not a subtype of {function():undefined}." at "g.getO()"
c_top = g.getO();
// XPECT noerrors --> No error expected: "{function():? extends A} is not a subtype of {function():any}." at "g.getO()"
c_bot = g.getO();
