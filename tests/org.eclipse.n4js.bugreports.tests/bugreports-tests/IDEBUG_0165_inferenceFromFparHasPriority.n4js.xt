/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/* XPECT_SETUP org.eclipse.n4js.bugreports.tests.N4JSBugreportTest END_SETUP  */


// in type argument inference for parameterized functions/methods:
// inference from fpar argument types has priority over inference from expected return type
// (note: details of the below tests may change once we have a proper, constraint-based type argument inference)


class A<T> {}


//
// declared function
//

function <T> fd(param : T) : A<T> { return null; }

// type of argument has priority over expected return type
// X--PECT errors --> "A<int> is not a subtype of A<string>." at "fd(42)"
// note: above error message would be better, cf. IDE-1727
// XPECT errors ---
// "A<T> is not a subtype of A<string>." at "fd(42)"
// "int is not a subtype of T." at "42"
// ---
var s01 : A<string> = fd(42);

// expection: if argument exists but does not provide a type hint, use expected return type
// XPECT noerrors -->
var s02 : A<string> = fd(null);

// expection: if argument exists but does not provide a type hint, use expected return type
// XPECT noerrors -->
var s03 : A<string> = fd(undefined);



//
// function expression
//

var fe = function <T> (param : T) : A<T> { return null; };

// X--PECT errors --> "A<int> is not a subtype of A<string>." at "fe(42)"
// note: above error message would be better, cf. IDE-1727
// XPECT errors ---
// "A<T> is not a subtype of A<string>." at "fe(42)"
// "int is not a subtype of T." at "42"
// ---
var s11 : A<string> = fe(42);

// XPECT noerrors -->
var s12 : A<string> = fe(null);

// XPECT noerrors -->
var s13 : A<string> = fe(undefined);



//
// methods (static / non-static)
//

class C {
	<T> m(param : T) : A<T> { return null; }
	static <T> m(param : T) : A<T> { return null; }
}
var c : C;


// X--PECT errors --> "A<int> is not a subtype of A<string>." at "c.m(42)"
// note: above error message would be better, cf. IDE-1727
// XPECT errors ---
// "A<T> is not a subtype of A<string>." at "c.m(42)"
// "int is not a subtype of T." at "42"
// ---
var s21 : A<string> = c.m(42);

// XPECT noerrors -->
var s22 : A<string> = c.m(null);

// XPECT noerrors -->
var s23 : A<string> = c.m(undefined);


// X--PECT errors --> "A<int> is not a subtype of A<string>." at "C.m(42)"
// note: above error message would be better, cf. IDE-1727
// XPECT errors ---
// "A<T> is not a subtype of A<string>." at "C.m(42)"
// "int is not a subtype of T." at "42"
// ---
var s31 : A<string> = C.m(42);

// XPECT noerrors -->
var s32 : A<string> = C.m(null);

// XPECT noerrors -->
var s33 : A<string> = C.m(undefined);
