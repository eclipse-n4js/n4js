/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

import { RoundingMode } from "IDE_1789_CyclicDependencies_RoundingMode"
import { FixedPoint6 } from "IDE_1789_CyclicDependencies_FixedPoint6"

export public class MathContext {

    const FLOOR = new MathContext(RoundingMode.FLOOR);
    const CEILING = new MathContext(RoundingMode.CEILING);

    private mode : RoundingMode;

    constructor(mode : RoundingMode) {
        this.mode = mode;
    }

    public divide(fp1 : FixedPoint6, fp2 : FixedPoint6) {
        var quotient = FixedPoint6.getQuotient(fp1, fp2);
        if (this.mode === RoundingMode.CEILING) {
            return new FixedPoint6(Math.ceil(quotient));
        } else if (this.mode === RoundingMode.FLOOR) { 
            return new FixedPoint6(Math.floor(quotient));
        } else {
            throw new Error('IncorrectRoundingMode');
        }
    }
    
}
