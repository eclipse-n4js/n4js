/**
 * Copyright (c) 2021 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

import {AbstractN4jsdGeneratorTest} from "AbstractN4jsdGeneratorTest";

export public class ConvertFunctionsTest extends AbstractN4jsdGeneratorTest {

	@Test
	public testFunctions() {
		this.assertConversion(
			{
				name: "main",
				dts: `
					export function decode(str: string): string[];
					export function encode(segments: string[]): string;
				`,
				n4jsd: `
					export external public function decode(str: any+): any+;

					export external public function encode(segments: any+): any+;
				`
			}
		);
	}

	@Test
	public testFunctionWithOptionalParameter() {
		this.assertConversion(
			{
				name: "main",
				dts: `
					export function f1(p1?: string);
					export function f2(p1: string, p2?: string);
					export function f3(p1?: string, p2?: string);
				`,
				n4jsd: `
					export external public function f1(p1: any+ = ): any+;

					export external public function f2(p1: any+, p2: any+ = ): any+;

					export external public function f3(p1: any+ = , p2: any+ = ): any+;
				`
			}
		);
	}

	@Test
	public testFunctionWithVariadicParameter() {
		this.assertConversion(
			{
				name: "main",
				dts: `
					export function f1(...p1: string[]);
					export function f2(p1: string, ...p2: string[]);
					export function f3(p1?: string, ...p2: string[]);
				`,
				n4jsd: `
					export external public function f1(...p1: any+): any+;

					export external public function f2(p1: any+, ...p2: any+): any+;

					export external public function f3(p1: any+ = , ...p2: any+): any+;
				`
			}
		);
	}
}
