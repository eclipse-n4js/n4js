<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>*.n4js</string>
	</array>
	<key>name</key>
	<string>n4js</string>
	<key>scopeName</key>
	<string>source.n4js</string>
	<key>variables</key>
	<dict>
		<key>anyNumber</key>
		<string>({{hexNumber}})|({{binaryNumber}})|({{octalNumber}})|({{decimalNumber}})</string>
		<key>binaryNumber</key>
		<string>\b(?&lt;!\$)0(?:b|B)[01][01_]*(n)?\b(?!\$)</string>
		<key>brackets</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>{</string>
					<key>end</key>
					<string>}|(?=\*/)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#brackets</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[</string>
					<key>end</key>
					<string>\]|(?=\*/)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#brackets</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>constExprStart</key>
		<string>{{startOfDeclaration}}\b(const(?!\s+enum\b)){{endOfIdentifier}}</string>
		<key>constantIdentifier</key>
		<string>[[:upper:]][_$[:digit:][:upper:]]*</string>
		<key>constantVar</key>
		<string>({{constantIdentifier}})(?![_$[:alnum:]])</string>
		<key>constructsAndModifiers</key>
		<string>(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|type|var)\b</string>
		<key>decimalNumber</key>
		<string>(?&lt;!\$)(?:
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)| # 1.1E+3
  (?:\b[0-9][0-9_]*(\.)[eE][+-]?[0-9][0-9_]*(n)?\b)|             # 1.E+3
  (?:\B(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|             # .1E+3
  (?:\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|                 # 1E+3
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*(n)?\b)|                      # 1.1
  (?:\b[0-9][0-9_]*(\.)(n)?\B)|                                  # 1.
  (?:\B(\.)[0-9][0-9_]*(n)?\b)|                                  # .1
  (?:\b[0-9][0-9_]*(n)?\b(?!\.))                                 # 1
)(?!\$)</string>
		<key>docblock</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.class.jsdoc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.block.tag.jsdoc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.language.access-type.jsdoc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)
((@)(?:access|api))
\s+
(private|protected|public)
\b</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.class.jsdoc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.block.tag.jsdoc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.instance.jsdoc</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.angle.begin.jsdoc</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>constant.other.email.link.underline.jsdoc</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.angle.end.jsdoc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)
((@)author)
\s+
(
  [^@\s&lt;&gt;*/]
  (?:[^@&lt;&gt;*/]|\*[^/])*
)
(?:
  \s*
  (&lt;)
  ([^&gt;\s]+)
  (&gt;)
)?</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.class.jsdoc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.block.tag.jsdoc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.instance.jsdoc</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.control.jsdoc</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.instance.jsdoc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)
((@)borrows) \s+
((?:[^@\s*/]|\*[^/])+)    # &lt;that namepath&gt;
\s+ (as) \s+              # as
((?:[^@\s*/]|\*[^/])+)    # &lt;this namepath&gt;</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>((@)example)\s+</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.class.jsdoc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.block.tag.jsdoc</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=@|\*/)</string>
					<key>name</key>
					<string>meta.example.jsdoc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>^\s\*\s+</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\G(&lt;)caption(&gt;)</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>entity.name.tag.inline.jsdoc</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.bracket.angle.begin.jsdoc</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.bracket.angle.end.jsdoc</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>constant.other.description.jsdoc</string>
							<key>end</key>
							<string>(&lt;/)caption(&gt;)|(?=\*/)</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>entity.name.tag.inline.jsdoc</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.bracket.angle.begin.jsdoc</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.bracket.angle.end.jsdoc</string>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>source.embedded.ts</string>
								</dict>
							</dict>
							<key>match</key>
							<string>[^\s@*](?:[^*]|\*[^/])*</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.class.jsdoc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.block.tag.jsdoc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.language.symbol-type.jsdoc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x) ((@)kind) \s+ (class|constant|event|external|file|function|member|mixin|module|namespace|typedef) \b</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.class.jsdoc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.block.tag.jsdoc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.other.link.underline.jsdoc</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.instance.jsdoc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)
((@)see)
\s+
(?:
  # URL
  (
    (?=https?://)
    (?:[^\s*]|\*[^/])+
  )
  |
  # JSDoc namepath
  (
    (?!
      # Avoid matching bare URIs (also acceptable as links)
      https?://
      |
      # Avoid matching {@inline tags}; we match those below
      (?:\[[^\[\]]*\])? # Possible description [preceding]{@tag}
      {@(?:link|linkcode|linkplain|tutorial)\b
    )
    # Matched namepath
    (?:[^@\s*/]|\*[^/])+
  )
)</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.class.jsdoc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.block.tag.jsdoc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.other.jsdoc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)
((@)template)
\s+
# One or more valid identifiers
(
  [A-Za-z_$]         # First character: non-numeric word character
  [\w$.\[\]]*        # Rest of identifier
  (?:                # Possible list of additional identifiers
    \s* , \s*
    [A-Za-z_$]
    [\w$.\[\]]*
  )*
)</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.class.jsdoc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.block.tag.jsdoc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.other.jsdoc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)
(
  (@)
  (?:arg|argument|const|constant|member|namespace|param|var)
)
\s+
(
  [A-Za-z_$]
  [\w$.\[\]]*
)</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>((@)typedef)\s+(?={)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.class.jsdoc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.block.tag.jsdoc</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=\s|\*/|[^{}\[\]A-Za-z_$])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#jsdoctype</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?:[^@\s*/]|\*[^/])+</string>
							<key>name</key>
							<string>entity.name.type.instance.jsdoc</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>((@)(?:arg|argument|const|constant|member|namespace|param|prop|property|var))\s+(?={)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.class.jsdoc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.block.tag.jsdoc</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=\s|\*/|[^{}\[\]A-Za-z_$])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#jsdoctype</string>
						</dict>
						<dict>
							<key>match</key>
							<string>([A-Za-z_$][\w$.\[\]]*)</string>
							<key>name</key>
							<string>variable.other.jsdoc</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.optional-value.begin.bracket.square.jsdoc</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.assignment.jsdoc</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>source.embedded.ts</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.optional-value.end.bracket.square.jsdoc</string>
								</dict>
								<key>5</key>
								<dict>
									<key>name</key>
									<string>invalid.illegal.syntax.jsdoc</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?x)
(\[)\s*
[\w$]+
(?:
  (?:\[\])?                                        # Foo[ ].bar properties within an array
  \.                                                # Foo.Bar namespaced parameter
  [\w$]+
)*
(?:
  \s*
  (=)                                                # [foo=bar] Default parameter value
  \s*
  (
    # The inner regexes are to stop the match early at */ and to not stop at escaped quotes
    (?&gt;
      "(?:(?:\*(?!/))|(?:\\(?!"))|[^*\\])*?" |                      # [foo="bar"] Double-quoted
      '(?:(?:\*(?!/))|(?:\\(?!'))|[^*\\])*?' |                      # [foo='bar'] Single-quoted
      \[ (?:(?:\*(?!/))|[^*])*? \] |                                # [foo=[1,2]] Array literal
      (?:(?:\*(?!/))|\s(?!\s*\])|\[.*?(?:\]|(?=\*/))|[^*\s\[\]])*   # Everything else
    )*
  )
)?
\s*(?:(\])((?:[^*\s]|\*[^\s/])+)?|(?=\*/))</string>
							<key>name</key>
							<string>variable.other.jsdoc</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?x)
(
  (@)
  (?:define|enum|exception|export|extends|lends|implements|modifies
  |namespace|private|protected|returns?|suppress|this|throws|type
  |yields?)
)
\s+(?={)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.class.jsdoc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.block.tag.jsdoc</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=\s|\*/|[^{}\[\]A-Za-z_$])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#jsdoctype</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.class.jsdoc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.block.tag.jsdoc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.instance.jsdoc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)
(
  (@)
  (?:alias|augments|callback|constructs|emits|event|fires|exports?
  |extends|external|function|func|host|lends|listens|interface|memberof!?
  |method|module|mixes|mixin|name|requires|see|this|typedef|uses)
)
\s+
(
  (?:
    [^{}@\s*] | \*[^/]
  )+
)</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>((@)(?:default(?:value)?|license|version))\s+(([''"]))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.class.jsdoc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.block.tag.jsdoc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.other.jsdoc</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.jsdoc</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>variable.other.jsdoc</string>
					<key>end</key>
					<string>(\3)|(?=$|\*/)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>variable.other.jsdoc</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.jsdoc</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.class.jsdoc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.block.tag.jsdoc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.other.jsdoc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>((@)(?:default(?:value)?|license|tutorial|variation|version))\s+([^\s*]+)</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.block.tag.jsdoc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x) (@) (?:abstract|access|alias|api|arg|argument|async|attribute|augments|author|beta|borrows|bubbles |callback|chainable|class|classdesc|code|config|const|constant|constructor|constructs|copyright |default|defaultvalue|define|deprecated|desc|description|dict|emits|enum|event|example|exception |exports?|extends|extension(?:_?for)?|external|externs|file|fileoverview|final|fires|for|func |function|generator|global|hideconstructor|host|ignore|implements|implicitCast|inherit[Dd]oc |inner|instance|interface|internal|kind|lends|license|listens|main|member|memberof!?|method |mixes|mixins?|modifies|module|name|namespace|noalias|nocollapse|nocompile|nosideeffects |override|overview|package|param|polymer(?:Behavior)?|preserve|private|prop|property|protected |public|read[Oo]nly|record|require[ds]|returns?|see|since|static|struct|submodule|summary |suppress|template|this|throws|todo|tutorial|type|typedef|unrestricted|uses|var|variation |version|virtual|writeOnce|yields?) \b</string>
					<key>name</key>
					<string>storage.type.class.jsdoc</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#inline-tags</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.class.jsdoc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.block.tag.jsdoc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>((@)(?:{{identifier}}))(?=\s+)</string>
				</dict>
			</array>
		</dict>
		<key>endOfIdentifier</key>
		<string>(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
		<key>endOfStatement</key>
		<string>;|(?:^\s*{{constructsAndModifiers}})</string>
		<key>functionCallLookup</key>
		<string>\s*(\?\.\s*)?({{typeArguments}}\s*)?\(</string>
		<key>hexNumber</key>
		<string>\b(?&lt;!\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\b(?!\$)</string>
		<key>identifier</key>
		<string>[_$[:alpha:]][_$[:alnum:]]*</string>
		<key>inline-tags</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.square.begin.jsdoc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.square.end.jsdoc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\[)[^\]]+(\])(?={@(?:link|linkcode|linkplain|tutorial))</string>
					<key>name</key>
					<string>constant.other.description.jsdoc</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>({)((@)(?:link(?:code|plain)?|tutorial))\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.curly.begin.jsdoc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.class.jsdoc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.inline.tag.jsdoc</string>
						</dict>
					</dict>
					<key>end</key>
					<string>}|(?=\*/)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.curly.end.jsdoc</string>
						</dict>
					</dict>
					<key>name</key>
					<string>entity.name.type.instance.jsdoc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>variable.other.link.underline.jsdoc</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.pipe.jsdoc</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\G((?=https?://)(?:[^|}\s*]|\*[/])+)(\|)?</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>variable.other.description.jsdoc</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.pipe.jsdoc</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\G((?:[^{}@\s|*]|\*[^/])+)(\|)?</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>inlineComment</key>
		<string>\/\*([^\*]|(\*[^\/]))*\*\/</string>
		<key>jsdoctype</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\G{(?:[^}*]|\*[^/}])+$</string>
					<key>name</key>
					<string>invalid.illegal.type.jsdoc</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\G({)</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.instance.jsdoc</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.curly.begin.jsdoc</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>entity.name.type.instance.jsdoc</string>
					<key>end</key>
					<string>((}))\s*|(?=\*/)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.instance.jsdoc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.curly.end.jsdoc</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#brackets</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>label</key>
		<string>({{identifier}})\s*(:)</string>
		<key>lookBehindAwait</key>
		<string>^await|{{nonPropertyLookBehind}}await</string>
		<key>lookBehindCase</key>
		<string>^case|{{nonPropertyLookBehind}}case</string>
		<key>lookBehindConst</key>
		<string>^const|{{nonPropertyLookBehind}}const</string>
		<key>lookBehindDefault</key>
		<string>^default|{{nonPropertyLookBehind}}default</string>
		<key>lookBehindImport</key>
		<string>^import|{{nonPropertyLookBehind}}import</string>
		<key>lookBehindIn</key>
		<string>^in|{{nonPropertyLookBehind}}in</string>
		<key>lookBehindLet</key>
		<string>^let|{{nonPropertyLookBehind}}let</string>
		<key>lookBehindOf</key>
		<string>^of|{{nonPropertyLookBehind}}of</string>
		<key>lookBehindOfObjectMemberPossiblyMultilineArrow</key>
		<string>(?&lt;=:)</string>
		<key>lookBehindOfPossiblyMultilineArrow</key>
		<string>(?&lt;=[(=,]|=&gt;|{{lookBehindReturn}})</string>
		<key>lookBehindOfPossiblyMultilineArrowWithDestructuring</key>
		<string>(?&lt;=[(=,])</string>
		<key>lookBehindReturn</key>
		<string>^return|{{nonPropertyLookBehind}}return</string>
		<key>lookBehindThrow</key>
		<string>^throw|{{nonPropertyLookBehind}}throw</string>
		<key>lookBehindTypeof</key>
		<string>^typeof|{{nonPropertyLookBehind}}typeof</string>
		<key>lookBehindVar</key>
		<string>^var|{{nonPropertyLookBehind}}var</string>
		<key>lookBehindYield</key>
		<string>^yield|{{nonPropertyLookBehind}}yield</string>
		<key>matchingBraces</key>
		<string>(\{([^\{\}]|(\{[^\{\}]*\}))*\})</string>
		<key>matchingBrackets</key>
		<string>(\[([^\[\]]|(\[[^\[\]]*\]))*\])</string>
		<key>matchingParenthesis</key>
		<string>(\(([^\(\)]|(\([^\(\)]*\)))*\))</string>
		<key>nonIdentifierPropertyName</key>
		<string>{{quotedStrings}}|(\[([^\[\]]|\[[^\[\]]*\])+\])</string>
		<key>nonPropertyLookBehind</key>
		<string>[^\._$[:alnum:]]</string>
		<key>octalNumber</key>
		<string>\b(?&lt;!\$)0(?:o|O)?[0-7][0-7_]*(n)?\b(?!\$)</string>
		<key>propertyAccess</key>
		<string>(?:(\.)|(\?\.(?!\s*[[:digit:]])))</string>
		<key>propertyAccessPreIdentifier</key>
		<string>\??\.\s*</string>
		<key>propertyName</key>
		<string>({{anyNumber}}|({{identifier}})|{{nonIdentifierPropertyName}})</string>
		<key>quotedStrings</key>
		<string>(\'([^\'\\]|\\\'|\\)*\')|(\"([^\"\\]|\\\"|\\)*\")|(\`([^\`\\]|\\\`|\\)*\`)</string>
		<key>returnTypeOfArrow</key>
		<string>\s*([^&lt;&gt;\(\)\{\}]|\&lt;[^&lt;&gt;]+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+</string>
		<key>startOfDeclaration</key>
		<string>{{startOfIdentifier}}(?:(\bexport)\s+)?(?:(\bdeclare)\s+)?</string>
		<key>startOfIdentifier</key>
		<string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))</string>
		<key>typeArguments</key>
		<string>&lt;\s*{{typeArgumentsStart}}({{typeArgumentsInnerExpressionPart}}|\&lt;\s*{{typeArgumentsStart}}(({{typeArgumentsInnerExpressionPart}}|\&lt;\s*{{typeArgumentsStart}}({{typeArgumentsInnerExpressionPart}})*(?&lt;!=)\&gt;))*(?&lt;!=)\&gt;)*(?&lt;!=)&gt;</string>
		<key>typeArgumentsInnerExpressionPart</key>
		<string>[^&lt;&gt;\(]|{{matchingParenthesis}}|(?&lt;==)\&gt;</string>
		<key>typeArgumentsStart</key>
		<string>(((keyof|infer|typeof)\s+)|(({{identifier}}|{{matchingBraces}}|{{matchingParenthesis}}|{{matchingBrackets}}|(\'[^\']*\')|(\"[^\"]*\")|(\`[^\`]*\`))(?=\s*([\&lt;\&gt;\,\.\[]|=&gt;|&amp;(?!&amp;)|\|(?!\|)))))</string>
		<key>typeParamersStart</key>
		<string>([_$[:alpha:]]|{{matchingBraces}}|{{matchingParenthesis}}|{{matchingBrackets}})</string>
		<key>typeParameters</key>
		<string>(&lt;\s*{{typeParamersStart}}([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*{{typeParamersStart}}([^=&lt;&gt;]|=[^&lt;])*\&gt;)*&gt;\s*)</string>
		<key>varExprStart</key>
		<string>{{startOfDeclaration}}\b(var|let){{endOfIdentifier}}</string>
	</dict>
</dict>
</plist>
