'use strict';

//import * as net+ from '@types/node';
import * as net+ from 'net';

import * as VSCodeJRCP+ from 'vscode-jsonrpc';
//import { Trace } from 'vscode-jsonrpc';

import * as VSCode+ from 'n4js-vscode-extension/vscode';
//import { workspace, ExtensionContext } from 'vscode';

import * as VSCodeLC+ from 'vscode-languageclient';
//import { LanguageClient, LanguageClientOptions, StreamInfo } from 'vscode-languageclient';


export function activate(context: any+ /*VSCode.ExtensionContext*/) {
    // The server is a started as a separate app and listens on port 5007
    let connectionInfo = {
        port: 5007
    };
    let serverOptions = () => {
        // Connect to language server via socket
        let socket = net.connect(connectionInfo);
        let result: VSCodeLC.StreamInfo = {
            writer: socket,
            reader: socket
        };
        return Promise.resolve(result);
    };
    
    let clientOptions: VSCodeLC.LanguageClientOptions = {
        documentSelector: ['n4js'],
        synchronize: {
            fileEvents: VSCode.workspace.createFileSystemWatcher('**/*.*')
        }
    }; 
    
    // Create the language client and start the client.
    let lc = new VSCodeLC.LanguageClient('N4JS Language Server', serverOptions, clientOptions);
    // enable tracing (.Off, .Messages, .Verbose)
    lc.trace = VSCodeJRCP.Trace.Verbose;
    let disposable = lc.start();
    
    // Push the disposable to the context's subscriptions so that the 
    // client can be deactivated on extension deactivation
    context.subscriptions.push(disposable);
}