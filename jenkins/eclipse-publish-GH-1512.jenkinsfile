/*
 * Copyright (c) 2018 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */


def MAVEN_OPTIONS = '-U -V -B -e '                                +
                    '-DWORKSPACE=$WORKSPACE '                     +
                    '-Dmaven.test.failure.ignore '                +
                    '-Dmaven.test.redirectTestOutputToFile=true ' +
                    '-Dtycho.localArtifacts=ignore'

def DEBUG_DEPLOY_SUFFIX = ''; // should be empty string by default; use something like '_GH-1234' for debugging the publishing build itself

// the following will be set below in stage 'Compute Version':
def String LANGUAGE_VERSION;
def String N4JS_LIBS_DIST_TAG;


pipeline {

    agent any

    options {
        buildDiscarder(
            logRotator(
                numToKeepStr:          '20',
                artifactDaysToKeepStr: '14',
                artifactNumToKeepStr:  '20',
                daysToKeepStr:         '14'))
        disableConcurrentBuilds()
        timeout(time: 3, unit: 'HOURS')
        timestamps()
    }

	// For how to request updates of below tools on Eclipse infrastructure, see file 'eclipse-nightly.jenkinsfile'.
    environment {
        NODEJS_PATH= '/shared/common/node-v12.13.1-linux-x64/bin'
        YARN_PATH  = '/shared/common/yarn/1.19.2/bin'
        PATH       = "${PATH}"                                          +
                     ':/shared/common/jq/1.6'                           +
                     ':/shared/common/apache-ant-1.9.6/bin'             +
                     ':/shared/common/maven/apache-maven-3.6.0/bin/'    +
                     ':/shared/common/node-v12.13.1-linux-x64/bin'      +
                     ':/shared/common/yarn/1.19.2/bin'                  +
                     ':/shared/common/java/openjdk/jdk-11/bin'
        MAVEN_OPTS = '-Xmx4G'
        JAVA_HOME  = '/shared/common/java/openjdk/jdk-11'
    }

    stages {

        stage('Compute Version') {
            steps {
                script {
                    sh 'n4js/releng/utils/scripts/compute-version.sh'
                    LANGUAGE_VERSION = sh(returnStdout: true, script: 'jq -r ".languageVersion" n4js/version-info.json').trim();
                    N4JS_LIBS_DIST_TAG = sh(returnStdout: true, script: 'jq -r ".n4jsLibsDistTag" n4js/version-info.json').trim();
                    // note: we never publish any of the n4js-libs in this build,
                    // so we can ignore the other properties in file version-info.json
                }
            }
        }

        stage('Build (no tests)') {
            steps {
                dir('n4js') {
                    sh "mvn $MAVEN_OPTIONS -PbuildProduct -DlanguageVersion=${LANGUAGE_VERSION} -DexcludeJRE -DnoTests clean verify"
                }

                // assert that the headless builder reports the correct version
                script {
                    def versionOfHeadlessBuilder = sh(returnStdout: true, script: 'java -jar n4js/plugins/org.eclipse.n4js.cli/target/n4jsc.jar --version').trim();
                    if (versionOfHeadlessBuilder != LANGUAGE_VERSION) {
                        error "headless builder reported an incorrect version: ${versionOfHeadlessBuilder}"
                    }
                }
            }
        }

        stage('Sign macOS product') {
            steps {
                dir('n4js/target/products') {
                    sh "pwd"

                    // sign the macOS product
                    sh """\
                        cp ../../builds/org.eclipse.n4js.product.build/signing-entitlements.xml .
                        mv      n4js-ide_macos.zip          unsigned_n4js-ide_macos.zip
                        curl -o n4js-ide_macos.zip -F file=@unsigned_n4js-ide_macos.zip -F entitlements=@signing-entitlements.xml http://build.eclipse.org:31338/macsign.php
                    """

                    // bundle macOS product into a signed .dmg image
                    sh """\
                        curl -o n4js-ide_macos.dmg -F sign=true -F source=@n4js-ide_macos.zip http://build.eclipse.org:31338/dmg-packager
                    """

                    // fix macOS zip
                    // (the signing service returns a "broken" zip archive that will produce an invalid app bundle
                    // when extracted on macOS by double-clicking it in Finder (wrong file permission flags); using
                    // 'unzip' on command line works fine both here and on macOS, though, so we can fix this problem
                    // by extracting and re-zipping the signed archive here)
                    sh """\
                        mkdir temp_fix_zip
                        cd temp_fix_zip
                        unzip ../n4js-ide_macos.zip
                        rm ../n4js-ide_macos.zip
                        zip -r ../n4js-ide_macos.zip *
                        cd ..
                        rm -rf temp_fix_zip
                    """
                }
            }
        }

        stage('Deploy to TEMP_GH1512') {
            steps {
                script {
                    // append language version to file names of products
                    sh """
                        cd n4js/target
                        mv n4jsc.jar                    n4jsc_${LANGUAGE_VERSION}.jar
                        cd products
                        mv unsigned_n4js-ide_macos.zip  unsigned_n4js-ide_macos_${LANGUAGE_VERSION}.zip
                        mv n4js-ide_macos.zip           n4js-ide_macos_${LANGUAGE_VERSION}.zip
                        mv n4js-ide_macos.dmg           n4js-ide_macos_${LANGUAGE_VERSION}.dmg
                    """

                    sh """\
                        mkdir -p /home/data/httpd/archive.eclipse.org/n4js/TEMP_GH1512
                        cp  n4js/target/products/unsigned_n4js-ide_macos_${LANGUAGE_VERSION}.zip  /home/data/httpd/archive.eclipse.org/n4js/TEMP_GH1512
                        cp  n4js/target/products/n4js-ide_macos_${LANGUAGE_VERSION}.zip           /home/data/httpd/archive.eclipse.org/n4js/TEMP_GH1512
                        cp  n4js/target/products/n4js-ide_macos_${LANGUAGE_VERSION}.dmg           /home/data/httpd/archive.eclipse.org/n4js/TEMP_GH1512
                    """

                    // show a summary
                    def output = sh returnStdout: true, script: """\
                        echo ******************** Products on TEMP_GH1512:
                        ls -l /home/data/httpd/archive.eclipse.org/n4js/TEMP_GH1512
                        echo ********************
                    """

                    echo "$output"
                }
            }
        }
    }

    post {
        cleanup {
            deleteDir()
         }
    }
}
