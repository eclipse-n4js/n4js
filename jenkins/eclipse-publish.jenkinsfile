/*
 * Copyright (c) 2018 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */


def MAVEN_OPTIONS = '-U -V -B -e '                                +
                    '-DWORKSPACE=$WORKSPACE '                     +
                    '-Dmaven.test.failure.ignore '                +
                    '-Dmaven.test.redirectTestOutputToFile=true ' +
                    '-Dtycho.localArtifacts=ignore'

// the following will be set below in stage 'Compute Version':
def String N4JS_VERSION;


pipeline {

    agent any

    options {
        buildDiscarder(
            logRotator(
                numToKeepStr:          '20',
                artifactDaysToKeepStr: '14',
                artifactNumToKeepStr:  '20',
                daysToKeepStr:         '14'))
        disableConcurrentBuilds()
        timeout(time: 3, unit: 'HOURS')
        timestamps()
    }

    environment {
        NODEJS_PATH= '/shared/common/node-v10.15.3-linux-x64/bin'
        YARN_PATH  = '/shared/common/yarn/1.15.2/bin'
        PATH       = "${PATH}"                                          +
                     ':/shared/common/jq/1.6'                           +
                     ':/shared/common/apache-ant-1.9.6/bin'             +
                     ':/shared/common/maven/apache-maven-3.6.0/bin/'    +
                     ':/shared/common/node-v10.15.3-linux-x64/bin'      +
                     ':/shared/common/yarn/1.15.2/bin'                  +
                     ':/shared/common/java/openjdk/jdk-11/bin'
        MAVEN_OPTS = '-Xmx4G'
        JAVA_HOME  = '/shared/common/java/openjdk/jdk-11'
    }

    stages {

        stage('Compute Version') {
            steps {
                script {
                    sh 'n4js/releng/utils/scripts/compute-version.sh'
                    N4JS_VERSION = sh(returnStdout: true, script: 'jq -r ".n4jsVersion" n4js/version-info.json').trim();
                    // note: we never publish any of the n4js-libs in this build,
                    // so we can ignore the other properties in file version-info.json
                }
            }
        }

        stage('Build (no tests)') {
            steps {
                dir('n4js') {
                    sh "mvn $MAVEN_OPTIONS -PbuildProduct -DexcludeJRE -DnoTests clean verify"
                }
            }
        }

        stage('Sign macOS product') {
            steps {
                dir('n4js/builds/org.eclipse.n4js.product.build/target/products') {
                    sh "pwd"

                    // sign the macOS product
                    sh """\
                        mv      n4jside-macosx.cocoa.x86_64.zip          unsigned_n4jside-macosx.cocoa.x86_64.zip
                        curl -o n4jside-macosx.cocoa.x86_64.zip -F file=@unsigned_n4jside-macosx.cocoa.x86_64.zip http://build.eclipse.org:31338/macsign.php
                        rm unsigned_n4jside-macosx.cocoa.x86_64.zip
                    """

                    // bundle macOS product into a signed .dmg image
                    sh """\
                        curl -o n4jside-macosx.cocoa.x86_64.dmg -F sign=true -F source=@n4jside-macosx.cocoa.x86_64.zip http://build.eclipse.org:31338/dmg-packager
                    """
                }
            }
        }

        stage('Deploy') {
            steps {
                echo "Deploying version ${N4JS_VERSION} of N4JS IDE and headless builder ..."

                echo 'START: moving old products / update sites to archive.eclipse.org (those that are older than a week):'
//                sh """\
//                    cd /home/data/httpd/download.eclipse.org/n4js
//                    find products/nightly -mindepth 1 -maxdepth 1 -type d -not -name LATEST -mtime +7 -print -exec mv {} /home/data/httpd/archive.eclipse.org/n4js/{} \\;
//                    find updates/nightly  -mindepth 1 -maxdepth 1 -type d -not -name LATEST -mtime +7 -print -exec mv {} /home/data/httpd/archive.eclipse.org/n4js/{} \\;
//                """
                echo 'END: moving old products / update sites to archive.eclipse.org'

                echo 'START: copying new products / update site to download.eclipse.org:'
//                sh """\
//                    mkdir  /home/data/httpd/download.eclipse.org/n4js/products/nightly/$N4JS_VERSION
//                    cp     n4js/builds/org.eclipse.n4js.product.build/target/products/*.zip            /home/data/httpd/download.eclipse.org/n4js/products/nightly/$N4JS_VERSION
//                    cp     n4js/builds/org.eclipse.n4js.product.build/target/products/*.dmg            /home/data/httpd/download.eclipse.org/n4js/products/nightly/$N4JS_VERSION
//                    cp     n4js/tools/org.eclipse.n4js.hlc/target/n4jsc.jar                            /home/data/httpd/download.eclipse.org/n4js/products/nightly/$N4JS_VERSION
//
//                    rm -rf /home/data/httpd/download.eclipse.org/n4js/products/nightly/LATEST
//                    mkdir  /home/data/httpd/download.eclipse.org/n4js/products/nightly/LATEST
//                    cp -R  /home/data/httpd/download.eclipse.org/n4js/products/nightly/$N4JS_VERSION/* /home/data/httpd/download.eclipse.org/n4js/products/nightly/LATEST
//
//                    mkdir  /home/data/httpd/download.eclipse.org/n4js/updates/nightly/$N4JS_VERSION
//                    cp -R  n4js/builds/org.eclipse.n4js.product.build/target/repository/*              /home/data/httpd/download.eclipse.org/n4js/updates/nightly/$N4JS_VERSION
//
//                    rm -rf /home/data/httpd/download.eclipse.org/n4js/updates/nightly/LATEST
//                    mkdir  /home/data/httpd/download.eclipse.org/n4js/updates/nightly/LATEST
//                    cp -R  /home/data/httpd/download.eclipse.org/n4js/updates/nightly/$N4JS_VERSION/*  /home/data/httpd/download.eclipse.org/n4js/updates/nightly/LATEST
//                """
                echo 'END: copying new products / update site to download.eclipse.org'

                // show a summary
                script {
                    def output = sh returnStdout: true, script: """\
                        echo ******************** Products on download server:
                        ls -l /home/data/httpd/download.eclipse.org/n4js/products/nightly
                        echo ******************** Update sites on download server:
                        ls -l /home/data/httpd/download.eclipse.org/n4js/updates/nightly
                        echo ******************** Products on archive server:
                        ls -l /home/data/httpd/archive.eclipse.org/n4js/products/nightly
                        echo ******************** Update sites on archive server:
                        ls -l /home/data/httpd/archive.eclipse.org/n4js/updates/nightly
                        echo ********************
                    """

                    echo "$output"
                }
            }
        }
    }

    post {
        cleanup {
            deleteDir()
         }
    }
}
