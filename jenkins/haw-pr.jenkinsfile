/*
 * Copyright (c) 2019 HAW Hamburg
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Based on eclipse-nightly.jenkinsfile
 */
pipeline {
    agent any

    environment {
    	// paths to tools, some common paths you may found on other machines are commented out
        NODEJS_PATH= '/usr/bin' // '/shared/common/node-v10.15.3-linux-x64/bin'
        YARN_PATH  = '/usr/bin' // '/shared/common/yarn/1.15.2/bin'
        // PATH       = "${PATH}"
                     // ":/shared/common/node-v10.15.3-linux-x64/bin"      +
                     // ":/shared/common/java/openjdk/jdk11-x64/bin"
        MAVEN_OPTS = '-Xmx4G'
        JAVA_HOME  = '/usr/lib/jvm/java-11-openjdk-amd64'
        TIMESTAMP  = new Date().format("yyyyMMddHHmm")
   }

    stages {
        stage('Build and Test') {
            steps {
                echo 'Starting Xvnc'
                wrap([$class: 'Xvnc', takeScreenshot: false, useXauthority: true]) {
                    echo 'Building and testing, using display ' + DISPLAY
                    script {
                    	def envvars = [ 
                    		'-DDISPLAY=localhost'+DISPLAY,
                            '-DargLine="-DDISPLAY=localhost'+DISPLAY+'"'
                    	].join(' ')
                        def options = [
                            '--batch-mode',
                            //'--quiet',
                            '--update-snapshots',
                            '--show-version',
                            '-Dtycho.localArtifacts=ignore',
                            // for adjusting the script only, renable later on:
                             '-Dmaven.test.failure.ignore',
                             "--fail-at-end",
                            '-DWORKSPACE=' + env.WORKSPACE,
                            '-DexcludeJRE'                               
                        ].join(' ')
                        def profiles = [
                            'buildProduct',
                            'execute-plugin-tests',
                            'execute-plugin-ui-tests',
                            'execute-ecma-tests',
                            'execute-accesscontrol-tests',
                         //   'execute-smoke-tests' // #1533
                         //'execute-hlc-integration-tests'
                        ].join(',')

                        sh """\
                            pwd
                            git log -n 1
                            npm version
                        """
                        sh "mvn ${envvars} clean verify -P${profiles} ${options}"
                        
                        // The following calls may be used for testing purposes:
                        // sh "mvn clean verify ${options}"
                        // for quick testing:
                        // sh "mvn -o clean"

						// prints out the target folder, not needed here but useful in other cases
                        // sh "ls -Ral builds/org.eclipse.n4js.product.build/target/repository/"
                    }
                } // end wrap
            } // end steps
        } // end stage
        /* commented out here, may be introduced again, left skeleton here:
        stage('Deploy') {
            steps {
                echo 'Deploying....'
            }
        }*/
    }

    post {
        always {
         //   archiveArtifacts allowEmptyArchive: true, artifacts: '**/builds/**/target/products/*.zip'
         //   archiveArtifacts allowEmptyArchive: true, artifacts: '**/tools/**/target/n4jsc.jar'
         //   archiveArtifacts allowEmptyArchive: true, artifacts: '**/logs/*.log'
         //   archiveArtifacts allowEmptyArchive: true, artifacts: '**/tests/**/target/**/*-output.txt'

            junit '**/surefire-reports/**/*.xml'
            //junit '**/failsafe-reports/**/*.xml'
        }
        cleanup {
            // Execute after every other post condition has been evaluated, regardless of status
            // See https://jenkins.io/doc/book/pipeline/syntax/#post
            
            // "real" cleaning will be added after some real world experience with the script
            echo "Not cleaning yet, please check server yourself!"
            // echo 'Cleaning up workspace'
            // Not today: deleteDir()
        }
    }
}