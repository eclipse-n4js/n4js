<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (c) 2016 NumberFour AG.
All rights reserved. This program and the accompanying materials
are made available under the terms of the Eclipse Public License v1.0
which accompanies this distribution, and is available at
http://www.eclipse.org/legal/epl-v10.html

Contributors:
  NumberFour AG - Initial API and implementation
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.eclipse.n4js</groupId>
		<artifactId>org.eclipse.n4js.tools</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<artifactId>org.eclipse.n4js.hlc</artifactId>
	<name>org.eclipse.n4js.hlc</name>
	<description>Headless N4js compiler bundled into one jar.</description>

	<properties>
		<!-- hint: also look at inherited properties -->
		<hlc.jar-descriptorRef>jar-with-dependencies</hlc.jar-descriptorRef>
		<hlc.jar-longname>${project.artifactId}-${project.version}-${hlc.jar-descriptorRef}.jar</hlc.jar-longname>
		<hlc.plugin-folder>plugins</hlc.plugin-folder>
		<jackson.version>2.5.0</jackson.version>
	</properties>
	<build>
		<sourceDirectory>src/main/java</sourceDirectory>

		<plugins>
			<!-- http://stackoverflow.com/questions/574594/how-can-i-create-an-executable-jar-with-dependencies-using-maven
				Compile with "mvn clean compile assembly:single" -->
			<plugin>
				<!-- Building a single jar for command-line usage. -->
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<!-- Also binding to packaging phase -->
					<execution>
						<id>N4jsCompileFatJar</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<archive>
						<manifest>
							<mainClass>org.eclipse.n4js.hlc.N4jsc</mainClass>
						</manifest>
					</archive>
					<!--
					<descriptorRefs>
						<descriptorRef>${hlc.jar-descriptorRef}</descriptorRef>
					</descriptorRefs>
					-->
					<descriptors>
						<descriptor>assembly-jar-one.xml</descriptor>
					</descriptors>
				</configuration>
			</plugin>

			<!-- copy the longname-jar to a usable shorthand name. -->
			<plugin>
				<groupId>com.coderplus.maven.plugins</groupId>
				<artifactId>copy-rename-maven-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<id>copy-file</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<sourceFile>${project.build.directory}/${hlc.jar-longname}</sourceFile>
							<destinationFile>${project.build.directory}/${hlc.jar-shortname}</destinationFile>
							<overWrite>true</overWrite>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- copy plugin-list -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${maven-dependency-plugin.version}</version>
				<executions>
					<execution>
						<id>copy-n4js-plugins</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.eclipse.n4js</groupId>
									<artifactId>org.eclipse.n4js.runner.nodejs</artifactId>
									<version>0.0.1-SNAPSHOT</version>
									<type>jar</type>
									<destFileName>optional-new-name.jar</destFileName>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${project.build.directory}/${hlc.plugin-folder}</outputDirectory>
							<overWriteReleases>true</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<!-- Executing the build as part of the integration test in a separate 
					vm. -->
				<!-- config-HELP with:: mvn exec:help -Ddetail=true -Dgoal=exec -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>it-of-n4js-compiler-command</id>
						<phase>integration-test</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<systemProperties>
								<NODEJS_PATH>${NODEJS_PATH}</NODEJS_PATH>
								<org.eclipse.n4js.defaultNodePath>${org.eclipse.n4js.defaultNodePath}</org.eclipse.n4js.defaultNodePath>
							</systemProperties>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<systemProperties>
						<NODEJS_PATH>${NODEJS_PATH}</NODEJS_PATH>
						<org.eclipse.n4js.defaultNodePath>${org.eclipse.n4js.defaultNodePath}</org.eclipse.n4js.defaultNodePath>
					</systemProperties>
					<executable>java</executable>
					<arguments>
						<argument>-jar</argument>
						<argument>${project.build.directory}/${hlc.jar-shortname}</argument>
						<argument>--help</argument><!-- this will show helpl only -->
						<!-- <argument>-projectroot</argument> <argument>${project.build.directory}/test</argument>
							<argument>a/b/c/A.n4js</argument> <argument>-version</argument> -->
					</arguments>
					<!-- optional -->
					<!-- <workingDirectory>/tmp</workingDirectory> -->
					<!-- successCodes>0</successCodes -->
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${jdk-version}</source>
					<target>${jdk-version}</target>
				</configuration>
			</plugin>


			<!--
			The following will deploy this artifact to a temporary maven repository (aka "local build repo").
			This be used by the N4JS IDE extensions builds to extend / test N4JSC. There are several
			other cases like this; search for "Enable deploy:". THIS IS TEMPORARY AND SHOULD BE CLEANED-UP!
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>${maven-deploy-plugin.version}</version>
				<!-- Enable deploy: -->
					<executions>
						<execution>
							<id>deploy-to-local-build-repo</id>
							<!-- rebind to default phase 'deploy' -->
							<phase>deploy</phase>
							<goals>
								<goal>deploy</goal>
							</goals>
							<configuration>
								<altDeploymentRepository>local-build-repo::default::file:${local-snapshot-deploy-folder}</altDeploymentRepository>
							</configuration>
						</execution>
					</executions>
			</plugin>

		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<!-- M2E specific lifecycle configruation to suppress the warning: "maven-enforcer-plugin 
						(goal "enforce") is ignored by m2e." source: http://stackoverflow.com/a/13043842 -->
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-enforcer-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>enforce</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>





	<dependencies>
		<dependency>
			<groupId>org.eclipse.n4js</groupId>
			<artifactId>org.eclipse.n4js.transpiler</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.n4js</groupId>
			<artifactId>org.eclipse.n4js.transpiler.es</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.n4js</groupId>
			<artifactId>org.eclipse.n4js.n4mf</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.n4js</groupId>
			<artifactId>org.eclipse.n4js.n4mf.model</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.n4js</groupId>
			<artifactId>org.eclipse.n4js.external.libraries</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.n4js</groupId>
			<artifactId>org.eclipse.n4js.hlc.base</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.n4js</groupId>
			<artifactId>org.eclipse.n4js</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.n4js</groupId>
			<artifactId>org.eclipse.n4js.model</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.n4js</groupId>
			<artifactId>org.eclipse.n4js.utils</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.n4js</groupId>
			<artifactId>org.eclipse.n4js.ts.model</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.n4js</groupId>
			<artifactId>org.eclipse.n4js.ts</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.n4js</groupId>
			<artifactId>org.eclipse.n4js.common.unicode</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.n4js</groupId>
			<artifactId>org.eclipse.n4js.environments</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.n4js</groupId>
			<artifactId>org.eclipse.n4js.generator</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.n4js</groupId>
			<artifactId>org.eclipse.n4js.generator.common</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.n4js</groupId>
			<artifactId>org.eclipse.n4js.generator.headless</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.n4js</groupId>
			<artifactId>org.eclipse.n4js.regex</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.n4js</groupId>
			<artifactId>org.eclipse.n4js.jsdoc</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<!-- N4JSX -->
		<dependency>
			<groupId>org.eclipse.n4js</groupId>
			<artifactId>org.eclipse.n4js.n4jsx</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.n4js</groupId>
			<artifactId>org.eclipse.n4js.n4jsx.model</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<!-- Runner base -->
		<dependency>
			<groupId>org.eclipse.n4js</groupId>
			<artifactId>org.eclipse.n4js.runner</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<!-- Node Runner -->
		<dependency>
			<groupId>org.eclipse.n4js</groupId>
			<artifactId>org.eclipse.n4js.runner.nodejs</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<!-- Tester base -->
		<dependency>
			<groupId>org.eclipse.n4js</groupId>
			<artifactId>org.eclipse.n4js.tester</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlets</artifactId>
			<version>[9.2.9.v20150224]</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-util-ajax</artifactId>
			<version>[9.2.9.v20150224]</version>
		</dependency>
		<!-- Node Tester -->
		<dependency>
			<groupId>org.eclipse.n4js</groupId>
			<artifactId>org.eclipse.n4js.tester.nodejs</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<!-- Test helper for the integration tests. -->
		<dependency>
			<groupId>org.eclipse.n4js</groupId>
			<artifactId>org.eclipse.n4js.tests.helper</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.xtext</groupId>
			<artifactId>org.eclipse.xtext</artifactId>
			<version>${xtext.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.xtext</groupId>
			<artifactId>org.eclipse.xtext.common.types</artifactId>
			<version>${xtext.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.xtext</groupId>
			<artifactId>org.eclipse.xtext.xbase.lib</artifactId>
			<version>${xtext.version}</version>
		</dependency>
		<dependency>
  		  <groupId>args4j</groupId>
  		  <artifactId>args4j</artifactId>
  		  <version>2.0.31</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-maven-plugin</artifactId>
			<version>9.2.9.v20150224</version>
		</dependency>
		<!-- Missing IWorkspcae -->
		<dependency>
			<groupId>org.eclipse.platform</groupId>
			<artifactId>org.eclipse.core.resources</artifactId>
			<version>${org.eclipse.core.resources-version}</version>
		</dependency>
		<!-- xsemantics -->
		<dependency>
			<groupId>net.sf.xsemantics</groupId>
			<artifactId>it.xsemantics.dsl</artifactId>
			<version>1.12.0</version>
		</dependency>
		<!-- Xcore lib -->
		<dependency>
			<groupId>org.eclipse.emf</groupId>
			<artifactId>org.eclipse.emf.ecore.xcore.lib</artifactId>
			<version>${org.eclipse.emf.ecore.xcore.lib-version}</version>
		</dependency>
<!--  Smaller version of com.ibm.icu - base path only :
		<dependency>
		    <groupId>at.bestsolution.eclipse</groupId>
		    <artifactId>com.ibm.icu.base</artifactId>
		    <version>54.1.1</version>
		</dependency>
 -->
 		<dependency>
				<groupId>com.ibm.icu</groupId>
				<artifactId>icu4j</artifactId>
				<version>56.1</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jgit</groupId>
			<artifactId>org.eclipse.jgit</artifactId>
			<version>4.6.0.201612231935-r</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.12</version>
		</dependency>

		<!-- Fixed version of guava -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>[15.0.0]</version>
		</dependency>
	</dependencies>
</project>
