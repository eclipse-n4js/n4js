<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (c) 2016 NumberFour AG.
All rights reserved. This program and the accompanying materials
are made available under the terms of the Eclipse Public License v1.0
which accompanies this distribution, and is available at
http://www.eclipse.org/legal/epl-v10.html

Contributors:
  NumberFour AG - Initial API and implementation
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>org.eclipse.n4js.product.build</artifactId>
	<packaging>eclipse-repository</packaging>

	<parent>
		<groupId>org.eclipse.n4js</groupId>
		<artifactId>org.eclipse.n4js.builds</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<scm>
		<connection>scm:git:ssh://git@github.com/eclipse/n4js.git</connection>
	</scm>

	<profiles>
		<profile>
			<id>stagingNpmRegistry</id>
			<activation>
				<property>
					<name>env.STAGING_NPM_REGISTRY</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>${codehaus-exec-maven-plugin.version}</version>
						<executions>
							<!-- Publish n4js-libs to staging area if the env variable STAGING_NPM_REGISTRY is set.
							The staging area is the place where we publish n4js-libs to, Other builds can retrieve n4js-lib npms from the staging area.
							This is done here because first the publishing should only happen once and second it only makes sense to publish when we can build the product.
							 -->
							<execution>
								<id>publish-n4js-libs</id>
								<phase>verify</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>bash</executable>
									<arguments>
										<argument>${project.basedir}/../../releng/utils/scripts/publish-n4js-libs.sh</argument>
										<argument>bridge</argument>
										<argument>${env.STAGING_NPM_REGISTRY}</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>buildProduct</id>
				<properties>
					<maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>
					<buildTime>${maven.build.timestamp}</buildTime>
					<gitSha1>${buildNumber}</gitSha1>
				</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>buildnumber-maven-plugin</artifactId>
						<version>${codehaus-buildnumber-maven-plugin.version}</version>
						<executions>
							<execution>
								<phase>validate</phase>
								<goals>
									<goal>create</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<version>${maven-resources-plugin.version}</version>
						<executions>
							<execution>
								<id>process-additional-resources</id>
								<phase>prepare-package</phase>
								<configuration>
									<outputDirectory>${project.build.directory}/repository</outputDirectory>
									<overwrite>true</overwrite>
									<resources>
										<resource>
											<directory>filtertemplates</directory>
											<includes>
												<include>*</include>
											</includes>
											<filtering>true</filtering>
										</resource>
									</resources>
								</configuration>
								<goals>
									<goal>copy-resources</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>tycho-p2-repository-plugin</artifactId>
						<version>${tycho-version}</version>
						<configuration>
							<includeAllDependencies>true</includeAllDependencies>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>tycho-p2-director-plugin</artifactId>
						<version>${tycho-version}</version>
						<executions>
							<execution>
								<id>materialize-products</id>
								<goals>
									<goal>materialize-products</goal>
								</goals>
							</execution>
							<execution>
								<id>archive-products</id>
								<goals>
									<goal>archive-products</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<products>
								<product>
									<id>org.eclipse.n4js.product.product</id>
									<rootFolders>
										<!-- for MacOSX, make sure you use a folder ending with .app , see bug
											463670 -->
										<macosx>n4jside.app</macosx>
										<linux>n4jside</linux>
										<win32>n4jside</win32>
									</rootFolders>
									<archiveFileName>n4jside</archiveFileName>
								</product>
							</products>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
