/*
 * Copyright (c) 2018 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */
pipeline {
    agent any
    options {
        buildDiscarder(
            logRotator(
                numToKeepStr:          '20',
                artifactDaysToKeepStr: '14',
                artifactNumToKeepStr:  '20',
                daysToKeepStr:         '14'))
        disableConcurrentBuilds()
        timeout(time: 4, unit: 'HOURS')
        timestamps()
    }

    environment {
        NODEJS_PATH= '/shared/common/node-v8.11.1-linux-x64/bin'
        PATH       = "${PATH}"                                          +
                     ":/shared/common/apache-ant-1.9.6/bin"             +
                     ":/shared/common/maven/apache-maven-3.5.2/bin/"    +
                     ":/shared/common/node-v8.11.1-linux-x64/bin"       +
                     ":/shared/common/java/oracle/jdk1.8.0_162_x64/bin"
    }

    triggers {
        cron   ('H   23 * * *') // Nightly build every day a 11pm (23:00)
    }

    stages {

        stage('build') {
            steps {
                wrap([$class: 'Xvnc', takeScreenshot: false, useXauthority: true]) {
                    dir('n4js'){
                        script {
                            def options = [
                                '--batch-mode',
                                '--quiet',
                                '--update-snapshots'
                                '--show-version',
                                '--errors',
                                '-Dtycho.localArtifacts=ignore',
                                '-Dmaven.test.failure.ignore',
                                '-DWORKSPACE=' + env.WORKSPACE
                            ].join(' ')
                            def profiles = [
                                'execute-plugin-tests',
                                'execute-plugin-ui-tests',
                                'execute-ecma-tests',
                                'execute-accesscontrol-tests',
                                'execute-smoke-tests',
                                'execute-hlc-integration-tests'
                            ].join(',')

                            sh """\
                                pwd
                                git log -n 1
                                npm version
                            """
                            sh "mvn clean verify -P${profiles} ${options}"
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            archiveArtifacts allowEmptyArchive: false, artifacts: '**/builds/**/target/products/*.zip'
            archiveArtifacts allowEmptyArchive: false, artifacts: '**/tools/**/target/n4jsc.jar'
            archiveArtifacts allowEmptyArchive: true, artifacts: '**/logs/*.log'
            archiveArtifacts allowEmptyArchive: true, artifacts: '**/tests/**/target/**/*-output.txt'

            junit '**/surefire-reports/**/*.xml'
            junit '**/failsafe-reports/**/*.xml'
        }
        cleanup {
            // aexcute here in case archiving fails in 'always'
            mail to: 'jakub.siberski@numberfour.eu',
                 subject: "${currentBuild.result}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                 body:  """\
                        ${currentBuild.result}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':
                        Check console output at '${env.BUILD_URL}'
                        """

            // Execute after every other post condition has been evaluated, regardless of status
            // See https://jenkins.io/doc/book/pipeline/syntax/#post
            echo 'Cleaning up workspace'
            deleteDir()
         }
    }
}
