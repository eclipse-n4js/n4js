/*
 * Copyright (c) 2017 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

//=============================================================================
// Test Data
//=============================================================================

import {N4Injector} from "n4js/lang/N4Injector";
import {Assert} from "org/eclipse/n4js/mangelhaft/assert/Assert";
interface I{}
@Singleton
class S implements I{}

@Binder
@Bind(I, S)
class B{}

@GenerateInjector
@UseBinder(B)
class C {
    @Inject s: S;
    @Inject s2: I;
    @Inject ps: N4Provider<S>;
    @Inject ps2: N4Provider<I>;
}

//=============================================================================
// Tests
//=============================================================================

/**
 *
 */
export class TestBasicSingletonHandling{
    private c: C = N4Injector.of(C).create(C);

    @Test
    singletonInejctedAsFields(){
        Assert.isInstanceOf(this.c.s, S);
        Assert.isInstanceOf(this.c.s2, S);
        Assert.strictEqual(this.c.s, this.c.s2);
    }

    @Test
    singletonProviders(){
        let providedS = this.c.ps.get();
        let providedS2 = this.c.ps2.get();
        Assert.isInstanceOf(providedS, S);
        Assert.isInstanceOf(providedS2, S);
        Assert.strictEqual(providedS, providedS2);
    }

    @Test
    singletonProviderAlwaysReturnsTheSameInstance(){
        let first = this.c.ps.get();

        Assert.strictEqual(first, this.c.ps.get());
        Assert.strictEqual(first, this.c.ps.get());
        Assert.strictEqual(first, this.c.ps.get());
        Assert.strictEqual(first, this.c.ps.get());
        Assert.strictEqual(first, this.c.ps.get());

        Assert.strictEqual(first, this.c.ps2.get());
        Assert.strictEqual(first, this.c.ps2.get());
        Assert.strictEqual(first, this.c.ps2.get());
        Assert.strictEqual(first, this.c.ps2.get());
        Assert.strictEqual(first, this.c.ps2.get());
    }
}
