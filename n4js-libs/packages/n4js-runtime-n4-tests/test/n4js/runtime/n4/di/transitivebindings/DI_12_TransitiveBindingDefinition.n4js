/*
 * Copyright (c) 2017 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

//=============================================================================
// Test Data
//=============================================================================

import {N4Injector} from "n4js/lang/N4Injector";
import {Assert} from "org/eclipse/n4js/mangelhaft/assert/Assert";
class A { }
class B extends A { }
class C extends B { }

@Bind(A, B)
@Binder
class Binder { }

@Bind(B, C)
@Binder
class Binder2 { }

@UseBinder(Binder)
@GenerateInjector
class D {
    @Inject whoAmI: A;
}

@UseBinder(Binder2)
@WithParentInjector(D)
@GenerateInjector
class E {
    @Inject whoAmI: A;
}

//=============================================================================
// Tests
//=============================================================================

export class TestCreationWithParentInjector{

    @Test
    canCreateWithDeclaredTypeOfParent(){
        let injD = N4Injector.of(D);
        let d: D = injD.create(D);
        Assert.isInstanceOf(d.whoAmI, B);
    }

    @Test
    canNotCreateWithUnDeclaredTypeOfParent(){
        let injD = N4Injector.of(D);
        let injE = N4Injector.of(E, injD);
        let e: E = injE.create(E);
        Assert.isInstanceOf(e.whoAmI, C);
    }
}
