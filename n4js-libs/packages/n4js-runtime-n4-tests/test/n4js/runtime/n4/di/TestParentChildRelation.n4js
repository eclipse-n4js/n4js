/*
 * Copyright (c) 2017 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

//=============================================================================
// Set Up
//=============================================================================

import {N4Injector} from "n4js/lang/N4Injector";
import {Assert} from "org/eclipse/n4js/mangelhaft/assert/Assert";
@GenerateInjector
class DIC {}

@GenerateInjector
@WithParentInjector(DIC)
class SubDIC{}


@GenerateInjector
@WithParentInjector(SubDIC)
class SubSubDIC{}

//=============================================================================
// Test
//=============================================================================

/**
 * @testee N4Injector
 */
export public class TestParentChildRelation {

    @Test
    testCanCheckIfInjectorIsOfGivenDIC() {
        let dicInj = N4Injector.of(DIC);
        Assert.isTrue(dicInj.isInjectorOf(DIC))
    }
    @Test
    testCanCheckIfInejctorIsNotOfGivenComponentButIsCompatible() {
        let dicInj = N4Injector.of(DIC);
        let subdicInj = N4Injector.of(SubDIC, dicInj);
        Assert.isFalse(subdicInj.isInjectorOf(DIC))
        Assert.isTrue(subdicInj.isCompatibleWith(DIC))
    }
    @Test
    testCanCheckCompatibleWithDistantParent() {
        let dicInj = N4Injector.of(DIC);
        let subdicInj = N4Injector.of(SubDIC, dicInj);
        let subsubdicInj = N4Injector.of(SubSubDIC, subdicInj);
        subsubdicInj;
        Assert.isFalse(subdicInj.isInjectorOf(DIC))
        Assert.isTrue(subdicInj.isCompatibleWith(DIC))
    }
}

