/*
 * Copyright (c) 2017 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

//=============================================================================
// Test Data
//=============================================================================

import {N4Injector} from "n4js/lang/N4Injector";
import {Assert} from "org/eclipse/n4js/mangelhaft/assert/Assert";
class X { }
class Y extends X { }
class Z extends Y { }

@Bind(X, Y)
@Binder
class X2YBinder { }

@Bind(Y, Z)
@Binder
class Y2XBinder { }

@GenerateInjector
class A { @Inject whoAmI: X; }

@GenerateInjector
@WithParentInjector(A)
@UseBinder(X2YBinder)
class B { @Inject whoAmI: X; }

@GenerateInjector
@WithParentInjector(B)
@UseBinder(Y2XBinder)
class C { @Inject whoAmI: X; }

@GenerateInjector
@WithParentInjector(C)
class D { @Inject whoAmI: X; }

//=============================================================================
// Tests
//=============================================================================

export class TestCreationWithParentInjector{
    private injA: N4Injector;
    private injB: N4Injector;
    private injC: N4Injector;
    private injD: N4Injector;

    @BeforeAll
    m(){
        this.injA = N4Injector.of(A);
        this.injB = N4Injector.of(B, this.injA);
        this.injC = N4Injector.of(C, this.injB);
        this.injD = N4Injector.of(D, this.injC);
    }

    @Test
    instanceAholdsX(){
        let a = this.injA.create(A);
        Assert.isInstanceOf(a.whoAmI, X);
    }

    @Test
    instanceBholdsY(){
        let b = this.injB.create(B);
        Assert.isInstanceOf(b.whoAmI, Y);
    }

    @Test
    instanceCholdsZ(){
        let c = this.injC.create(C);
        Assert.isInstanceOf(c.whoAmI, Z);
    }

    @Test
    instanceDholdsZ(){
        let d = this.injD.create(D);
        Assert.isInstanceOf(d.whoAmI, Z);
    }
}
