/*
 * Copyright (c) 2017 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

//=============================================================================
// Set Up
//=============================================================================

import {N4Injector} from "n4js/lang/N4Injector";
import {Assert} from "org/eclipse/n4js/mangelhaft/assert/Assert";
interface IA{}
class A implements IA{}

@Binder
@Bind(IA,A)
class B{}

@GenerateInjector
@UseBinder(B)
class DIC {
    @Inject a: IA;
}

@GenerateInjector
@WithParentInjector(DIC)
class SubDIC{
    @Inject a: IA;
}

class A2 implements IA{}

@Binder
@Bind(IA, A2)
class B2{}

@GenerateInjector
@UseBinder(B2)
@WithParentInjector(SubDIC)
class SubSubDIC{
    @Inject a: IA;
}

//=============================================================================
// Test
//=============================================================================

/**
 * @testee N4Injector
 */
export public class TestParentChildBindings {

    @Test
    testSimpleSingleton() {
        let dicInj = N4Injector.of(DIC);
        let dic = dicInj.create(DIC);
        Assert.isInstanceOf(dic.a, A);
        let subdicInj = N4Injector.of(SubDIC, dicInj);
        let subdic = subdicInj.create(SubDIC);
        Assert.isInstanceOf(subdic.a, A);
        let subsubdic = N4Injector.of(SubSubDIC, subdicInj).create(SubSubDIC);
        Assert.isInstanceOf(subsubdic.a, A2);
        Assert.isNotInstanceOf(subsubdic.a, A);
    }
}

