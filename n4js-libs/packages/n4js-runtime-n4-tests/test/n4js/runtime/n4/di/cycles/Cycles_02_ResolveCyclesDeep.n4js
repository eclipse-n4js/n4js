/*
 * Copyright (c) 2017 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

//=============================================================================
// Set Up
//=============================================================================

import {N4Injector} from "n4js/lang/N4Injector";
import {Assert} from "org/eclipse/n4js/mangelhaft/assert/Assert";
interface IFoo{}
interface IBar{}

class X{@Inject foo: IFoo;}
class Bar implements IBar{@Inject x: X;}
class Z{@Inject bar: IBar;}
class Y{@Inject z: Z;}
class Foo implements IFoo{@Inject y: Y;}

@Binder
@Bind(IFoo, Foo)
@Bind(IBar, Bar)
class B{}

@GenerateInjector
@UseBinder(B)
class DIC {}


//=============================================================================
// Test
//=============================================================================

/**
 * @testee N4Injector
 */
export class Cycles_02_ResolveCyclesDeep {

    private inj =  N4Injector.of(DIC);

    @Test
    allTypesInInjectionChainBecomeSingletons() {
        let y1 = this.inj.create(Y);
        let z1 = y1.z;
        let b1 = z1.bar
        let x1 = (b1 as Bar).x;
        let f1 = x1.foo as Foo;
        let y2 = f1.y;
        let z2 = y2.z;
        let b2 = z2.bar;
        let x2 = (b2 as Bar).x;
        let f2 = x2.foo as Foo;

        Assert.strictEqual(y1,y2);
        Assert.strictEqual(z1,z2);
        Assert.strictEqual(b1,b2);
        Assert.strictEqual(x1,x2);
        Assert.strictEqual(f1,f2);
    }
}

