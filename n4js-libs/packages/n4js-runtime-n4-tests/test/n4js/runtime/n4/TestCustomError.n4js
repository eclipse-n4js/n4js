/*
 * Copyright (c) 2017 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */
import {Assert} from "org/eclipse/n4js/mangelhaft/assert/Assert"

class MyErrorBase extends Error {
    constructor(message: string, n: number) {
        super(message);
        this.more = n;
    }

    more: number = 5;

    method(): number {
        return this.more;
    }
}

class MyError extends MyErrorBase {
}

export public class TestCustomError {
    private subject: MyError;

    constructor() {
        try {
            throw new MyError("err", 7);
        } catch (exc) {
            this.subject = exc as MyError;
        }
    }

    @Test @Description("instanceof")
    testInstanceOf(): void {
        Assert.isTrue(this.subject instanceof MyError, "is MyError");
        Assert.isTrue(this.subject instanceof MyErrorBase, "is MyErrorBase");
        Assert.isTrue(this.subject instanceof Error, "is Error");
        Assert.isTrue(this.subject instanceof Object, "is Object");
    }

    @Test @Description("fields")
    testFields(): void {
        Assert.equal(this.subject.more, 7);
        Assert.equal(this.subject.method(), 7);
        Assert.equal(this.subject.name, "MyError");
        Assert.equal(this.subject.message, "err", "message");
        Assert.isNotNullOrUndefined(MyError.n4type, "has n4type");
        Assert.equal(MyError.n4type.origin, TestCustomError.n4type.origin, "same origin");
        Assert.isNotNullOrUndefined(this.subject.stack);
    }
}
