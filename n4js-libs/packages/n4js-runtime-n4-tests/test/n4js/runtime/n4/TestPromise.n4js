/*
 * Copyright (c) 2017 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */
import {Assert} from "org/eclipse/n4js/mangelhaft/assert/Assert";

/**
 * Good advice:
 * https://www.w3.org/2001/tag/doc/promises-guide
 */
export public class TestPromise {
    private promise: Promise<number, Error>;

    @BeforeAll @Description("initialize promise")
    public beforeAll1() {
        this.promise = new Promise<number, Error>(function(resolve,reject) {});
    }

    @Test @Description("basic Promise instance defined correctly")
    public test1() {
        Assert.strictEqual(typeof this.promise.then, "function");
        Assert.strictEqual(typeof this.promise.catch, "function");
    }

    @Test @Description("basic Promise statics defined correctly")
    public test2() {
        Assert.strictEqual(typeof Promise.reject, "function");
        Assert.strictEqual(typeof Promise.resolve, "function");
        Assert.strictEqual(typeof Promise.all, "function");
        Assert.strictEqual(typeof Promise.race, "function");
    }

    @Test @Description("then handler execute asynchronously on resolved promise")
    public async asyncThenOnResolvedPromise() {
        let res = 1,
            resolved = Promise.resolve(2);

        let promise = resolved.then(function(n=) {
            res = n;
        });
        Assert.equal(res, 1);
        await promise;
        Assert.equal(res, 2);
    }
}
