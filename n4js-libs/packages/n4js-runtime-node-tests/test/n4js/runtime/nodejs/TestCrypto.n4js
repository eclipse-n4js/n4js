/*
 * Copyright (c) 2017 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */
import {AbstractVerifyRuntimeSupport} from "AbstractVerifyRuntimeSupport";
import {createCipher, createCipheriv, createDecipher, createDecipheriv, createDiffieHellman, createECDH, createHash, createHmac, createSign, createVerify, getCiphers, getCurves, getDiffieHellman, getHashes, pbkdf2, pbkdf2Sync, privateDecrypt, privateEncrypt, publicDecrypt, publicEncrypt, randomBytes, setEngine} from "crypto";

export public class TestCrypto extends AbstractVerifyRuntimeSupport {

    @Test
    public __createCipher___001_basic_function_exists(): void {
        let _testSubject = this.getTestSubject(createCipher, 'createCipher');
        this.verifyFunction(_testSubject as Function, null ,'createCipher');
    }

    @Test
    public __createCipheriv___001_basic_function_exists(): void {
        let _testSubject = this.getTestSubject(createCipheriv, 'createCipheriv');
        this.verifyFunction(_testSubject as Function, null ,'createCipheriv');
    }

    @Test
    public __createDecipher___001_basic_function_exists(): void {
        let _testSubject = this.getTestSubject(createDecipher, 'createDecipher');
        this.verifyFunction(_testSubject as Function, null ,'createDecipher');
    }

    @Test
    public __createDecipheriv___001_basic_function_exists(): void {
        let _testSubject = this.getTestSubject(createDecipheriv, 'createDecipheriv');
        this.verifyFunction(_testSubject as Function, null ,'createDecipheriv');
    }

    @Test
    public __createDiffieHellman___001_basic_function_exists(): void {
        let _testSubject = this.getTestSubject(createDiffieHellman, 'createDiffieHellman');
        this.verifyFunction(_testSubject as Function, null ,'createDiffieHellman');
    }

    @Test
    public __createECDH___001_basic_function_exists(): void {
        let _testSubject = this.getTestSubject(createECDH, 'createECDH');
        this.verifyFunction(_testSubject as Function, null ,'createECDH');
    }

    @Test
    public __createHash___001_basic_function_exists(): void {
        let _testSubject = this.getTestSubject(createHash, 'createHash');
        this.verifyFunction(_testSubject as Function, null ,'createHash');
    }

    @Test
    public __createHmac___001_basic_function_exists(): void {
        let _testSubject = this.getTestSubject(createHmac, 'createHmac');
        this.verifyFunction(_testSubject as Function, null ,'createHmac');
    }

    @Test
    public __createSign___001_basic_function_exists(): void {
        let _testSubject = this.getTestSubject(createSign, 'createSign');
        this.verifyFunction(_testSubject as Function, null ,'createSign');
    }

    @Test
    public __createVerify___001_basic_function_exists(): void {
        let _testSubject = this.getTestSubject(createVerify, 'createVerify');
        this.verifyFunction(_testSubject as Function, null ,'createVerify');
    }

    @Test
    public __getCiphers___001_basic_function_exists(): void {
        let _testSubject = this.getTestSubject(getCiphers, 'getCiphers');
        this.verifyFunction(_testSubject as Function, null ,'getCiphers');
    }

    @Test
    public __getCurves___001_basic_function_exists(): void {
        let _testSubject = this.getTestSubject(getCurves, 'getCurves');
        this.verifyFunction(_testSubject as Function, null ,'getCurves');
    }

    @Test
    public __getDiffieHellman___001_basic_function_exists(): void {
        let _testSubject = this.getTestSubject(getDiffieHellman, 'getDiffieHellman');
        this.verifyFunction(_testSubject as Function, null ,'getDiffieHellman');
    }

    @Test
    public __getHashes___001_basic_function_exists(): void {
        let _testSubject = this.getTestSubject(getHashes, 'getHashes');
        this.verifyFunction(_testSubject as Function, null ,'getHashes');
    }

    @Test
    public __pbkdf2___001_basic_function_exists(): void {
        let _testSubject = this.getTestSubject(pbkdf2, 'pbkdf2');
        this.verifyFunction(_testSubject as Function, null ,'pbkdf2');
    }

    @Test
    public __pbkdf2Sync___001_basic_function_exists(): void {
        let _testSubject = this.getTestSubject(pbkdf2Sync, 'pbkdf2Sync');
        this.verifyFunction(_testSubject as Function, null ,'pbkdf2Sync');
    }

    @Test
    public __privateDecrypt___001_basic_function_exists(): void {
        let _testSubject = this.getTestSubject(privateDecrypt, 'privateDecrypt');
        this.verifyFunction(_testSubject as Function, null ,'privateDecrypt');
    }

    @Test
    public __privateEncrypt___001_basic_function_exists(): void {
        let _testSubject = this.getTestSubject(privateEncrypt, 'privateEncrypt');
        this.verifyFunction(_testSubject as Function, null ,'privateEncrypt');
    }

    @Test
    public __publicDecrypt___001_basic_function_exists(): void {
        let _testSubject = this.getTestSubject(publicDecrypt, 'publicDecrypt');
        this.verifyFunction(_testSubject as Function, null ,'publicDecrypt');
    }

    @Test
    public __publicEncrypt___001_basic_function_exists(): void {
        let _testSubject = this.getTestSubject(publicEncrypt, 'publicEncrypt');
        this.verifyFunction(_testSubject as Function, null ,'publicEncrypt');
    }

    @Test
    public __randomBytes___001_basic_function_exists(): void {
        let _testSubject = this.getTestSubject(randomBytes, 'randomBytes');
        this.verifyFunction(_testSubject as Function, null ,'randomBytes');
    }

    @Test
    public __setEngine___001_basic_function_exists(): void {
        let _testSubject = this.getTestSubject(setEngine, 'setEngine');
        this.verifyFunction(_testSubject as Function, null ,'setEngine');
    }
}