/*
 * Copyright (c) 2017 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */
import {AbstractVerifyRuntimeSupport} from "AbstractVerifyRuntimeSupport";
import {EventEmitter} from "events";

export public class TestEvents extends AbstractVerifyRuntimeSupport {

    @Test
    public __EventEmitter___001_listenerCount(): void {
        let _testSubject = this.getTestSubject(EventEmitter, 'EventEmitter');
        this.verifyMethod(_testSubject,'listenerCount',true, null);
    }

    @Test
    public __EventEmitter___002_addListener(): void {
        let _testSubject = this.getTestSubject(EventEmitter, 'EventEmitter');
        this.verifyMethod(_testSubject,'addListener',false, null);
    }

    @Test
    public __EventEmitter___003_on(): void {
        let _testSubject = this.getTestSubject(EventEmitter, 'EventEmitter');
        this.verifyMethod(_testSubject,'on',false, null);
    }

    @Test
    public __EventEmitter___004_once(): void {
        let _testSubject = this.getTestSubject(EventEmitter, 'EventEmitter');
        this.verifyMethod(_testSubject,'once',false, null);
    }

    @Test
    public __EventEmitter___005_removeListener(): void {
        let _testSubject = this.getTestSubject(EventEmitter, 'EventEmitter');
        this.verifyMethod(_testSubject,'removeListener',false, null);
    }

    @Test
    public __EventEmitter___006_removeAllListeners(): void {
        let _testSubject = this.getTestSubject(EventEmitter, 'EventEmitter');
        this.verifyMethod(_testSubject,'removeAllListeners',false, null);
    }

    @Test
    public __EventEmitter___007_setMaxListeners(): void {
        let _testSubject = this.getTestSubject(EventEmitter, 'EventEmitter');
        this.verifyMethod(_testSubject,'setMaxListeners',false, null);
    }

    @Test
    public __EventEmitter___008_listeners(): void {
        let _testSubject = this.getTestSubject(EventEmitter, 'EventEmitter');
        this.verifyMethod(_testSubject,'listeners',false, null);
    }

    @Test
    public __EventEmitter___009_emit(): void {
        let _testSubject = this.getTestSubject(EventEmitter, 'EventEmitter');
        this.verifyMethod(_testSubject,'emit',false, null);
    }
}
