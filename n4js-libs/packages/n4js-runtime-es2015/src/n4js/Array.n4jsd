/*
 * Copyright (c) 2017 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */
@@Global @@ProvidedByRuntime


import {IteratorExt} from "Iterator";
export public interface ~ArrayLike<T> {
    public get length(): int;
}

export public interface ~ArrayIterator<T> extends Iterator<T> {}

@Polyfill export external public class Array<T> extends Array<T> {
    public static <T> from(source: union{Iterable<T>, ArrayLike<T>, Iterator<T>, any/* TODO how to integrate ArgumentsType? */}): Array<T>; // most common signature

    public findIndex(predicate: {function(T, int, this)}, thisArg: Object=): int;
    public find(predicate: {function(T, int, this)}, thisArg: Object=): T;

    public entries(): IteratorExt<Iterable2<int, T>>;
    public keys(): IteratorExt<int>;
}

