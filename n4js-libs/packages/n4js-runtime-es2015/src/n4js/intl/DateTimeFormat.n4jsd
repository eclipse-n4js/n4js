/*
 * Copyright (c) 2017 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */
@@Global @@ProvidedByRuntime
/**
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat
 */
export external public class ~DateTimeFormat {
    public constructor(locales: union{string, Array<string>}=, options: ~DateTimeFormatOptions=);

    public resolvedOptions(): ~Object with { timeZone: string; };

    public format(date: Date): string;
}

/**
 * All possible values for DateTimeFormatOptions.
 * See DateTimeFormatOptions interface to see which set of values is
 * used for which option.
 */
@StringBased
export external public enum DateTimeFormatValue {
    narrow,
    short,
    long,
    twoDigit: "2-digit",
    numeric
}

/**
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat#Using_options
 *
 * Options used to format dates and times. Note that all possible values from the enum are not
 * necessarily valid for each option field. See each field documentation to see the valid
 * values for that option field.
 *
 */
export external public interface ~DateTimeFormatOptions {
    /**
     * The representation of the weekday.
     * Possible values are DateTimeFormatValue.narrow, DateTimeFormatValue.short, DateTimeFormatValue.long.
     */
    public weekday?: DateTimeFormatValue;

    /**
     * The representation of the era.
     * Possible values are DateTimeFormatValue.narrow, DateTimeFormatValue.short, DateTimeFormatValue.long.
     */
    public era?: DateTimeFormatValue;
    /**
     * The representation of the year.
     * Possible values are DateTimeFormatValue.numeric, DateTimeFormatValue.twoDigit.
     */
    public year?: DateTimeFormatValue;
    /**
     * The representation of the month.
     * Possible values are DateTimeFormatValue.numeric, DateTimeFormatValue.twoDigit, DateTimeFormatValue.narrow, DateTimeFormatValue.short, DateTimeFormatValue.long.
     */
    public month?: DateTimeFormatValue;
    /**
     * The representation of the day.
     * Possible values are DateTimeFormatValue.numeric, DateTimeFormatValue.twoDigit.
     */
    public day?: DateTimeFormatValue;
    /**
     * The representation of the hour.
     * Possible values are DateTimeFormatValue.numeric, DateTimeFormatValue.twoDigit.
     */
    public hour?: DateTimeFormatValue;
    /**
     * The representation of the minute.
     * Possible values are DateTimeFormatValue.numeric, DateTimeFormatValue.twoDigit.
     */
    public minute?: DateTimeFormatValue;
    /**
     * The representation of the second.
     * Possible values are DateTimeFormatValue.numeric, DateTimeFormatValue.twoDigit.
     */
    public second?: DateTimeFormatValue;
    /**
     * The representation of the time zone name.
     * Possible values are DateTimeFormatValue.short, DateTimeFormatValue.long.
     */
    public timeZoneName?: DateTimeFormatValue;
}

/* -*- mode: typescript;-*- */
