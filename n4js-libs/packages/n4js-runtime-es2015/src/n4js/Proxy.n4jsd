/*
 * Copyright (c) 2017 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */
@@Global @@ProvidedByRuntime

export external public interface ~ProxyHandler<T extends Object> {
    public construct?: {function(/*target: */T, /*argumentsList: */Array<any>): Object};
    public apply?: {function(/*target: */T, /*thisArg: */Object, /*argumentsList: */Array<any>): any};
    public has?: {function(/*target: */T, /*property: */union{string, symbol}): boolean};
    public get?: {function(/*target: */T, /*property: */union{string, symbol}, /*receiver: */T): any};
    public set?: {function(/*target: */T, /*property: */union{string, symbol}, /*value: */any, /*receiver: */T): boolean};
    public deleteProperty?: {function(/*target:  */T, /*property: */union{string, symbol}): boolean};
    public defineProperty?: {function(/*target:  */T, /*property: */union{string, symbol}, /*descriptor: */Object): boolean};
    public ownKeys?: {function(/*target:  */T): Array<union{symbol, string}>};

    public getOwnPropertyDescriptor?: {function(/*target:  */T, /*property: */union{string, symbol}): Object?};
    public getPrototypeOf?: {function(/*target:  */T): Object};
    public isExtensible?: {function(/*target:  */T): boolean};
    public preventExtensions?: {function(/*target:  */T): boolean};
    public setPrototypeOf?: {function(/*target:  */T, /*proto: */Object): void};
}

@Final export external public class Proxy<T extends Object> {
    /**
     * Creates a proxy for the given target.
     */
    public constructor(target: T, handler: ~ProxyHandler<T>)/*: T*/;

    /**
     * Creates a revocable proxy, i.e. {proxy, revoke function}.
     *
     * Calling revoke() redners the proxy unusable, any trap will throw a TypeError.
     * Revoked proxies can be garbage collected.
     */
    public static <T extends Object> revocable(target: T, handler: ~ProxyHandler<T>): ~Object with { proxy: T; revoke: Function; };
}

/* -*- mode: typescript;-*- */
