/*
 * Copyright (c) 2018 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

import {accessSync} from "fs";
import {constants} from "fs";
import {mkdtemp} from "fs";
import {readFileSync} from "fs";
import {join} from "path";
import * as os from "os";
import {mkdirSync} from "fs";
import {existsSync} from "fs";
import {sep} from "path";
import {dirname} from "path";
import {writeFileSync} from "fs";

export public const n4jsFileExt_re = /\.n4js[xd]?$/;

/**
 * Safe check in access of a path.
 */
export public function fsSafeAccessSync(path: string, mode = constants.R_OK): boolean {
    try {
        accessSync(path, mode);
        return true;
    } catch (exc) {
        return false;
    }
}

export public function mkdirp(path: string, mode: int=): void {
    if (!existsSync(path)) {
        mkdirp(path.substring(0, path.lastIndexOf(sep)), mode);
        mkdirSync(path, mode);
    }
}

export public async function createTempDir(): string {
    const prefix = join(os.tmpdir(), "n4js-mangelhaft-");
    return await mkdtemp(prefix);
}

export public function readJsonFile(path: string): Object+ {
    const content = String(readFileSync(path, { encoding: "UTF-8" }));
    return JSON.parse(content) as Object+;
}

export public function outputTextFile(filePath: string, content: string): void {
    const dir = dirname(filePath);
    mkdirp(dir);
    writeFileSync(filePath, content, { encoding: "UTF-8" });
}
