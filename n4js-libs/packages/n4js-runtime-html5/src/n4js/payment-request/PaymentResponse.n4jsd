/*
 * Copyright (c) 2021 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */
@@Global @@ProvidedByRuntime
 
import {PaymentValidationErrors} from "payment-request/PaymentValidationErrors";

/**
 * @see https://w3c.github.io/payment-request/#paymentresponse-interface
 */
@Final
export external public class PaymentResponse implements EventTarget {
    private constructor();

    @Override
    public dispatchEvent(event: Event): boolean;

    public toJSON(): Object;
    public get requestId?(): string;
    public get methodName?(): string;
    public get details(): Object;
    public get shippingAddress?(): PaymentAddress;
    public get shippingOption?(): string;
    public get payerName?(): string;
    public get payerEmail?(): string;
    public get payerPhone?(): string;

    /**
     * @see https://w3c.github.io/payment-request/#dom-paymentresponse-complete
     */
    public async complete(result: string = /* PaymentComplete.unknown */): void;
    
    /**
     * @see https://w3c.github.io/payment-request/#retry-method
     */
    public async retry(errorFields: PaymentValidationErrors): void;

    public onpayerdetailchange?: Function;

    @Override
    public <EventT extends Event> addEventListener(type: string, listener: (EventT) => void, optionsOrUseCapture: Object|boolean=): void;
    @Override
    public <EventT extends Event> removeEventListener(type: string, listener: (EventT) => void, optionsOrUseCapture: Object|boolean=): void;
}
