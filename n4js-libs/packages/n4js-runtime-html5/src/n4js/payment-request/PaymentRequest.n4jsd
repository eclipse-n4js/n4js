/*
 * Copyright (c) 2021 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */
@@Global @@ProvidedByRuntime

import {PaymentDetailsInit} from "payment-request/PaymentDetailsInit";
import {PaymentDetailsUpdate} from "payment-request/PaymentDetailsUpdate";
import {PaymentMethodData} from "payment-request/PaymentMethodData";
import {PaymentOptions} from "payment-request/PaymentOptions";
import {PaymentShippingType} from "payment-request/PaymentShippingType";

/**
 * @see https://www.w3.org/TR/payment-request/#dom-paymentrequest
 */
@Final
export external public class PaymentRequest implements EventTarget {

    public constructor(methodData: PaymentMethodData+[], details: PaymentDetailsInit, options: PaymentOptions=);

    @Override
    public dispatchEvent(event: Event): boolean;

    public get id(): string;
    public get shippingAddress(): PaymentAddress;
    public get shippingOption(): string;
    public get shippingType(): PaymentShippingType;

    /**
     * @see https://w3c.github.io/payment-request/#show-method
     */
    public async show(detailsPromise: Promise<PaymentDetailsUpdate, any>=): PaymentResponse;
    
    /**
     * @see https://w3c.github.io/payment-request/#abort-method
     */
    public async abort(): void;
    
    /**
     * @see https://w3c.github.io/payment-request/#canmakepayment-method
     */
    public async canMakePayment(): boolean;

    public onmerchantvalidation: Function;
    public onshippingaddresschange: Function;
    public onshippingoptionchange: Function;
    public onpaymentmethodchange: Function;

    @Override
    public <EventT extends Event> addEventListener(type: string, listener: (EventT) => void, optionsOrUseCapture: Object|boolean=): void;
    @Override
    public <EventT extends Event> removeEventListener(type: string, listener: (EventT) => void, optionsOrUseCapture: Object|boolean=): void;
}
