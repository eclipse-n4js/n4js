/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */
@@Global @@ProvidedByRuntime

export external public abstract class Element extends Node implements EventTarget {
    public get children(): NodeList<? extends Element>;
    public className: string;
    public classList: DOMTokenList;
    public id: string;
    @Final public tagName: string;
    public innerHTML: string;
    @Final public scrollHeight: number;
    @Final public scrollWith: number;
    public scrollLeft: number;
    public scrollTop: number;
    public getAttribute(name: string): string;
    public removeAttribute(name: string): void;
    public setAttribute(name: string, value: any): void;
    public setAttributeNS(ns: string, name: string, value: any): void;
    public getBoundingClientRect(): ClientRect;
    public getClientRects(): Object;

    public dispatchEvent(event: Event): void;
    @Override public cloneNode(deep: boolean): Element;

    public matches(selector: string): boolean;
    public closest(selector: string): Element;

    //public const ALLOW_KEYBOARD_INPUT;

    public querySelector(selector: string): Element;
    public getElementsByClassName(name: string): NodeList<? extends Element>;
    public getElementsByTagName(name: string): NodeList<? extends Element>;
    public querySelectorAll(selector: string): NodeList<? extends Element>;
}
