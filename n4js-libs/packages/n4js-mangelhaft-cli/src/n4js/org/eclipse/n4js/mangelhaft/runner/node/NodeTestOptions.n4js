/*
 * Copyright (c) 2018 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */
import { XUnitReportSpec } from "org/eclipse/n4js/mangelhaft/reporter/xunit/XUnitReporter"

/**
 * All options of the test runner/compilation.
 */
export default public class ~NodeTestOptions extends XUnitReportSpec {
    /**
     * Scan for projects in directories.
     */
    public scan: Array<string>;
    
    /**
     * Project directories.
     */
    public projects: Array<string>;
    
    /**
     * Filter for matching test cases.
     */
    public filter: Array<string>;

    /**
     * Definition of n4js runtime options key=value.
     */
    public define: Array<string>;

    /**
     * Compiles the given targets, generating a test catalog.
     */
    public compile: boolean;
    
    /**
     * Clean the output folder before compiling.
     */
    public cleanCompile: boolean;

    /**
     * Keep compiling - even if errors are encountered.
     */
    public keepCompiling: boolean;

    /**
     * Test catalog (JSON) to be used. If file path, will be written on --compile.
     */
    public testCatalog: string;

    /**
     * When compiling, local project test catalog files are written to the targeted
     * project folders under the given path, e.g. test-catalog.json.
     */
    public emitProjectTestCatalogs: string;
    
    /**
     * When compiling, write a __bundle-gen.js CommonJS module to bulk register generated code modules.
     */
    public generatedModulesGlob: string;

    /**
     * Skips NPM dependency installation, assuming already existing.
     */
    public targetPlatformSkipInstall: boolean;
    
    /**
     * Library manager .npmrc directory.
     */
    public npmrcRootLocation: string;

    /**
     * Debug output.
     */
    public debug: boolean;

    /**
     * Attach V8 Inspector with --inspect-brk.
     */
    public inspectBrk: int;

    /**
     * scope in which to run tests 
     */
    public testScope: string;
    
    /**
     * if set turns off console log output 
     */
    public quiet: boolean;

    /**
     * if set turns off debug logs 
     */
    public noDebugLog: boolean;
    /**
     * if set does not log passing nor skipped tests (but still runs them) 
     */
    public showOnlyErrors: boolean;
}
