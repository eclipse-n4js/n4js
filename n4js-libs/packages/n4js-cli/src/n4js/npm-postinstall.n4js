/*
 * Copyright (c) 2018 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */
/*eslint-disable no-console */
"use strict";

import * as lib_n4jsc from "n4jsc";
import * as lib_fs from "fs";
import * as lib_http from "n4js-runtime-node/http";
import * as lib_https from "n4js-runtime-node/https";
import * as log+ from "npmlog";


const JAR_PATH = process.env.N4JSC_JAR as string;
const NPM_NAME = process.env.npm_package_name ?? "n4js-cli";
const NPM_VERSION = process.env.npm_package_version ? "@"+process.env.npm_package_version : "";
const LOG_NAME = NPM_NAME + NPM_VERSION;
const LOG_FN = (text: string) => {log.info(LOG_NAME, text);}


if (JAR_PATH) {
    const outPath = lib_n4jsc.getN4jscPath();
    LOG_FN(`Replacing ${outPath} with ${JAR_PATH}`);

    if (lib_fs.existsSync(outPath)) {
        lib_fs.unlinkSync(outPath); // remove to notice any problems
    }

    // minimal dep just against wget
    if (/^https?:\/\//i.test(JAR_PATH)) {
        const stream = lib_fs.createWriteStream(outPath);
        const download = (url: string) => {

            const callback = (resp: lib_http.IncomingMessage) => {
                if (Math.trunc(resp.statusCode /100) === 3 && resp.headers.location) { // redirect
                    download(resp.headers.location as string);
                } else {
                    if (resp.statusCode !== 200) {
                        throw new Error(`Request on ${url} failed: ${resp.statusCode}`);
                    }
                    resp.pipe(stream);
                }
            };

            if (/^http:\/\//i.test(url)) {
                lib_http.get(url, undefined, callback);
            } else {
                lib_https.get(url, undefined, callback);
            }
        };
        download(JAR_PATH);
    } else {
        lib_fs.copyFileSync(JAR_PATH, outPath);
    }
}

lib_n4jsc.ensureJRE(LOG_FN);
