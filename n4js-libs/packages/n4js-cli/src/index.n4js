/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

/*eslint-disable no-console */

import {resolve as pathResolve} from "path";
import {spawn} from "child_process";


@StringBased
export public enum Goal {
    compile,
    lsp,
    api,
    watch
}

export public interface Options {
    public version?: boolean;
    public help?: boolean;
    /** Clean the output folder before compiling. */
    public clean?: boolean;
    public noPersist?: boolean;
    public noTests?: boolean;
    public showSetup?: boolean;
    public stdio?: boolean;
    public testOnly?: boolean;
    public verbose?: boolean;
    public maxErrs?: int;
    public maxWarns?: int;
    public port?: int;
    /** Test catalog (JSON) to be used. If file path, will be written on --compile. */
    public testCatalog?: string;
}

/**
 * Calls n4jsc with the given set of arguments, e.g.
 *
 * "port": "1234"
 * "clean": true
 *
 * Any stdout/stderr will be logged as is.
 *
 * Call `n4jsc -h` for more details.
 *
 * Returns a promise.
 */
export public async function n4jsc(goal: Goal, dir: string, options: ~Options+ =) {
    return new Promise<int, int>((resolve, reject) => {
        const args = ["-jar", pathResolve(__dirname, "..", "bin", "n4jsc.jar"), goal, dir];
        const optionsFieldNames = Options.n4type.dataFields().map((value, index, traversedObject) => {return value.name;});

        for (const key of Object.keys(options)) {
            if (optionsFieldNames.indexOf(key) >= 0) {
                const value = options[key] as string;
                args.push((key.length > 1 ? "--" : "-") + key);
                if (typeof value !== "boolean") {
                    args.push(value);
                }
            }
        }
        
        console.log("Call n4jsc with args: " + args);

        spawn("java", args, {
            stdio: "inherit",
            env: Object.assign({ NODEJS_PATH: process.argv[0] }, process.env)
        }).on("close", (code: int) => {
            if (code === 0) {
                resolve(0);
            } else {
                reject(code);
            }
        });
    });
}
