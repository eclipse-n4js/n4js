/*
 * Copyright (c) 2017 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

import {IFIXME} from "org/eclipse/n4js/mangelhaft/Test";
import {IFIXME2} from "org/eclipse/n4js/mangelhaft/Test";
import {Assert} from "org/eclipse/n4js/mangelhaft/assert/Assert";
import {FIXME2Mock} from "org/eclipse/n4js/mangelhaft/test/helper/FIXMEMock";
@GenerateInjector
class HiddenDIC{}

class FIXME3 implements IFIXME {
    @Override
    public get logStr() {
        return "FIXME_local joe from Mangelhaft";
    }
}

@Binder
@Bind(IFIXME, FIXME3)
@Bind(IFIXME2, FIXME2Mock)
class DirectTestBinder {}

@GenerateInjector
@WithParentInjector(HiddenDIC)
@UseBinder(DirectTestBinder)
export public class DirectInjectionIncompatibleParent {

    /**
     * Since Parent DIComponent used for this class is hidden, and not accessible outside module,
     * no test runner should be able to initiate this class properly.
     * We expect for this test to actually not be executed, or be 'skipped'.
     * If test gets executed it fails to indicate, that there is an issue in the test runners / test framework.
     */
    @Test
    skippedTest(){
        Assert.fail("Should never be reached");
    }
}

