@@Global @@ProvidedByRuntime

@Polyfill
export external public class Symbol extends Symbol {
	public static get asyncIterator(): symbol;
}

export external public interface ~AsyncIterator<T,TReturn,TNext> {
	next(...args: any+ | any+): Promise<IteratorResult<T,TReturn>>;
	return(value: TReturn | PromiseLike<TReturn> = ): Promise<IteratorResult<T,TReturn>>;
	throw(e: any = ): Promise<IteratorResult<T,TReturn>>;
}

export external public interface ~AsyncIterable<T> {
	[Symbol.asyncIterator](): AsyncIterator<T>;
}

export external public interface ~AsyncIterableIterator<T> extends AsyncIterator<T> {
	[Symbol.asyncIterator](): AsyncIterableIterator<T>;
}
