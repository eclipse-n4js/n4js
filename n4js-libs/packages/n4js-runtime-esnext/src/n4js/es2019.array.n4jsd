// generated from https://github.com/microsoft/TypeScript/blob/5d0d7ae85d1ff52d3ef4cb6cac653f33f7e76724/src/lib/es2019.array.d.ts
// (for license information of original file see https://github.com/microsoft/TypeScript/blob/main/LICENSE.txt)

@@Global @@ProvidedByRuntime

export external public type FlatArray<Arr,Depth extends number> = any+;

@Polyfill
@EcmaScript
export external public class Array<T=any> extends Array<T> {
	public <U,This> flatMap(callback: {@This(This) function(value: T, index: number, array: Array<T>): (U | ReadonlyArray<U>)}, thisArg: This = ): Array<U>;
	public <A,D extends number> flat(depth: D = ): Array<FlatArray<A,D>>;
}
