{
  "author" : {
    "name" : "Guy Bedford"
  },
  "bugs" : {
    "url" : "https://github.com/systemjs/systemjs/issues"
  },
  "dependencies" : {
    "when" : "^3.7.5"
  },
  "description" : "Universal dynamic module loader",
  "devDependencies" : {
    "babel-core" : "^5.8.22",
    "qunit" : "^0.6.2",
    "traceur" : "0.0.105",
    "typescript" : "^1.6.2",
    "uglify-js" : "~2.4.23"
  },
  "files" : [ "index.js", "dist" ],
  "homepage" : "https://github.com/systemjs/systemjs#readme",
  "license" : "MIT",
  "name" : "systemjs",
  "optionalDependencies" : { },
  "readme" : "SystemJS\n========\n\n[![Build Status][travis-image]][travis-url]\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/systemjs/systemjs?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge) \n[![Support](https://supporterhq.com/api/b/33df4abbec4d39260f49015d2457eafe/SystemJS)](https://supporterhq.com/support/33df4abbec4d39260f49015d2457eafe/SystemJS)\n\nUniversal dynamic module loader - loads ES6 modules, AMD, CommonJS and global scripts in the browser and NodeJS.\n\n* [Loads any module format](docs/module-formats.md) with [exact circular reference and binding support](https://github.com/ModuleLoader/es6-module-loader/blob/v0.17.0/docs/circular-references-bindings.md).\n* Loads [ES6 modules compiled into the `System.register` bundle format for production](docs/production-workflows.md), maintaining circular references support.\n* Supports RequireJS-style [map](docs/overview.md#map-config), [paths](https://github.com/ModuleLoader/es6-module-loader/blob/master/docs/loader-config.md#paths-implementation), [bundles](docs/production-workflows.md#bundle-extension) and [global shims](docs/module-formats.md#shim-dependencies).\n* [Loader plugins](docs/overview.md#plugin-loaders) allow custom transpilation or asset loading.\n\nBuilt to the format ES6-specified loader API from [ES6 Specification Draft Rev 27, Section 15](http://wiki.ecmascript.org/doku.php?id=harmony:specification_drafts#august_24_2014_draft_rev_27),\nand will be updated to the [WhatWG loader API](https://whatwg.github.io/loader/) as soon as it can be considered stable for implementation.\n\n~19KB minified and gzipped, runs in IE8+ and NodeJS.\n\nFor discussion, join the [Gitter Room](https://gitter.im/systemjs/systemjs).\n\nDocumentation\n---\n\n* [ES6 Modules Overview](docs/es6-modules-overview.md)\n* [SystemJS Overview](docs/overview.md)\n* [Config API](docs/config-api.md)\n* [Module Formats](docs/module-formats.md)\n* [Production Workflows](docs/production-workflows.md)\n* [System API](docs/system-api.md)\n* [Creating Plugins](docs/creating-plugins.md)\n\nBasic Use\n---\n\n### Browser\n\n```html\n<script src=\"system.js\"></script>\n<script>\n  // set our baseURL reference path\n  SystemJS.config({\n    baseURL: '/js'\n  });\n\n  // loads /js/main.js\n  SystemJS.import('main.js');\n</script>\n```\n\nThe above will support loading all module formats, including ES Modules transpiled into the System.register format.\n\nTo load ES6 code with in-browser transpilation, configure one of the following transpiler plugins:\n\n* [Babel](https://github.com/systemjs/plugin-babel)\n* [TypeScript](https://github.com/frankwallis/plugin-typescript)\n* [Traceur](http://github.com/systemjs/plugin-traceur)\n\n### Promise Polyfill\n\nSystemJS relies on `Promise` being present in the environment.\n\nFor the best performance in IE and older browsers, it is advisable to load a polyfill like [Bluebird](https://github.com/petkaantonov/bluebird) or [es6-promise](https://github.com/stefanpenner/es6-promise) before SystemJS.\n\nOtherwise, when Promise is not available, SystemJS will attempt to load the `system-polyfills.js` file located in the dist folder which contains the when.js Promise polyfill.\n\n### NodeJS\n\nTo load modules in NodeJS, install SystemJS with:\n\n```\n  npm install systemjs\n```\n\nIf transpiling ES6, also install the transpiler plugin, following the instructions from the transpiler project page.\n\nWe can then load modules equivalently in NodeJS as we do in the browser:\n\n```javascript\nvar SystemJS = require('systemjs');\n\n// loads './app.js' from the current directory\nSystemJS.import('./app.js').then(function(m) {\n  console.log(m);\n});\n```\n\nIf you are using jspm as a package manager you will also need to load the generated configuration.\nThe best way to do this in node is to get your `System` instance through jspm, which will automatically load your config correctly for you:\n\n```js\nvar Loader = require('jspm').Loader;\nvar SystemJS = new Loader();\n\nSystemJS.import('lodash').then(function (_) {\n console.log(_);\n});\n```\n\n### Plugins\n\nSupported loader plugins:\n\n* [CSS](https://github.com/systemjs/plugin-css)\n* [LESS](https://github.com/systemjs/plugin-less)\n* [Image](https://github.com/systemjs/plugin-image)\n* [JSON](https://github.com/systemjs/plugin-json)\n* [Text](https://github.com/systemjs/plugin-text)\n* [Node Binary](https://github.com/systemjs/plugin-node-binary)\n\nAdditional Plugins:\n\n* [Audio](https://github.com/ozsay/plugin-audio)\n* [CoffeeScript](https://github.com/forresto/plugin-coffee)\n* [Ember Handlebars](https://github.com/n-fuse/plugin-ember-hbs)\n* [Handlebars](https://github.com/davis/plugin-hbs)\n* [HTML](https://github.com/Hypercubed/systemjs-plugin-html/)\n* [Image (lazy)](https://github.com/laurentgoudet/plugin-lazyimage)\n* [Jade](https://github.com/johnsoftek/plugin-jade)\n* [Jade VirtualDOM](https://github.com/WorldMaker/system-jade-virtualdom)\n* [jst](https://github.com/podio/plugin-jst)\n* [JSX](https://github.com/floatdrop/plugin-jsx)\n* [Markdown](https://github.com/guybedford/plugin-md)\n* [raw](https://github.com/matthewbauer/plugin-raw)\n* [SASS](https://github.com/screendriver/plugin-sass)\n* [SCSS](https://github.com/kevcjones/plugin-scss)\n* [sofe](https://github.com/CanopyTax/sofe)\n* [SVG](https://github.com/vuzonp/systemjs-plugin-svg)\n* [WebFont](https://github.com/guybedford/plugin-font)\n* [WebWorkers](https://github.com/casperlamboo/plugin-worker)\n* [YAML](https://github.com/tb/plugin-yaml)\n\nGuides:\n\n* [Using plugins](docs/overview.md#plugin-loaders)\n* [Creating plugins](docs/creating-plugins.md)\n\n#### Running the tests\n\nTo install the dependencies correctly, run `bower install` from the root of the repo, then open `test/test.html` in a browser with a local server\nor file access flags enabled.\n\nLicense\n---\n\nMIT\n\n[travis-url]: https://travis-ci.org/systemjs/systemjs\n[travis-image]: https://travis-ci.org/systemjs/systemjs.svg?branch=master\n",
  "readmeFilename" : "README.md",
  "repository" : {
    "type" : "git",
    "url" : "git://github.com/systemjs/systemjs.git"
  },
  "scripts" : {
    "build" : "make",
    "perf" : "node bench/normalize-perf.js",
    "test" : "npm run test:babel && npm run test:traceur && npm run test:typescript",
    "test:babel" : "qunit -c s:./index.js -t ./test/test-babel.js",
    "test:browser" : "make test",
    "test:traceur" : "qunit -c s:./index.js -t ./test/test-traceur.js",
    "test:typescript" : "qunit -c s:./index.js -t ./test/test-typescript.js"
  },
  "version" : "0.19.40"
}
