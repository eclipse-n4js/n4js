# see NLSProcessor for description of value format
# If you change anything here, manually trigger re-compilation of IssueCodes
#
#
# doc: checks duplicate paths among different source fragment types, spec: Component/Manifest/Paths-Constraint, 0: name of the source fragment type
DUPLICATE_PATH=warning;;;Duplicate path, has been already defined in {0}.
# doc: checks duplicate paths within a source fragment definition, spec: Component/Manifest/Paths-Constraint, no parameters required
DUPLICATE_PATH_INTERNAL=error;;;Duplicate path.
# doc: checks module specifiers within a module filter definition (though doesn't take in clause in account), spec: Component/Manifest/ModuleSpecifier-Constraint, no parameters required
DUPLICATE_MODULE_SPECIFIER=error;;;Duplicate module specifier.
# doc: checks if the module specifier wildcard can be resolved to an existing resource (not applied for implementation provided by runtime), spec: Component/Manifest/ModuleSpecifier-Constraint, 0: the module specifier
NON_EXISTING_MODULE_SPECIFIER=warning;;;Module specifier {0} doesn't exist.
# doc: checks if the specifier of the main module does not exist
NON_EXISTING_MAIN_MODULE=error;;;Main module specifier {0} does not exist.
# doc: checks if the path can be resolved to an existing resource, spec: Component/Manifest/Paths-Constraint, 0: the path
NON_EXISTING_PATH=error;;;Path {0} doesn't exist.
# doc: same as NON_EXISTING_PATH, but as a warning instead of an error intended for source containers, spec: Component/Manifest/Paths-Constraint, 0: the path
NON_EXISTING_SOURCE_PATH=warning;;;Source path {0} doesn't exist.
# doc: checks if the resolved path doesn't point to a file, spec: Component/Manifest/Paths-Constraint, 0: the path
NO_FOLDER_PATH=error;;;Path {0} points to a file, but it should point to a folder.
# doc: only allow folders in module filters that are declared as source folders, spec: Component/Manifest/ModuleSpecifier-Constraint, 0: folder name
SRC_IN_IN_IS_NO_DECLARED_SOURCE=error;;;The given {0} isn't declared as source container in this manifest.
# doc: checks if the projectId matches the file system folder name of the project, spec: Component/Manifest/General-Constraint, 0: the projectId, 1: the folder name
PROJECT_NAME_MISMATCH=error;;;The projectId "{0}" defined in N4JS manifest doesn't match project folder name "{1}" used in file system.
# doc: checks if the projectId matches the Eclipse workspace project name, spec: Component/Manifest/General-Constraint, 0: the projectId, 1: the Eclipse project name
PROJECT_NAME_ECLIPSE_MISMATCH=error;;;The projectId "{0}" defined in N4JS manifest doesn't match project name "{1}" used in Eclipse workspace.
# doc: only allow one module filter per type, spec: Component/Manifest/ModuleSpecifier-Constraint, 0: module filter type name
MULTIPLE_MODULE_FILTERS_FOR_SAME_TYPE=error;;;There is already a module filter for {0} defined.
# doc: only one library path allowed as current container implementation looks for one folder, spec: Component/Manifest/Paths-Constraint, no parameters required
MULTIPLE_LIBRARY_PATHS=error;;;There must be only one library path.
# doc: checks duplicate runtime library specification, 0: name of the library
DUPLICATE_RUNTIME_LIBRARY=error;;;Duplicate runtime library {0}.
# doc: output folder have to be in place, spec: Component/Manifest/General-Constraint, no parameters required
NO_OUTPUT_FOLDER=error;;;There is no output folder defined, so compilation isn't possible.
# no parameters required
WILDCARD_NOT_ALLOWED=error;;;Wild card not allowed in this place.
# doc: checks for invalid wildcards, spec: Component/Manifest/ModuleSpecifierWildcardConstraints, 0: the invalid part of the wild card
INVALID_WILDCARD=error;;;"{0}" isn't a valid character sequence in a wild card.
# doc: disallow relative navigation, spec: Component/Manifest/ModuleSpecifierWildcardConstraints, no parameters required
NO_RELATIVE_NAVIGATION=error;;;Relative navigation isn't allowed in a module specifier.
# doc: disallow switching off semantic validation for n4js files, spec: Component/Manifest/ModuleSpecifier-Constraint, 0: noValidate or noModuleWrap
DISALLOWED_NO_VALIDATE_FOR_N4JS=error;;;{0} paths shouldn't match n4js files.
# no parameters required
APIIMPL_MISSING_IMPL_ID=error;;;When defining one or more implemented projects, you also have to define an implementation ID, using property 'ImplementationId'.
# no parameters required
APIIMPL_MISSING_IMPL_PROJECTS=error;;;When defining an implementation ID, you also have to define one or more API projects that are implemented by this project, using property 'ImplementedProjects'.
# no parameters required
APIIMPL_REFLEXIVE=error;;;An implementation project may not implement itself.
