/**
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */
grammar org.eclipse.n4js.n4mf.N4MF with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/n4js/n4mf/N4MF"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

ProjectDescription:
		('ProjectId'		':' projectId=N4mfIdentifier)
	&	('ProjectType' 		':' projectType=ProjectType)
	&	('ProjectVersion'	':' projectVersion=DeclaredVersion)
	&	('VendorId' 		':' vendorId=N4mfIdentifier)
	&	('VendorName' 		':' vendorName=STRING)?

	&	('MainModule'		':' mainModule=STRING)?

	// only available for runtime environments
	&	('ExtendedRuntimeEnvironment' ':' extendedRuntimeEnvironment=ProjectReference)?

	// only in case of runtime libraries or runtime environment:
	&	('ProvidedRuntimeLibraries' '{' (providedRuntimeLibraries+=ProjectReference (',' providedRuntimeLibraries+=ProjectReference)*)? '}')?

	// not available in runtime environments:
	&	('RequiredRuntimeLibraries' '{' (requiredRuntimeLibraries+=ProjectReference (',' requiredRuntimeLibraries+=ProjectReference)*)? '}')?

	// only available in N4JS components (Apps, Libs, Processor)
	&	('ProjectDependencies' '{' (projectDependencies+=ProjectDependency (',' projectDependencies+=ProjectDependency)*)? '}')?

	// only available in N4JS components (Apps, Libs, Processor)
	&	('ImplementationId' ':' implementationId=N4mfIdentifier)?

	// only available in N4JS components (Apps, Libs, Processor)
	&	('ImplementedProjects' '{' (implementedProjects+=ProjectReference (',' implementedProjects+=ProjectReference)*)? '}')?

	//only RuntimeLibrary and RuntimeEnvironemnt
	&	('InitModules'		'{' (initModules+=BootstrapModule (',' initModules+=BootstrapModule)*)? '}' )?
	&	('ExecModule'		':' execModule=BootstrapModule)?

	&	('Output' 			':' outputPathRaw=STRING)?
	&	('Libraries' 		'{' libraryPathsRaw+=STRING (',' libraryPathsRaw+=STRING)* '}')?
	&	('Resources' 		'{' resourcePathsRaw+=STRING (',' resourcePathsRaw+=STRING)* '}')?
	&	('Sources' 			'{' sourceContainers+=SourceContainerDescription+ '}')?

	& 	('ModuleFilters'	'{' moduleFilters+=ModuleFilter+ '}')?

	&	('TestedProjects'	'{' (testedProjects+=ProjectDependency (',' testedProjects+=ProjectDependency)*)? '}')?

	&	('ModuleLoader'		':' moduleLoader=ModuleLoader)?
;

enum ProjectType :
	APPLICATION = 'application' |
	PROCESSOR = 'processor' |
	LIBRARY = 'library' |
	API = 'API' |
	RUNTIME_ENVIRONMENT = "runtimeEnvironment" |
	RUNTIME_LIBRARY = "runtimeLibrary" |
	TEST = "test" |
	VALIDATION = "validation"
;

//TODO build meta data not supported https://semver.org/#spec-item-10
DeclaredVersion :
	major=INT ('.' minor=INT ('.' micro=INT)?)? ('-' qualifier=N4mfIdentifier)?
;

SourceContainerDescription:
	sourceContainerType=SourceContainerType '{' pathsRaw+=STRING (',' pathsRaw+=STRING)* '}'
;

enum SourceContainerType :
	SOURCE = 'source' | EXTERNAL = 'external' | TEST = 'test'
;

ModuleFilter:
	moduleFilterType=ModuleFilterType '{'
		moduleSpecifiers+=ModuleFilterSpecifier (',' moduleSpecifiers+=ModuleFilterSpecifier)* '}'
;

BootstrapModule:
	moduleSpecifierWithWildcard=STRING ('in' sourcePath=STRING)?
;


ModuleFilterSpecifier:
	moduleSpecifierWithWildcard=STRING ('in' sourcePath=STRING)?
;

enum ModuleFilterType:
	NO_VALIDATE = 'noValidate' | NO_MODULE_WRAPPING = 'noModuleWrap'
;

/*
 * scope is optional, default scope is compile
 */
ProjectReference:
	ProjectIdWithOptionalVendor
;

/*
 * scope is optional, default scope is compile
 */
ProjectDependency:
	ProjectIdWithOptionalVendor
	(versionConstraint=VersionConstraint)?
	(declaredScope=ProjectDependencyScope)?
;

/*
 * vendorN4mfIdentifier is optional, if it is not specified, vendor id of current project is used.
 */
fragment ProjectIdWithOptionalVendor*:
	(declaredVendorId=N4mfIdentifier ':')? projectId=N4mfIdentifier
;

/*
 * If no version range is specified, lower version is inclusive.
 */
VersionConstraint:
	(
		(exclLowerBound?='(' | '[')  lowerVersion=DeclaredVersion
			((',' upperVersion=DeclaredVersion (exclUpperBound?=')' | ']') )? | ')')
	) | lowerVersion=DeclaredVersion
;


enum ProjectDependencyScope :
	COMPILE = 'compile' | TEST = 'test'
;

enum ModuleLoader:
	N4JS = 'n4js'
|	COMMONJS = 'commonjs'
|	NODE_BUILTIN = 'node_builtin'
;

N4mfIdentifier :
	ID |
	'ProjectId' |
	'ProjectType' |
	'ProjectVersion' |
	'VendorId' |
	'VendorName' |
	'Output' |
	'Libraries' |
	'Resources' |
	'Sources' |
	'ModuleFilters' |
	'ProjectDependencies'
	'system' |
	'API' |
	'user' |
	'application' |
	'processor'
	'source' |
	'content' |
	'test'
;

@Override
terminal ID:
	'^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'-'|'.'|'0'..'9')*
;
