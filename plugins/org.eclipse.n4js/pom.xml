<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (c) 2016 NumberFour AG.
All rights reserved. This program and the accompanying materials
are made available under the terms of the Eclipse Public License v1.0
which accompanies this distribution, and is available at
http://www.eclipse.org/legal/epl-v10.html

Contributors:
  NumberFour AG - Initial API and implementation
-->
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>org.eclipse.n4js</artifactId>
	<packaging>eclipse-plugin</packaging>

	<parent>
		<groupId>org.eclipse.n4js</groupId>
		<artifactId>org.eclipse.n4js.plugins</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<properties>
		<skip.mwe2>false</skip.mwe2>
		<mwe2-file-location>/src/org/eclipse/n4js/GenerateN4JS.mwe2</mwe2-file-location>
		<!-- fornax: -->
		<mwe2descriptor>org.eclipse.n4js.GenerateN4JS</mwe2descriptor>
	</properties>
	
	<dependencies>
		<!--
		Explicit dependencies to antlr additional to the Manifest.mf files are necessary because:
		- we use antlr in version 3.2 due to Xtext
		- we use antlr in version 4.7.2 for parsing d.ts files
		- Eclipse Orbit provides both of these dependencies with the same artifact id
		- Maven does not support having the same artifact in two different versions
		- Maven installs the latest version of an artifact in case there are multiple versions
		As a result, antlr in version 3.2 would be missing without explicit dependency.
		-->
		<dependency>
		    <groupId>org.antlr</groupId>
		    <artifactId>antlr-runtime</artifactId>
		    <version>3.2</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
			</plugin>
<!--
 # Switch back to the exec plugin, problem is that fornax plugin creates command line call exceeding 32K characters
 # which breaks Windows api https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247(v=vs.85).aspx 
			<plugin>
				<groupId>org.fornax.toolsupport</groupId>
				<artifactId>fornax-oaw-m2-plugin</artifactId>
				<version>${fornax-oaw-m2-plugin.version}</version>
			</plugin>
 -->
		
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>mwe2-launcher</id>
						<configuration>
							<additionalClasspathElements>
								<additionalClasspathElement>${additional-classes-of-n4ide.unicode}</additionalClasspathElement>
								<additionalClasspathElement>${additional-classes-of-n4ide.releng.utils}</additionalClasspathElement>
							</additionalClasspathElements>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.eclipse.n4js</groupId>
						<artifactId>org.eclipse.n4js.ts.model</artifactId>
						<version>${project.version}</version>
					</dependency>
					<dependency>
						<groupId>org.eclipse.n4js</groupId>
						<artifactId>org.eclipse.n4js.ts</artifactId>
						<version>${project.version}</version>
					</dependency>
					<dependency>
						<groupId>org.eclipse.n4js</groupId>
						<artifactId>org.eclipse.n4js.model</artifactId>
						<version>${project.version}</version>
					</dependency>
					<dependency>
						<groupId>org.eclipse.n4js</groupId>
						<artifactId>org.eclipse.n4js.utils</artifactId>
						<version>${project.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			
			<plugin>
				<groupId>org.eclipse.xtend</groupId>
				<artifactId>xtend-maven-plugin</artifactId>
			</plugin>
		
		</plugins>
	</build>
	
</project>
